{"/home/travis/build/npmtest/node-npmtest-compressjs/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_compressjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/lib.npmtest_compressjs.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/lib.npmtest_compressjs.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_compressjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_compressjs = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_compressjs = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-compressjs && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_compressjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_compressjs","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_compressjs.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_compressjs.rollup.js'] =","            local.assetsDict['/assets.npmtest_compressjs.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_compressjs.__dirname + '/lib.npmtest_compressjs.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/main.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{"1":[1,0]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":307},"end":{"line":2,"column":462}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":79}},"2":{"start":{"line":1,"column":36},"end":{"line":1,"column":77}},"3":{"start":{"line":2,"column":0},"end":{"line":29,"column":3}},"4":{"start":{"line":4,"column":4},"end":{"line":28,"column":7}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":1,"column":0}},{"start":{"line":1,"column":0},"end":{"line":1,"column":0}}]}},"code":["if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./lib/freeze','./lib/BitStream','./lib/Stream','./lib/BWT','./lib/Context1Model','./lib/DefSumModel','./lib/FenwickModel','./lib/MTFModel','./lib/NoModel','./lib/Huffman','./lib/RangeCoder','./lib/BWTC','./lib/Bzip2','./lib/Dmc','./lib/Lzjb','./lib/LzjbR','./lib/Lzp3','./lib/PPM','./lib/Simple'], function(freeze,BitStream,Stream,BWT,Context1Model,DefSumModel,FenwickModel,MTFModel,NoModel,Huffman,RangeCoder,BWTC,Bzip2,Dmc,Lzjb,LzjbR,Lzp3,PPM,Simple) {","    'use strict';","    return freeze({","        version: \"0.0.1\",","        // APIs","        BitStream: BitStream,","        Stream: Stream,","        // transforms","        BWT: BWT,","        // models and coder","        Context1Model: Context1Model,","        DefSumModel: DefSumModel,","        FenwickModel: FenwickModel,","        MTFModel: MTFModel,","        NoModel: NoModel,","        Huffman: Huffman,","        RangeCoder: RangeCoder,","        // compression methods","        BWTC: BWTC,","        Bzip2: Bzip2,","        Dmc: Dmc,","        Lzjb: Lzjb,","        LzjbR: LzjbR,","        Lzp3: Lzp3,","        PPM: PPM,","        Simple: Simple","    });","});",""],"l":{"1":1,"2":1,"4":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/freeze.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/freeze.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0},"b":{"1":[1,0],"2":[1,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":10},"end":{"line":2,"column":20}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":79}},"2":{"start":{"line":1,"column":36},"end":{"line":1,"column":77}},"3":{"start":{"line":2,"column":0},"end":{"line":14,"column":3}},"4":{"start":{"line":8,"column":2},"end":{"line":12,"column":3}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":25}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"7":{"start":{"line":11,"column":25},"end":{"line":11,"column":34}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":1,"column":0}},{"start":{"line":1,"column":0},"end":{"line":1,"column":0}}]},"2":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]}},"code":["if (typeof define !== 'function') { var define = require('amdefine')(module); }","define([],function(){","  'use strict';","","  // Object.freeze(), or a thunk if that method is not present in this","  // JavaScript environment.","","  if (Object.freeze) {","    return Object.freeze;","  } else {","    return function(o) { return o; };","  }","","});",""],"l":{"1":1,"2":1,"8":1,"9":1,"11":0}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/BitStream.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/BitStream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":37}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":37}}},"3":{"name":"(anonymous_3)","line":6,"loc":{"start":{"line":6,"column":9},"end":{"line":6,"column":20}}},"4":{"name":"(anonymous_4)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":38}}},"5":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":27},"end":{"line":22,"column":41}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":27},"end":{"line":29,"column":38}}},"7":{"name":"(anonymous_7)","line":39,"loc":{"start":{"line":39,"column":28},"end":{"line":39,"column":39}}},"8":{"name":"(anonymous_8)","line":45,"loc":{"start":{"line":45,"column":24},"end":{"line":45,"column":38}}},"9":{"name":"(anonymous_9)","line":50,"loc":{"start":{"line":50,"column":9},"end":{"line":50,"column":20}}},"10":{"name":"(anonymous_10)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":40}}},"11":{"name":"(anonymous_11)","line":61,"loc":{"start":{"line":61,"column":29},"end":{"line":61,"column":45}}},"12":{"name":"(anonymous_12)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":36}}},"13":{"name":"(anonymous_13)","line":80,"loc":{"start":{"line":80,"column":35},"end":{"line":80,"column":47}}},"14":{"name":"(anonymous_14)","line":93,"loc":{"start":{"line":93,"column":36},"end":{"line":93,"column":55}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":108,"column":3}},"4":{"start":{"line":5,"column":4},"end":{"line":75,"column":6}},"5":{"start":{"line":6,"column":8},"end":{"line":49,"column":22}},"6":{"start":{"line":7,"column":12},"end":{"line":7,"column":35}},"7":{"start":{"line":8,"column":12},"end":{"line":20,"column":14}},"8":{"start":{"line":9,"column":16},"end":{"line":16,"column":17}},"9":{"start":{"line":10,"column":20},"end":{"line":10,"column":47}},"10":{"start":{"line":11,"column":20},"end":{"line":14,"column":21}},"11":{"start":{"line":12,"column":24},"end":{"line":12,"column":41}},"12":{"start":{"line":13,"column":24},"end":{"line":13,"column":34}},"13":{"start":{"line":15,"column":20},"end":{"line":15,"column":47}},"14":{"start":{"line":17,"column":16},"end":{"line":17,"column":55}},"15":{"start":{"line":18,"column":16},"end":{"line":18,"column":33}},"16":{"start":{"line":19,"column":16},"end":{"line":19,"column":27}},"17":{"start":{"line":22,"column":12},"end":{"line":28,"column":14}},"18":{"start":{"line":23,"column":16},"end":{"line":23,"column":39}},"19":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}},"20":{"start":{"line":25,"column":16},"end":{"line":25,"column":34}},"21":{"start":{"line":26,"column":16},"end":{"line":26,"column":34}},"22":{"start":{"line":27,"column":16},"end":{"line":27,"column":37}},"23":{"start":{"line":29,"column":12},"end":{"line":37,"column":14}},"24":{"start":{"line":30,"column":16},"end":{"line":30,"column":44}},"25":{"start":{"line":31,"column":16},"end":{"line":31,"column":35}},"26":{"start":{"line":32,"column":16},"end":{"line":35,"column":17}},"27":{"start":{"line":33,"column":20},"end":{"line":33,"column":26}},"28":{"start":{"line":34,"column":20},"end":{"line":34,"column":28}},"29":{"start":{"line":36,"column":16},"end":{"line":36,"column":27}},"30":{"start":{"line":39,"column":12},"end":{"line":44,"column":14}},"31":{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},"32":{"start":{"line":41,"column":20},"end":{"line":41,"column":45}},"33":{"start":{"line":43,"column":16},"end":{"line":43,"column":40}},"34":{"start":{"line":45,"column":12},"end":{"line":48,"column":14}},"35":{"start":{"line":46,"column":16},"end":{"line":46,"column":33}},"36":{"start":{"line":47,"column":16},"end":{"line":47,"column":35}},"37":{"start":{"line":50,"column":8},"end":{"line":74,"column":22}},"38":{"start":{"line":51,"column":12},"end":{"line":51,"column":31}},"39":{"start":{"line":52,"column":12},"end":{"line":59,"column":14}},"40":{"start":{"line":53,"column":16},"end":{"line":53,"column":33}},"41":{"start":{"line":54,"column":16},"end":{"line":54,"column":43}},"42":{"start":{"line":54,"column":25},"end":{"line":54,"column":41}},"43":{"start":{"line":55,"column":16},"end":{"line":58,"column":17}},"44":{"start":{"line":56,"column":20},"end":{"line":56,"column":56}},"45":{"start":{"line":57,"column":20},"end":{"line":57,"column":35}},"46":{"start":{"line":61,"column":12},"end":{"line":67,"column":14}},"47":{"start":{"line":62,"column":16},"end":{"line":66,"column":17}},"48":{"start":{"line":63,"column":20},"end":{"line":63,"column":44}},"49":{"start":{"line":65,"column":20},"end":{"line":65,"column":47}},"50":{"start":{"line":68,"column":12},"end":{"line":73,"column":14}},"51":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"52":{"start":{"line":70,"column":20},"end":{"line":70,"column":37}},"53":{"start":{"line":72,"column":16},"end":{"line":72,"column":53}},"54":{"start":{"line":72,"column":36},"end":{"line":72,"column":51}},"55":{"start":{"line":77,"column":4},"end":{"line":77,"column":31}},"56":{"start":{"line":78,"column":4},"end":{"line":78,"column":58}},"57":{"start":{"line":80,"column":4},"end":{"line":92,"column":6}},"58":{"start":{"line":81,"column":8},"end":{"line":81,"column":24}},"59":{"start":{"line":82,"column":8},"end":{"line":85,"column":9}},"60":{"start":{"line":83,"column":12},"end":{"line":83,"column":44}},"61":{"start":{"line":84,"column":12},"end":{"line":84,"column":41}},"62":{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},"63":{"start":{"line":87,"column":12},"end":{"line":87,"column":20}},"64":{"start":{"line":89,"column":12},"end":{"line":89,"column":44}},"65":{"start":{"line":89,"column":38},"end":{"line":89,"column":42}},"66":{"start":{"line":91,"column":8},"end":{"line":91,"column":17}},"67":{"start":{"line":93,"column":4},"end":{"line":105,"column":6}},"68":{"start":{"line":94,"column":8},"end":{"line":100,"column":9}},"69":{"start":{"line":95,"column":12},"end":{"line":95,"column":39}},"70":{"start":{"line":96,"column":12},"end":{"line":96,"column":49}},"71":{"start":{"line":97,"column":12},"end":{"line":97,"column":39}},"72":{"start":{"line":98,"column":12},"end":{"line":98,"column":36}},"73":{"start":{"line":99,"column":12},"end":{"line":99,"column":19}},"74":{"start":{"line":101,"column":8},"end":{"line":101,"column":14}},"75":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"76":{"start":{"line":103,"column":12},"end":{"line":103,"column":47}},"77":{"start":{"line":107,"column":4},"end":{"line":107,"column":21}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":16},"end":{"line":9,"column":16}},{"start":{"line":9,"column":16},"end":{"line":9,"column":16}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":20},"end":{"line":11,"column":20}},{"start":{"line":11,"column":20},"end":{"line":11,"column":20}}]},"4":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":49},"end":{"line":17,"column":50}},{"start":{"line":17,"column":53},"end":{"line":17,"column":54}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":16}},{"start":{"line":40,"column":16},"end":{"line":40,"column":16}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":16}},{"start":{"line":54,"column":16},"end":{"line":54,"column":16}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":16}},{"start":{"line":55,"column":16},"end":{"line":55,"column":16}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":16}},{"start":{"line":62,"column":16},"end":{"line":62,"column":16}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":16}},{"start":{"line":72,"column":16},"end":{"line":72,"column":16}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"12":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]}},"code":["/** Big-Endian Bit Stream, implemented on top of a (normal byte) stream. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./Stream'],function(Stream) {","","    var BitStream = function(stream) {","        (function() {","            var bufferByte = 0x100; // private var for readers","            this.readBit = function() {","                if ((bufferByte & 0xFF) === 0) {","                    var ch = stream.readByte();","                    if (ch === Stream.EOF) {","                        this._eof = true;","                        return ch; /* !!! */","                    }","                    bufferByte = (ch << 1) | 1;","                }","                var bit = (bufferByte & 0x100) ? 1 : 0;","                bufferByte <<= 1;","                return bit;","            };","            // seekable iff the provided stream is","            this.seekBit = function(pos) {","                var n_byte = pos >>> 3;","                var n_bit = pos - (n_byte*8);","                this.seek(n_byte);","                this._eof = false;","                this.readBits(n_bit);","            };","            this.tellBit = function() {","                var pos = stream.tell() * 8;","                var b = bufferByte;","                while ((b & 0xFF) !== 0) {","                    pos--;","                    b <<= 1;","                }","                return pos;","            };","            // implement byte stream interface as well.","            this.readByte = function() {","                if ((bufferByte & 0xFF) === 0) {","                    return stream.readByte();","                }","                return this.readBits(8);","            };","            this.seek = function(pos) {","                stream.seek(pos);","                bufferByte = 0x100;","            };","        }).call(this);","        (function() {","            var bufferByte = 1; // private var for writers","            this.writeBit = function(b) {","                bufferByte <<= 1;","                if (b) { bufferByte |= 1; }","                if (bufferByte & 0x100) {","                    stream.writeByte(bufferByte & 0xFF);","                    bufferByte = 1;","                }","            };","            // implement byte stream interface as well","            this.writeByte = function(_byte) {","                if (bufferByte===1) {","                    stream.writeByte(_byte);","                } else {","                    stream.writeBits(8, _byte);","                }","            };","            this.flush = function() {","                while (bufferByte !== 1) {","                    this.writeBit(0);","                }","                if (stream.flush) { stream.flush(); }","            };","        }).call(this);","    };","    // inherit read/write methods from Stream.","    BitStream.EOF = Stream.EOF;","    BitStream.prototype = Object.create(Stream.prototype);","    // bit chunk read/write","    BitStream.prototype.readBits = function(n) {","        var i, r = 0, b;","        if (n > 31) {","            r = this.readBits(n-16)*0x10000; // fp multiply, not shift","            return r + this.readBits(16);","        }","        for (i = 0; i < n; i++) {","            r <<= 1; // this could make a negative value if n>31","            // bits read past EOF are all zeros!","            if (this.readBit() > 0) { r++; }","        }","        return r;","    };","    BitStream.prototype.writeBits = function(n, value) {","        if (n > 32) {","            var low = (value & 0xFFFF);","            var high = (value - low) / (0x10000); // fp division, not shift","            this.writeBits(n-16, high);","            this.writeBits(16, low);","            return;","        }","        var i;","        for (i = n-1; i >= 0; i--) {","            this.writeBit( (value >>> i) & 1 );","        }","    };","","    return BitStream;","});",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"17":0,"18":0,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"39":0,"40":0,"41":0,"43":0,"45":0,"46":0,"47":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"61":0,"62":0,"63":0,"65":0,"68":0,"69":0,"70":0,"72":0,"77":1,"78":1,"80":1,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"89":0,"91":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"103":0,"107":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Stream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":37}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":28}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":32},"end":{"line":10,"column":43}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":28},"end":{"line":16,"column":61}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":27},"end":{"line":26,"column":38}}},"6":{"name":"(anonymous_6)","line":28,"loc":{"start":{"line":28,"column":28},"end":{"line":28,"column":42}}},"7":{"name":"(anonymous_7)","line":31,"loc":{"start":{"line":31,"column":28},"end":{"line":31,"column":39}}},"8":{"name":"(anonymous_8)","line":35,"loc":{"start":{"line":35,"column":33},"end":{"line":35,"column":49}}},"9":{"name":"(anonymous_9)","line":39,"loc":{"start":{"line":39,"column":29},"end":{"line":39,"column":62}}},"10":{"name":"(anonymous_10)","line":47,"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":40}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":53,"column":3}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":17}},"5":{"start":{"line":6,"column":4},"end":{"line":8,"column":6}},"6":{"start":{"line":10,"column":4},"end":{"line":15,"column":6}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":39}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":54}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":40}},"11":{"start":{"line":13,"column":41},"end":{"line":13,"column":52}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":22}},"13":{"start":{"line":16,"column":4},"end":{"line":24,"column":6}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":30}},"15":{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":33}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":56}},"18":{"start":{"line":20,"column":30},"end":{"line":20,"column":47}},"19":{"start":{"line":20,"column":48},"end":{"line":20,"column":54}},"20":{"start":{"line":21,"column":12},"end":{"line":21,"column":46}},"21":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"22":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"23":{"start":{"line":26,"column":40},"end":{"line":26,"column":59}},"24":{"start":{"line":28,"column":4},"end":{"line":30,"column":6}},"25":{"start":{"line":29,"column":8},"end":{"line":29,"column":51}},"26":{"start":{"line":31,"column":4},"end":{"line":33,"column":6}},"27":{"start":{"line":32,"column":8},"end":{"line":32,"column":51}},"28":{"start":{"line":35,"column":4},"end":{"line":38,"column":6}},"29":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"30":{"start":{"line":37,"column":8},"end":{"line":37,"column":30}},"31":{"start":{"line":39,"column":4},"end":{"line":45,"column":6}},"32":{"start":{"line":40,"column":8},"end":{"line":40,"column":14}},"33":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"34":{"start":{"line":42,"column":12},"end":{"line":42,"column":47}},"35":{"start":{"line":44,"column":8},"end":{"line":44,"column":22}},"36":{"start":{"line":47,"column":4},"end":{"line":47,"column":44}},"37":{"start":{"line":50,"column":4},"end":{"line":50,"column":21}},"38":{"start":{"line":52,"column":4},"end":{"line":52,"column":26}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]}},"code":["/** Abstract Stream interface, for byte-oriented i/o. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./freeze'],function(freeze) {","    var EOF = -1;","","    var Stream = function() {","        /* ABSTRACT */","    };","    // you must define one of read / readByte for a readable stream","    Stream.prototype.readByte = function() {","        var buf = [ 0 ];","        var len = this.read(buf, 0, 1);","        if (len===0) { this._eof = true; return EOF; }","        return buf[0];","    };","    Stream.prototype.read = function(buf, bufOffset, length) {","        var ch, bytesRead = 0;","        while (bytesRead < length) {","            ch = this.readByte();","            if (ch === EOF) { this._eof = true; break; }","            buf[bufOffset+(bytesRead++)] = ch;","        }","        return bytesRead;","    };","    // reasonable default implementation of 'eof'","    Stream.prototype.eof = function() { return !!this._eof; };","    // not all readable streams are seekable","    Stream.prototype.seek = function(pos) {","        throw new Error('Stream is not seekable.');","    };","    Stream.prototype.tell = function() {","        throw new Error('Stream is not seekable.');","    };","    // you must define one of write / writeByte for a writable stream","    Stream.prototype.writeByte = function(_byte) {","        var buf = [ _byte ];","        this.write(buf, 0, 1);","    };","    Stream.prototype.write = function(buf, bufOffset, length) {","        var i;","        for (i=0; i<length; i++) {","            this.writeByte(buf[bufOffset + i]);","        }","        return length;","    };","    // flush will happily do nothing if you don't override it.","    Stream.prototype.flush = function() { };","","    // export EOF as a constant.","    Stream.EOF = EOF;","","    return freeze(Stream);","});",""],"l":{"2":1,"3":1,"4":1,"6":1,"10":1,"11":0,"12":0,"13":0,"14":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"26":1,"28":1,"29":0,"31":1,"32":0,"35":1,"36":0,"37":0,"39":1,"40":0,"41":0,"42":0,"44":0,"47":1,"50":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/BWT.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/BWT.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":31},"end":{"line":14,"column":54}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":41}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":21},"end":{"line":26,"column":44}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":18},"end":{"line":36,"column":46}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":22},"end":{"line":73,"column":44}}},"6":{"name":"(anonymous_6)","line":118,"loc":{"start":{"line":118,"column":19},"end":{"line":118,"column":47}}},"7":{"name":"(anonymous_7)","line":153,"loc":{"start":{"line":153,"column":21},"end":{"line":153,"column":49}}},"8":{"name":"(anonymous_8)","line":197,"loc":{"start":{"line":197,"column":16},"end":{"line":197,"column":49}}},"9":{"name":"(anonymous_9)","line":305,"loc":{"start":{"line":305,"column":21},"end":{"line":305,"column":54}}},"10":{"name":"(anonymous_10)","line":328,"loc":{"start":{"line":328,"column":22},"end":{"line":328,"column":57}}},"11":{"name":"(anonymous_11)","line":352,"loc":{"start":{"line":352,"column":24},"end":{"line":352,"column":52}}},"12":{"name":"(anonymous_12)","line":372,"loc":{"start":{"line":372,"column":23},"end":{"line":372,"column":55}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":79}},"2":{"start":{"line":13,"column":36},"end":{"line":13,"column":77}},"3":{"start":{"line":14,"column":0},"end":{"line":420,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":46}},"5":{"start":{"line":21,"column":4},"end":{"line":25,"column":6}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":14}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":45}},"8":{"start":{"line":23,"column":34},"end":{"line":23,"column":43}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":46}},"10":{"start":{"line":24,"column":34},"end":{"line":24,"column":44}},"11":{"start":{"line":26,"column":4},"end":{"line":33,"column":6}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":23}},"13":{"start":{"line":28,"column":8},"end":{"line":32,"column":9}},"14":{"start":{"line":29,"column":12},"end":{"line":29,"column":64}},"15":{"start":{"line":29,"column":38},"end":{"line":29,"column":50}},"16":{"start":{"line":29,"column":51},"end":{"line":29,"column":62}},"17":{"start":{"line":31,"column":12},"end":{"line":31,"column":71}},"18":{"start":{"line":31,"column":38},"end":{"line":31,"column":50}},"19":{"start":{"line":31,"column":51},"end":{"line":31,"column":69}},"20":{"start":{"line":36,"column":4},"end":{"line":71,"column":6}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":20}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":19}},"23":{"start":{"line":40,"column":8},"end":{"line":40,"column":47}},"24":{"start":{"line":40,"column":23},"end":{"line":40,"column":45}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":35}},"26":{"start":{"line":42,"column":8},"end":{"line":42,"column":18}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":25}},"28":{"start":{"line":44,"column":8},"end":{"line":44,"column":12}},"29":{"start":{"line":45,"column":8},"end":{"line":45,"column":39}},"30":{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},"31":{"start":{"line":47,"column":12},"end":{"line":56,"column":13}},"32":{"start":{"line":48,"column":16},"end":{"line":48,"column":39}},"33":{"start":{"line":49,"column":16},"end":{"line":49,"column":70}},"34":{"start":{"line":49,"column":42},"end":{"line":49,"column":52}},"35":{"start":{"line":49,"column":53},"end":{"line":49,"column":68}},"36":{"start":{"line":50,"column":16},"end":{"line":50,"column":30}},"37":{"start":{"line":51,"column":16},"end":{"line":51,"column":20}},"38":{"start":{"line":52,"column":16},"end":{"line":52,"column":47}},"39":{"start":{"line":53,"column":16},"end":{"line":53,"column":26}},"40":{"start":{"line":54,"column":19},"end":{"line":56,"column":13}},"41":{"start":{"line":55,"column":16},"end":{"line":55,"column":27}},"42":{"start":{"line":59,"column":8},"end":{"line":59,"column":47}},"43":{"start":{"line":59,"column":23},"end":{"line":59,"column":45}},"44":{"start":{"line":60,"column":8},"end":{"line":60,"column":31}},"45":{"start":{"line":61,"column":8},"end":{"line":70,"column":9}},"46":{"start":{"line":62,"column":12},"end":{"line":69,"column":13}},"47":{"start":{"line":63,"column":16},"end":{"line":63,"column":39}},"48":{"start":{"line":64,"column":16},"end":{"line":64,"column":70}},"49":{"start":{"line":64,"column":42},"end":{"line":64,"column":52}},"50":{"start":{"line":64,"column":53},"end":{"line":64,"column":68}},"51":{"start":{"line":65,"column":16},"end":{"line":65,"column":31}},"52":{"start":{"line":66,"column":16},"end":{"line":66,"column":20}},"53":{"start":{"line":67,"column":16},"end":{"line":67,"column":51}},"54":{"start":{"line":68,"column":16},"end":{"line":68,"column":26}},"55":{"start":{"line":73,"column":4},"end":{"line":115,"column":6}},"56":{"start":{"line":74,"column":8},"end":{"line":74,"column":41}},"57":{"start":{"line":75,"column":8},"end":{"line":75,"column":19}},"58":{"start":{"line":76,"column":8},"end":{"line":76,"column":17}},"59":{"start":{"line":80,"column":8},"end":{"line":80,"column":22}},"60":{"start":{"line":81,"column":8},"end":{"line":81,"column":76}},"61":{"start":{"line":81,"column":44},"end":{"line":81,"column":55}},"62":{"start":{"line":81,"column":56},"end":{"line":81,"column":74}},"63":{"start":{"line":82,"column":8},"end":{"line":90,"column":9}},"64":{"start":{"line":83,"column":12},"end":{"line":89,"column":13}},"65":{"start":{"line":84,"column":16},"end":{"line":84,"column":30}},"66":{"start":{"line":85,"column":16},"end":{"line":88,"column":17}},"67":{"start":{"line":86,"column":20},"end":{"line":86,"column":33}},"68":{"start":{"line":86,"column":34},"end":{"line":86,"column":44}},"69":{"start":{"line":87,"column":20},"end":{"line":87,"column":43}},"70":{"start":{"line":87,"column":35},"end":{"line":87,"column":41}},"71":{"start":{"line":93,"column":8},"end":{"line":93,"column":30}},"72":{"start":{"line":94,"column":8},"end":{"line":94,"column":69}},"73":{"start":{"line":94,"column":13},"end":{"line":94,"column":21}},"74":{"start":{"line":95,"column":8},"end":{"line":101,"column":9}},"75":{"start":{"line":96,"column":12},"end":{"line":96,"column":73}},"76":{"start":{"line":96,"column":17},"end":{"line":96,"column":25}},"77":{"start":{"line":97,"column":12},"end":{"line":100,"column":13}},"78":{"start":{"line":98,"column":16},"end":{"line":98,"column":48}},"79":{"start":{"line":98,"column":49},"end":{"line":98,"column":59}},"80":{"start":{"line":99,"column":16},"end":{"line":99,"column":77}},"81":{"start":{"line":99,"column":21},"end":{"line":99,"column":29}},"82":{"start":{"line":104,"column":8},"end":{"line":112,"column":9}},"83":{"start":{"line":105,"column":12},"end":{"line":105,"column":22}},"84":{"start":{"line":105,"column":23},"end":{"line":105,"column":48}},"85":{"start":{"line":105,"column":49},"end":{"line":105,"column":61}},"86":{"start":{"line":106,"column":12},"end":{"line":109,"column":13}},"87":{"start":{"line":107,"column":16},"end":{"line":107,"column":77}},"88":{"start":{"line":107,"column":71},"end":{"line":107,"column":75}},"89":{"start":{"line":108,"column":16},"end":{"line":108,"column":49}},"90":{"start":{"line":108,"column":34},"end":{"line":108,"column":47}},"91":{"start":{"line":110,"column":12},"end":{"line":110,"column":53}},"92":{"start":{"line":110,"column":24},"end":{"line":110,"column":31}},"93":{"start":{"line":110,"column":32},"end":{"line":110,"column":38}},"94":{"start":{"line":110,"column":39},"end":{"line":110,"column":51}},"95":{"start":{"line":111,"column":12},"end":{"line":111,"column":37}},"96":{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},"97":{"start":{"line":118,"column":4},"end":{"line":151,"column":6}},"98":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"99":{"start":{"line":120,"column":8},"end":{"line":120,"column":19}},"100":{"start":{"line":122,"column":8},"end":{"line":122,"column":47}},"101":{"start":{"line":122,"column":23},"end":{"line":122,"column":45}},"102":{"start":{"line":123,"column":8},"end":{"line":123,"column":35}},"103":{"start":{"line":124,"column":8},"end":{"line":124,"column":18}},"104":{"start":{"line":125,"column":8},"end":{"line":125,"column":25}},"105":{"start":{"line":126,"column":8},"end":{"line":126,"column":54}},"106":{"start":{"line":127,"column":8},"end":{"line":136,"column":9}},"107":{"start":{"line":128,"column":12},"end":{"line":128,"column":22}},"108":{"start":{"line":128,"column":23},"end":{"line":128,"column":34}},"109":{"start":{"line":129,"column":12},"end":{"line":135,"column":13}},"110":{"start":{"line":130,"column":16},"end":{"line":130,"column":20}},"111":{"start":{"line":131,"column":16},"end":{"line":131,"column":43}},"112":{"start":{"line":132,"column":16},"end":{"line":132,"column":69}},"113":{"start":{"line":132,"column":42},"end":{"line":132,"column":53}},"114":{"start":{"line":132,"column":54},"end":{"line":132,"column":67}},"115":{"start":{"line":133,"column":16},"end":{"line":133,"column":32}},"116":{"start":{"line":134,"column":16},"end":{"line":134,"column":62}},"117":{"start":{"line":138,"column":8},"end":{"line":138,"column":47}},"118":{"start":{"line":138,"column":23},"end":{"line":138,"column":45}},"119":{"start":{"line":139,"column":8},"end":{"line":139,"column":34}},"120":{"start":{"line":140,"column":8},"end":{"line":150,"column":9}},"121":{"start":{"line":141,"column":12},"end":{"line":149,"column":13}},"122":{"start":{"line":142,"column":16},"end":{"line":142,"column":20}},"123":{"start":{"line":143,"column":16},"end":{"line":143,"column":43}},"124":{"start":{"line":144,"column":16},"end":{"line":144,"column":70}},"125":{"start":{"line":144,"column":42},"end":{"line":144,"column":52}},"126":{"start":{"line":144,"column":53},"end":{"line":144,"column":68}},"127":{"start":{"line":145,"column":16},"end":{"line":145,"column":33}},"128":{"start":{"line":146,"column":16},"end":{"line":146,"column":66}},"129":{"start":{"line":148,"column":16},"end":{"line":148,"column":27}},"130":{"start":{"line":153,"column":4},"end":{"line":192,"column":6}},"131":{"start":{"line":154,"column":8},"end":{"line":154,"column":31}},"132":{"start":{"line":155,"column":8},"end":{"line":155,"column":19}},"133":{"start":{"line":157,"column":8},"end":{"line":157,"column":47}},"134":{"start":{"line":157,"column":23},"end":{"line":157,"column":45}},"135":{"start":{"line":158,"column":8},"end":{"line":158,"column":35}},"136":{"start":{"line":159,"column":8},"end":{"line":159,"column":18}},"137":{"start":{"line":160,"column":8},"end":{"line":160,"column":25}},"138":{"start":{"line":161,"column":8},"end":{"line":161,"column":56}},"139":{"start":{"line":162,"column":8},"end":{"line":173,"column":9}},"140":{"start":{"line":163,"column":12},"end":{"line":172,"column":13}},"141":{"start":{"line":164,"column":16},"end":{"line":164,"column":20}},"142":{"start":{"line":165,"column":16},"end":{"line":165,"column":41}},"143":{"start":{"line":166,"column":16},"end":{"line":166,"column":37}},"144":{"start":{"line":167,"column":16},"end":{"line":167,"column":61}},"145":{"start":{"line":167,"column":33},"end":{"line":167,"column":43}},"146":{"start":{"line":167,"column":44},"end":{"line":167,"column":59}},"147":{"start":{"line":168,"column":16},"end":{"line":168,"column":32}},"148":{"start":{"line":169,"column":16},"end":{"line":169,"column":64}},"149":{"start":{"line":170,"column":19},"end":{"line":172,"column":13}},"150":{"start":{"line":171,"column":16},"end":{"line":171,"column":27}},"151":{"start":{"line":175,"column":8},"end":{"line":175,"column":47}},"152":{"start":{"line":175,"column":23},"end":{"line":175,"column":45}},"153":{"start":{"line":176,"column":8},"end":{"line":176,"column":34}},"154":{"start":{"line":177,"column":8},"end":{"line":190,"column":9}},"155":{"start":{"line":178,"column":12},"end":{"line":189,"column":13}},"156":{"start":{"line":179,"column":16},"end":{"line":179,"column":20}},"157":{"start":{"line":180,"column":16},"end":{"line":180,"column":41}},"158":{"start":{"line":181,"column":16},"end":{"line":181,"column":34}},"159":{"start":{"line":182,"column":16},"end":{"line":182,"column":61}},"160":{"start":{"line":182,"column":33},"end":{"line":182,"column":43}},"161":{"start":{"line":182,"column":44},"end":{"line":182,"column":59}},"162":{"start":{"line":183,"column":16},"end":{"line":183,"column":33}},"163":{"start":{"line":184,"column":16},"end":{"line":184,"column":69}},"164":{"start":{"line":185,"column":19},"end":{"line":189,"column":13}},"165":{"start":{"line":186,"column":16},"end":{"line":186,"column":27}},"166":{"start":{"line":188,"column":16},"end":{"line":188,"column":25}},"167":{"start":{"line":191,"column":8},"end":{"line":191,"column":20}},"168":{"start":{"line":197,"column":4},"end":{"line":300,"column":6}},"169":{"start":{"line":198,"column":8},"end":{"line":198,"column":21}},"170":{"start":{"line":199,"column":8},"end":{"line":199,"column":55}},"171":{"start":{"line":200,"column":8},"end":{"line":200,"column":19}},"172":{"start":{"line":201,"column":8},"end":{"line":201,"column":22}},"173":{"start":{"line":204,"column":8},"end":{"line":216,"column":9}},"174":{"start":{"line":205,"column":12},"end":{"line":205,"column":38}},"175":{"start":{"line":206,"column":12},"end":{"line":207,"column":58}},"176":{"start":{"line":206,"column":27},"end":{"line":206,"column":55}},"177":{"start":{"line":206,"column":56},"end":{"line":206,"column":66}},"178":{"start":{"line":207,"column":19},"end":{"line":207,"column":45}},"179":{"start":{"line":207,"column":46},"end":{"line":207,"column":56}},"180":{"start":{"line":208,"column":15},"end":{"line":216,"column":9}},"181":{"start":{"line":209,"column":12},"end":{"line":209,"column":40}},"182":{"start":{"line":210,"column":12},"end":{"line":212,"column":38}},"183":{"start":{"line":210,"column":33},"end":{"line":210,"column":65}},"184":{"start":{"line":210,"column":66},"end":{"line":210,"column":76}},"185":{"start":{"line":211,"column":17},"end":{"line":212,"column":38}},"186":{"start":{"line":211,"column":34},"end":{"line":211,"column":60}},"187":{"start":{"line":211,"column":61},"end":{"line":211,"column":71}},"188":{"start":{"line":212,"column":19},"end":{"line":212,"column":25}},"189":{"start":{"line":212,"column":26},"end":{"line":212,"column":36}},"190":{"start":{"line":214,"column":12},"end":{"line":214,"column":42}},"191":{"start":{"line":215,"column":12},"end":{"line":215,"column":26}},"192":{"start":{"line":220,"column":8},"end":{"line":220,"column":30}},"193":{"start":{"line":221,"column":8},"end":{"line":221,"column":34}},"194":{"start":{"line":222,"column":8},"end":{"line":222,"column":46}},"195":{"start":{"line":222,"column":34},"end":{"line":222,"column":44}},"196":{"start":{"line":223,"column":8},"end":{"line":223,"column":15}},"197":{"start":{"line":223,"column":16},"end":{"line":223,"column":26}},"198":{"start":{"line":223,"column":27},"end":{"line":223,"column":33}},"199":{"start":{"line":223,"column":34},"end":{"line":223,"column":40}},"200":{"start":{"line":223,"column":41},"end":{"line":223,"column":55}},"201":{"start":{"line":224,"column":8},"end":{"line":224,"column":66}},"202":{"start":{"line":224,"column":13},"end":{"line":224,"column":21}},"203":{"start":{"line":225,"column":8},"end":{"line":234,"column":9}},"204":{"start":{"line":226,"column":12},"end":{"line":226,"column":70}},"205":{"start":{"line":226,"column":17},"end":{"line":226,"column":25}},"206":{"start":{"line":227,"column":12},"end":{"line":233,"column":13}},"207":{"start":{"line":228,"column":16},"end":{"line":228,"column":44}},"208":{"start":{"line":228,"column":32},"end":{"line":228,"column":42}},"209":{"start":{"line":229,"column":16},"end":{"line":229,"column":28}},"210":{"start":{"line":230,"column":16},"end":{"line":230,"column":22}},"211":{"start":{"line":231,"column":16},"end":{"line":231,"column":20}},"212":{"start":{"line":232,"column":16},"end":{"line":232,"column":74}},"213":{"start":{"line":232,"column":21},"end":{"line":232,"column":29}},"214":{"start":{"line":236,"column":8},"end":{"line":244,"column":9}},"215":{"start":{"line":237,"column":12},"end":{"line":237,"column":39}},"216":{"start":{"line":238,"column":12},"end":{"line":238,"column":44}},"217":{"start":{"line":239,"column":15},"end":{"line":244,"column":9}},"218":{"start":{"line":240,"column":12},"end":{"line":240,"column":26}},"219":{"start":{"line":241,"column":12},"end":{"line":241,"column":21}},"220":{"start":{"line":243,"column":12},"end":{"line":243,"column":21}},"221":{"start":{"line":248,"column":8},"end":{"line":277,"column":9}},"222":{"start":{"line":249,"column":12},"end":{"line":249,"column":57}},"223":{"start":{"line":249,"column":36},"end":{"line":249,"column":45}},"224":{"start":{"line":249,"column":46},"end":{"line":249,"column":55}},"225":{"start":{"line":250,"column":12},"end":{"line":250,"column":47}},"226":{"start":{"line":250,"column":36},"end":{"line":250,"column":45}},"227":{"start":{"line":251,"column":12},"end":{"line":251,"column":39}},"228":{"start":{"line":252,"column":12},"end":{"line":255,"column":13}},"229":{"start":{"line":253,"column":16},"end":{"line":254,"column":36}},"230":{"start":{"line":253,"column":42},"end":{"line":253,"column":53}},"231":{"start":{"line":254,"column":23},"end":{"line":254,"column":34}},"232":{"start":{"line":256,"column":12},"end":{"line":256,"column":47}},"233":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"234":{"start":{"line":258,"column":16},"end":{"line":258,"column":56}},"235":{"start":{"line":258,"column":34},"end":{"line":258,"column":54}},"236":{"start":{"line":260,"column":12},"end":{"line":260,"column":40}},"237":{"start":{"line":261,"column":12},"end":{"line":261,"column":49}},"238":{"start":{"line":262,"column":12},"end":{"line":262,"column":22}},"239":{"start":{"line":264,"column":12},"end":{"line":264,"column":22}},"240":{"start":{"line":264,"column":23},"end":{"line":264,"column":37}},"241":{"start":{"line":264,"column":38},"end":{"line":264,"column":52}},"242":{"start":{"line":265,"column":12},"end":{"line":265,"column":70}},"243":{"start":{"line":265,"column":17},"end":{"line":265,"column":25}},"244":{"start":{"line":266,"column":12},"end":{"line":272,"column":13}},"245":{"start":{"line":267,"column":16},"end":{"line":267,"column":74}},"246":{"start":{"line":267,"column":21},"end":{"line":267,"column":29}},"247":{"start":{"line":268,"column":16},"end":{"line":271,"column":17}},"248":{"start":{"line":269,"column":20},"end":{"line":269,"column":36}},"249":{"start":{"line":270,"column":20},"end":{"line":270,"column":78}},"250":{"start":{"line":270,"column":25},"end":{"line":270,"column":33}},"251":{"start":{"line":274,"column":12},"end":{"line":274,"column":62}},"252":{"start":{"line":274,"column":38},"end":{"line":274,"column":60}},"253":{"start":{"line":275,"column":12},"end":{"line":275,"column":68}},"254":{"start":{"line":275,"column":36},"end":{"line":275,"column":66}},"255":{"start":{"line":276,"column":12},"end":{"line":276,"column":64}},"256":{"start":{"line":276,"column":36},"end":{"line":276,"column":62}},"257":{"start":{"line":280,"column":8},"end":{"line":280,"column":56}},"258":{"start":{"line":280,"column":32},"end":{"line":280,"column":54}},"259":{"start":{"line":282,"column":8},"end":{"line":295,"column":9}},"260":{"start":{"line":283,"column":12},"end":{"line":283,"column":38}},"261":{"start":{"line":284,"column":12},"end":{"line":284,"column":22}},"262":{"start":{"line":284,"column":23},"end":{"line":284,"column":29}},"263":{"start":{"line":284,"column":30},"end":{"line":284,"column":44}},"264":{"start":{"line":284,"column":45},"end":{"line":284,"column":55}},"265":{"start":{"line":285,"column":12},"end":{"line":293,"column":30}},"266":{"start":{"line":286,"column":16},"end":{"line":286,"column":31}},"267":{"start":{"line":287,"column":16},"end":{"line":287,"column":46}},"268":{"start":{"line":287,"column":32},"end":{"line":287,"column":44}},"269":{"start":{"line":288,"column":16},"end":{"line":292,"column":44}},"270":{"start":{"line":289,"column":20},"end":{"line":289,"column":32}},"271":{"start":{"line":290,"column":20},"end":{"line":290,"column":42}},"272":{"start":{"line":290,"column":34},"end":{"line":290,"column":40}},"273":{"start":{"line":291,"column":20},"end":{"line":291,"column":30}},"274":{"start":{"line":294,"column":12},"end":{"line":294,"column":44}},"275":{"start":{"line":294,"column":30},"end":{"line":294,"column":42}},"276":{"start":{"line":296,"column":8},"end":{"line":297,"column":54}},"277":{"start":{"line":296,"column":22},"end":{"line":296,"column":50}},"278":{"start":{"line":297,"column":15},"end":{"line":297,"column":52}},"279":{"start":{"line":298,"column":8},"end":{"line":298,"column":17}},"280":{"start":{"line":298,"column":18},"end":{"line":298,"column":27}},"281":{"start":{"line":299,"column":8},"end":{"line":299,"column":20}},"282":{"start":{"line":302,"column":4},"end":{"line":302,"column":34}},"283":{"start":{"line":305,"column":4},"end":{"line":321,"column":6}},"284":{"start":{"line":306,"column":8},"end":{"line":306,"column":61}},"285":{"start":{"line":307,"column":8},"end":{"line":310,"column":9}},"286":{"start":{"line":308,"column":12},"end":{"line":308,"column":39}},"287":{"start":{"line":308,"column":27},"end":{"line":308,"column":37}},"288":{"start":{"line":309,"column":12},"end":{"line":309,"column":21}},"289":{"start":{"line":311,"column":8},"end":{"line":315,"column":9}},"290":{"start":{"line":312,"column":12},"end":{"line":314,"column":65}},"291":{"start":{"line":312,"column":45},"end":{"line":312,"column":64}},"292":{"start":{"line":313,"column":17},"end":{"line":314,"column":65}},"293":{"start":{"line":313,"column":50},"end":{"line":313,"column":71}},"294":{"start":{"line":314,"column":17},"end":{"line":314,"column":65}},"295":{"start":{"line":316,"column":8},"end":{"line":316,"column":35}},"296":{"start":{"line":317,"column":8},"end":{"line":319,"column":9}},"297":{"start":{"line":318,"column":12},"end":{"line":318,"column":70}},"298":{"start":{"line":320,"column":8},"end":{"line":320,"column":55}},"299":{"start":{"line":328,"column":4},"end":{"line":350,"column":6}},"300":{"start":{"line":329,"column":8},"end":{"line":329,"column":20}},"301":{"start":{"line":330,"column":8},"end":{"line":330,"column":30}},"302":{"start":{"line":331,"column":8},"end":{"line":331,"column":66}},"303":{"start":{"line":332,"column":8},"end":{"line":335,"column":9}},"304":{"start":{"line":333,"column":12},"end":{"line":333,"column":41}},"305":{"start":{"line":333,"column":27},"end":{"line":333,"column":39}},"306":{"start":{"line":334,"column":12},"end":{"line":334,"column":21}},"307":{"start":{"line":336,"column":8},"end":{"line":340,"column":9}},"308":{"start":{"line":337,"column":12},"end":{"line":339,"column":65}},"309":{"start":{"line":337,"column":45},"end":{"line":337,"column":64}},"310":{"start":{"line":338,"column":17},"end":{"line":339,"column":65}},"311":{"start":{"line":338,"column":50},"end":{"line":338,"column":71}},"312":{"start":{"line":339,"column":17},"end":{"line":339,"column":65}},"313":{"start":{"line":341,"column":8},"end":{"line":341,"column":35}},"314":{"start":{"line":342,"column":8},"end":{"line":344,"column":9}},"315":{"start":{"line":343,"column":12},"end":{"line":343,"column":70}},"316":{"start":{"line":345,"column":8},"end":{"line":345,"column":53}},"317":{"start":{"line":346,"column":8},"end":{"line":346,"column":24}},"318":{"start":{"line":347,"column":8},"end":{"line":347,"column":56}},"319":{"start":{"line":347,"column":38},"end":{"line":347,"column":54}},"320":{"start":{"line":348,"column":8},"end":{"line":348,"column":49}},"321":{"start":{"line":348,"column":35},"end":{"line":348,"column":47}},"322":{"start":{"line":349,"column":8},"end":{"line":349,"column":24}},"323":{"start":{"line":352,"column":4},"end":{"line":363,"column":6}},"324":{"start":{"line":353,"column":8},"end":{"line":353,"column":40}},"325":{"start":{"line":354,"column":8},"end":{"line":354,"column":17}},"326":{"start":{"line":355,"column":8},"end":{"line":355,"column":43}},"327":{"start":{"line":355,"column":32},"end":{"line":355,"column":41}},"328":{"start":{"line":356,"column":8},"end":{"line":356,"column":50}},"329":{"start":{"line":356,"column":30},"end":{"line":356,"column":48}},"330":{"start":{"line":357,"column":8},"end":{"line":357,"column":66}},"331":{"start":{"line":357,"column":37},"end":{"line":357,"column":47}},"332":{"start":{"line":357,"column":48},"end":{"line":357,"column":64}},"333":{"start":{"line":358,"column":8},"end":{"line":361,"column":9}},"334":{"start":{"line":359,"column":12},"end":{"line":359,"column":37}},"335":{"start":{"line":360,"column":12},"end":{"line":360,"column":34}},"336":{"start":{"line":362,"column":8},"end":{"line":362,"column":17}},"337":{"start":{"line":372,"column":4},"end":{"line":417,"column":6}},"338":{"start":{"line":373,"column":8},"end":{"line":373,"column":27}},"339":{"start":{"line":374,"column":8},"end":{"line":374,"column":25}},"340":{"start":{"line":375,"column":8},"end":{"line":375,"column":49}},"341":{"start":{"line":376,"column":8},"end":{"line":379,"column":9}},"342":{"start":{"line":377,"column":12},"end":{"line":377,"column":41}},"343":{"start":{"line":377,"column":27},"end":{"line":377,"column":39}},"344":{"start":{"line":378,"column":12},"end":{"line":378,"column":21}},"345":{"start":{"line":380,"column":8},"end":{"line":384,"column":9}},"346":{"start":{"line":381,"column":12},"end":{"line":383,"column":65}},"347":{"start":{"line":381,"column":45},"end":{"line":381,"column":64}},"348":{"start":{"line":382,"column":17},"end":{"line":383,"column":65}},"349":{"start":{"line":382,"column":50},"end":{"line":382,"column":71}},"350":{"start":{"line":383,"column":17},"end":{"line":383,"column":65}},"351":{"start":{"line":385,"column":8},"end":{"line":385,"column":35}},"352":{"start":{"line":386,"column":8},"end":{"line":388,"column":9}},"353":{"start":{"line":387,"column":12},"end":{"line":387,"column":70}},"354":{"start":{"line":390,"column":8},"end":{"line":390,"column":15}},"355":{"start":{"line":391,"column":8},"end":{"line":399,"column":9}},"356":{"start":{"line":392,"column":12},"end":{"line":392,"column":19}},"357":{"start":{"line":393,"column":15},"end":{"line":399,"column":9}},"358":{"start":{"line":394,"column":12},"end":{"line":394,"column":40}},"359":{"start":{"line":395,"column":15},"end":{"line":399,"column":9}},"360":{"start":{"line":396,"column":12},"end":{"line":396,"column":41}},"361":{"start":{"line":398,"column":12},"end":{"line":398,"column":41}},"362":{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},"363":{"start":{"line":401,"column":12},"end":{"line":401,"column":49}},"364":{"start":{"line":401,"column":34},"end":{"line":401,"column":47}},"365":{"start":{"line":403,"column":8},"end":{"line":403,"column":48}},"366":{"start":{"line":403,"column":30},"end":{"line":403,"column":46}},"367":{"start":{"line":405,"column":8},"end":{"line":405,"column":40}},"368":{"start":{"line":406,"column":8},"end":{"line":406,"column":50}},"369":{"start":{"line":407,"column":8},"end":{"line":414,"column":9}},"370":{"start":{"line":408,"column":12},"end":{"line":408,"column":25}},"371":{"start":{"line":409,"column":12},"end":{"line":413,"column":13}},"372":{"start":{"line":410,"column":16},"end":{"line":410,"column":42}},"373":{"start":{"line":410,"column":31},"end":{"line":410,"column":40}},"374":{"start":{"line":411,"column":16},"end":{"line":411,"column":41}},"375":{"start":{"line":411,"column":31},"end":{"line":411,"column":39}},"376":{"start":{"line":412,"column":16},"end":{"line":412,"column":30}},"377":{"start":{"line":415,"column":8},"end":{"line":415,"column":22}},"378":{"start":{"line":416,"column":8},"end":{"line":416,"column":20}},"379":{"start":{"line":419,"column":4},"end":{"line":419,"column":23}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":0},"end":{"line":13,"column":0}},{"start":{"line":13,"column":0},"end":{"line":13,"column":0}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"4":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":32},"end":{"line":45,"column":34}},{"start":{"line":45,"column":37},"end":{"line":45,"column":38}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":16}},{"start":{"line":49,"column":16},"end":{"line":49,"column":16}}]},"7":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":40},"end":{"line":52,"column":42}},{"start":{"line":52,"column":45},"end":{"line":52,"column":46}}]},"8":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":19},"end":{"line":54,"column":19}},{"start":{"line":54,"column":19},"end":{"line":54,"column":19}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"10":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"11":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":16}},{"start":{"line":64,"column":16},"end":{"line":64,"column":16}}]},"12":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":40},"end":{"line":67,"column":46}},{"start":{"line":67,"column":49},"end":{"line":67,"column":50}}]},"13":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"14":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":16},"end":{"line":85,"column":16}},{"start":{"line":85,"column":16},"end":{"line":85,"column":16}}]},"15":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":20},"end":{"line":87,"column":20}},{"start":{"line":87,"column":20},"end":{"line":87,"column":20}}]},"16":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":33},"end":{"line":94,"column":43}},{"start":{"line":94,"column":50},"end":{"line":94,"column":65}}]},"17":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":37},"end":{"line":96,"column":47}},{"start":{"line":96,"column":54},"end":{"line":96,"column":69}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":12}},{"start":{"line":97,"column":12},"end":{"line":97,"column":12}}]},"19":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":41},"end":{"line":99,"column":51}},{"start":{"line":99,"column":58},"end":{"line":99,"column":73}}]},"20":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12}},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"21":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":17},"end":{"line":106,"column":30}},{"start":{"line":106,"column":36},"end":{"line":106,"column":50}}]},"22":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":29},"end":{"line":107,"column":37}},{"start":{"line":107,"column":43},"end":{"line":107,"column":64}}]},"23":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":16}},{"start":{"line":108,"column":16},"end":{"line":108,"column":16}}]},"24":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"25":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":8}},{"start":{"line":122,"column":8},"end":{"line":122,"column":8}}]},"26":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":47},"end":{"line":126,"column":49}},{"start":{"line":126,"column":52},"end":{"line":126,"column":53}}]},"27":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":20},"end":{"line":126,"column":25}},{"start":{"line":126,"column":31},"end":{"line":126,"column":42}}]},"28":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]},"29":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":132,"column":16}},{"start":{"line":132,"column":16},"end":{"line":132,"column":16}}]},"30":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":55},"end":{"line":134,"column":57}},{"start":{"line":134,"column":60},"end":{"line":134,"column":61}}]},"31":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":28},"end":{"line":134,"column":33}},{"start":{"line":134,"column":39},"end":{"line":134,"column":50}}]},"32":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"33":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"34":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":16},"end":{"line":144,"column":16}},{"start":{"line":144,"column":16},"end":{"line":144,"column":16}}]},"35":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":59},"end":{"line":146,"column":61}},{"start":{"line":146,"column":64},"end":{"line":146,"column":65}}]},"36":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":28},"end":{"line":146,"column":35}},{"start":{"line":146,"column":41},"end":{"line":146,"column":54}}]},"37":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":8}},{"start":{"line":157,"column":8},"end":{"line":157,"column":8}}]},"38":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":49},"end":{"line":161,"column":51}},{"start":{"line":161,"column":54},"end":{"line":161,"column":55}}]},"39":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":20},"end":{"line":161,"column":25}},{"start":{"line":161,"column":31},"end":{"line":161,"column":44}}]},"40":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":12},"end":{"line":163,"column":12}},{"start":{"line":163,"column":12},"end":{"line":163,"column":12}}]},"41":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":16},"end":{"line":167,"column":16}},{"start":{"line":167,"column":16},"end":{"line":167,"column":16}}]},"42":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":57},"end":{"line":169,"column":59}},{"start":{"line":169,"column":62},"end":{"line":169,"column":63}}]},"43":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":28},"end":{"line":169,"column":33}},{"start":{"line":169,"column":39},"end":{"line":169,"column":52}}]},"44":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":19},"end":{"line":170,"column":19}},{"start":{"line":170,"column":19},"end":{"line":170,"column":19}}]},"45":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":8}},{"start":{"line":175,"column":8},"end":{"line":175,"column":8}}]},"46":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":12}},{"start":{"line":178,"column":12},"end":{"line":178,"column":12}}]},"47":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":16},"end":{"line":182,"column":16}},{"start":{"line":182,"column":16},"end":{"line":182,"column":16}}]},"48":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":56},"end":{"line":184,"column":63}},{"start":{"line":184,"column":67},"end":{"line":184,"column":68}}]},"49":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":28},"end":{"line":184,"column":33}},{"start":{"line":184,"column":39},"end":{"line":184,"column":50}}]},"50":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":19},"end":{"line":185,"column":19}},{"start":{"line":185,"column":19},"end":{"line":185,"column":19}}]},"51":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":8}},{"start":{"line":204,"column":8},"end":{"line":204,"column":8}}]},"52":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":12}},{"start":{"line":206,"column":12},"end":{"line":206,"column":12}}]},"53":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":15},"end":{"line":208,"column":15}},{"start":{"line":208,"column":15},"end":{"line":208,"column":15}}]},"54":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":12},"end":{"line":210,"column":12}},{"start":{"line":210,"column":12},"end":{"line":210,"column":12}}]},"55":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":17},"end":{"line":211,"column":17}},{"start":{"line":211,"column":17},"end":{"line":211,"column":17}}]},"56":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":32},"end":{"line":224,"column":40}},{"start":{"line":224,"column":46},"end":{"line":224,"column":63}}]},"57":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":36},"end":{"line":226,"column":44}},{"start":{"line":226,"column":50},"end":{"line":226,"column":67}}]},"58":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":12}},{"start":{"line":227,"column":12},"end":{"line":227,"column":12}}]},"59":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":16},"end":{"line":228,"column":16}},{"start":{"line":228,"column":16},"end":{"line":228,"column":16}}]},"60":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":40},"end":{"line":232,"column":48}},{"start":{"line":232,"column":54},"end":{"line":232,"column":71}}]},"61":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"62":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":15},"end":{"line":239,"column":15}},{"start":{"line":239,"column":15},"end":{"line":239,"column":15}}]},"63":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"64":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":12},"end":{"line":249,"column":12}},{"start":{"line":249,"column":12},"end":{"line":249,"column":12}}]},"65":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":12},"end":{"line":250,"column":12}},{"start":{"line":250,"column":12},"end":{"line":250,"column":12}}]},"66":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"67":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":16},"end":{"line":253,"column":16}},{"start":{"line":253,"column":16},"end":{"line":253,"column":16}}]},"68":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":16},"end":{"line":258,"column":16}},{"start":{"line":258,"column":16},"end":{"line":258,"column":16}}]},"69":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":36},"end":{"line":265,"column":44}},{"start":{"line":265,"column":50},"end":{"line":265,"column":67}}]},"70":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":40},"end":{"line":267,"column":48}},{"start":{"line":267,"column":54},"end":{"line":267,"column":71}}]},"71":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":16},"end":{"line":268,"column":16}},{"start":{"line":268,"column":16},"end":{"line":268,"column":16}}]},"72":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":44},"end":{"line":270,"column":52}},{"start":{"line":270,"column":58},"end":{"line":270,"column":75}}]},"73":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":12},"end":{"line":275,"column":12}},{"start":{"line":275,"column":12},"end":{"line":275,"column":12}}]},"74":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":12},"end":{"line":276,"column":12}},{"start":{"line":276,"column":12},"end":{"line":276,"column":12}}]},"75":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":8}},{"start":{"line":280,"column":8},"end":{"line":280,"column":8}}]},"76":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":8}},{"start":{"line":282,"column":8},"end":{"line":282,"column":8}}]},"77":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":20},"end":{"line":290,"column":20}},{"start":{"line":290,"column":20},"end":{"line":290,"column":20}}]},"78":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":8},"end":{"line":296,"column":8}},{"start":{"line":296,"column":8},"end":{"line":296,"column":8}}]},"79":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":16},"end":{"line":306,"column":17}},{"start":{"line":306,"column":21},"end":{"line":306,"column":23}},{"start":{"line":306,"column":27},"end":{"line":306,"column":40}},{"start":{"line":306,"column":44},"end":{"line":306,"column":58}}]},"80":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":8},"end":{"line":307,"column":8}},{"start":{"line":307,"column":8},"end":{"line":307,"column":8}}]},"81":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":12},"end":{"line":308,"column":12}},{"start":{"line":308,"column":12},"end":{"line":308,"column":12}}]},"82":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":8},"end":{"line":311,"column":8}},{"start":{"line":311,"column":8},"end":{"line":311,"column":8}}]},"83":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":12}},{"start":{"line":312,"column":12},"end":{"line":312,"column":12}}]},"84":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":17},"end":{"line":313,"column":17}},{"start":{"line":313,"column":17},"end":{"line":313,"column":17}}]},"85":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":8},"end":{"line":317,"column":8}},{"start":{"line":317,"column":8},"end":{"line":317,"column":8}}]},"86":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":16},"end":{"line":330,"column":17}},{"start":{"line":330,"column":21},"end":{"line":330,"column":22}},{"start":{"line":330,"column":26},"end":{"line":330,"column":27}}]},"87":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":16},"end":{"line":331,"column":29}},{"start":{"line":331,"column":33},"end":{"line":331,"column":46}},{"start":{"line":331,"column":50},"end":{"line":331,"column":63}}]},"88":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":332,"column":8}},{"start":{"line":332,"column":8},"end":{"line":332,"column":8}}]},"89":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":12}},{"start":{"line":333,"column":12},"end":{"line":333,"column":12}}]},"90":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":8},"end":{"line":336,"column":8}},{"start":{"line":336,"column":8},"end":{"line":336,"column":8}}]},"91":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":12},"end":{"line":337,"column":12}},{"start":{"line":337,"column":12},"end":{"line":337,"column":12}}]},"92":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":17},"end":{"line":338,"column":17}},{"start":{"line":338,"column":17},"end":{"line":338,"column":17}}]},"93":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":8},"end":{"line":342,"column":8}},{"start":{"line":342,"column":8},"end":{"line":342,"column":8}}]},"94":{"line":360,"type":"cond-expr","locations":[{"start":{"line":360,"column":28},"end":{"line":360,"column":29}},{"start":{"line":360,"column":32},"end":{"line":360,"column":33}}]},"95":{"line":374,"type":"binary-expr","locations":[{"start":{"line":374,"column":16},"end":{"line":374,"column":17}},{"start":{"line":374,"column":21},"end":{"line":374,"column":22}}]},"96":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":16},"end":{"line":375,"column":29}},{"start":{"line":375,"column":33},"end":{"line":375,"column":46}}]},"97":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":8},"end":{"line":376,"column":8}},{"start":{"line":376,"column":8},"end":{"line":376,"column":8}}]},"98":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":12},"end":{"line":377,"column":12}},{"start":{"line":377,"column":12},"end":{"line":377,"column":12}}]},"99":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":8},"end":{"line":380,"column":8}},{"start":{"line":380,"column":8},"end":{"line":380,"column":8}}]},"100":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":12},"end":{"line":381,"column":12}},{"start":{"line":381,"column":12},"end":{"line":381,"column":12}}]},"101":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":17},"end":{"line":382,"column":17}},{"start":{"line":382,"column":17},"end":{"line":382,"column":17}}]},"102":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":8},"end":{"line":386,"column":8}},{"start":{"line":386,"column":8},"end":{"line":386,"column":8}}]},"103":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":8},"end":{"line":391,"column":8}},{"start":{"line":391,"column":8},"end":{"line":391,"column":8}}]},"104":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":15},"end":{"line":393,"column":15}},{"start":{"line":393,"column":15},"end":{"line":393,"column":15}}]},"105":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":15},"end":{"line":395,"column":15}},{"start":{"line":395,"column":15},"end":{"line":395,"column":15}}]},"106":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":400,"column":8}},{"start":{"line":400,"column":8},"end":{"line":400,"column":8}}]},"107":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":12},"end":{"line":409,"column":12}},{"start":{"line":409,"column":12},"end":{"line":409,"column":12}}]},"108":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":16},"end":{"line":410,"column":16}},{"start":{"line":410,"column":16},"end":{"line":410,"column":16}}]},"109":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":16},"end":{"line":411,"column":16}},{"start":{"line":411,"column":16},"end":{"line":411,"column":16}}]}},"code":["/** Burrows-Wheeler transform, computed with the Induced Sorting Suffix Array"," *  construction mechanism (sais).  Code is a port of:"," *    https://sites.google.com/site/yuta256/sais"," *  which is:"," *    Copyright (c) 2008-2010 Yuta Mori All Rights Reserved."," *  and licensed under an MIT/X11 license.  I generally looked at both"," *  the C and the Java implementations to guide my work."," *"," * This JavaScript port is:"," *    Copyright (c) 2013 C. Scott Ananian"," * and licensed under GPLv2; see the README at the top level of this package."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./freeze', './Util'], function(freeze, Util) {","    var ASSERT = console.assert.bind(console);","","    // we're dispensing with the \"arbitrary alphabet\" stuff of the source","    // and just using Uint8Arrays.","","    /** Find the start or end of each bucket. */","    var getCounts = function(T, C, n, k) {","        var i;","        for (i = 0; i < k; i++) { C[i] = 0; }","        for (i = 0; i < n; i++) { C[T[i]]++; }","    };","    var getBuckets = function(C, B, k, end) {","        var i, sum = 0;","        if (end) {","            for (i = 0; i < k; i++) { sum += C[i]; B[i] = sum; }","        } else {","            for (i = 0; i < k; i++) { sum += C[i]; B[i] = sum - C[i]; }","        }","    };","","    /** Sort all type LMS suffixes */","    var LMSsort = function(T, SA, C, B, n, k) {","        var b, i, j;","        var c0, c1;","        /* compute SAl */","        if (C === B) { getCounts(T, C, n, k); }","        getBuckets(C, B, k, false); /* find starts of buckets */","        j = n - 1;","        b = B[c1 = T[j]];","        j--;","        SA[b++] = (T[j] < c1) ? ~j : j;","        for (i = 0; i < n; i++) {","            if ((j = SA[i]) > 0) {","                ASSERT(T[j] >= T[j+1]);","                if ((c0 = T[j]) !== c1) { B[c1] = b; b = B[c1 = c0]; }","                ASSERT(i < b);","                j--;","                SA[b++] = (T[j] < c1) ? ~j : j;","                SA[i] = 0;","            } else if (j < 0) {","                SA[i] = ~j;","            }","        }","        /* compute SAs */","        if (C === B) { getCounts(T, C, n, k); }","        getBuckets(C, B, k, 1); /* find ends of buckets */","        for (i = n-1, b = B[c1 = 0]; i >= 0; i--) {","            if ((j = SA[i]) > 0) {","                ASSERT(T[j] <= T[j+1]);","                if ((c0 = T[j]) !== c1) { B[c1] = b; b = B[c1 = c0]; }","                ASSERT(b <= i);","                j--;","                SA[--b] = (T[j] > c1) ? ~(j+1) : j;","                SA[i] = 0;","            }","        }","    };","","    var LMSpostproc = function(T, SA, n, m) {","        var i, j, p, q, plen, qlen, name;","        var c0, c1;","        var diff;","","        /* compact all the sorted substrings into the first m items of SA","         * 2*m must not be larger than n (provable) */","        ASSERT(n > 0);","        for (i = 0; (p = SA[i]) < 0; i++) { SA[i] = ~p; ASSERT((i+1) < n); }","        if (i < m) {","            for (j = i, i++; ; i++) {","                ASSERT(i < n);","                if ((p = SA[i]) < 0) {","                    SA[j++] = ~p; SA[i] = 0;","                    if (j === m) { break; }","                }","            }","        }","","        /* store the length of all substrings */","        c0 = T[i = j = n - 1];","        do { c1 = c0; } while ( ((--i) >= 0 ) && ((c0=T[i]) >= c1) );","        for (; i >= 0; ) {","            do { c1 = c0; } while ( ((--i) >= 0 ) && ((c0=T[i]) <= c1) );","            if (i >= 0) {","                SA[m + ((i + 1) >>> 1)] = j - i; j = i + 1;","                do { c1 = c0; } while ( ((--i) >= 0 ) && ((c0=T[i]) >= c1) );","            }","        }","","        /* find the lexicographic names of all substrings */","        for (i = 0, name = 0, q = n, qlen = 0; i < m; i++) {","            p = SA[i]; plen = SA[m + (p >>> 1)]; diff = true;","            if ((plen === qlen) && ((q + plen) < n)) {","                for (j = 0; (j < plen) && (T[p + j] === T[q + j]); ) { j++; }","                if (j === plen) { diff = false; }","            }","            if (diff) { name++; q = p; qlen = plen; }","            SA[m + (p >>> 1)] = name;","        }","","        return name;","    };","","    /* compute SA and BWT */","    var induceSA = function(T, SA, C, B, n, k) {","        var b, i, j;","        var c0, c1;","        /* compute SAl */","        if (C === B) { getCounts(T, C, n, k); }","        getBuckets(C, B, k, false); /* find starts of buckets */","        j = n - 1;","        b = B[c1 = T[j]];","        SA[b++] = ((j > 0) && (T[j-1] < c1)) ? ~j : j;","        for (i = 0; i < n; i++) {","            j = SA[i]; SA[i] = ~j;","            if (j > 0) {","                j--;","                ASSERT( T[j] >= T[j + 1] );","                if ((c0 = T[j]) !== c1) { B[c1]  = b; b = B[c1=c0]; }","                ASSERT( i < b );","                SA[b++] = ((j > 0) && (T[j-1] < c1)) ? ~j : j;","            }","        }","        /* compute SAs */","        if (C === B) { getCounts(T, C, n, k); }","        getBuckets(C, B, k, true); /* find ends of buckets */","        for (i = n-1, b = B[c1 = 0]; i >= 0; i--) {","            if ((j = SA[i]) > 0) {","                j--;","                ASSERT( T[j] <= T[j + 1] );","                if ((c0 = T[j]) !== c1) { B[c1] = b; b = B[c1 = c0]; }","                ASSERT( b <= i );","                SA[--b] = ((j === 0) || (T[j - 1] > c1)) ? ~j : j;","            } else {","                SA[i] = ~j;","            }","        }","    };","","    var computeBWT = function(T, SA, C, B, n, k) {","        var b, i, j, pidx = -1;","        var c0, c1;","        /* compute SAl */","        if (C === B) { getCounts(T, C, n, k); }","        getBuckets(C, B, k, false); /* find starts of buckets */","        j = n - 1;","        b = B[c1 = T[j]];","        SA[b++] = ((j > 0) && (T[j - 1] < c1)) ? ~j : j;","        for (i = 0; i < n; i++) {","            if ((j=SA[i]) > 0) {","                j--;","                ASSERT( T[j] >= T[j+1] );","                SA[i] = ~(c0 = T[j]);","                if (c0 !== c1) { B[c1] = b; b = B[c1 = c0]; }","                ASSERT( i < b );","                SA[b++] = ((j > 0) && (T[j - 1] < c1)) ? ~j : j;","            } else if (j !== 0) {","                SA[i] = ~j;","            }","        }","        /* compute SAs */","        if (C === B) { getCounts(T, C, n, k); }","        getBuckets(C, B, k, true); /* find ends of buckets */","        for (i = n-1, b = B[c1 = 0]; i >= 0; i--) {","            if ((j = SA[i]) > 0) {","                j--;","                ASSERT( T[j] <= T[j+1] );","                SA[i] = c0 = T[j];","                if (c0 !== c1) { B[c1] = b; b = B[c1 = c0]; }","                ASSERT( b <= i );","                SA[--b] = ((j > 0) && (T[j-1] > c1)) ? (~T[j-1]) : j;","            } else if (j !== 0) {","                SA[i] = ~j;","            } else {","                pidx = i;","            }","        }","        return pidx;","    };","","    /* find the suffix array SA of T[0..n-1] in {0..k-1}^n","       use a working space (excluding T and SA) of at most 2n+O(1) for a","       constant alphabet */","    var SA_IS = function(T, SA, fs, n, k, isbwt) {","        var C, B, RA;","        var i, j, b, c, m, p, q, name, pidx = 0, newfs;","        var c0, c1;","        var flags = 0;","","        // allocate temporary storage [CSA]","        if (k <= 256) {","            C = Util.makeS32Buffer(k);","            if (k <= fs) { B = SA.subarray(n + fs - k); flags = 1; }","            else { B = Util.makeS32Buffer(k); flags = 3; }","        } else if (k <= fs) {","            C = SA.subarray(n + fs - k);","            if (k <= (fs - k)) { B = SA.subarray(n + fs - k * 2); flags = 0; }","            else if (k <= 1024) { B = Util.makeS32Buffer(k); flags = 2; }","            else { B = C; flags = 8; }","        } else {","            C = B = Util.makeS32Buffer(k);","            flags = 4 | 8;","        }","","        /* stage 1: reduce the problem by at least 1/2","           sort all the LMS-substrings */","        getCounts(T, C, n, k);","        getBuckets(C, B, k, true); /* find ends of buckets */","        for (i = 0; i < n; i++) { SA[i] = 0; }","        b = -1; i = n - 1; j = n; m = 0; c0 = T[n - 1];","        do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));","        for (; i >= 0 ;) {","            do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) <= c1));","            if ( i >= 0 ) {","                if ( b >= 0 ) { SA[b] = j; }","                b = --B[c1];","                j = i;","                ++m;","                do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));","            }","        }","","        if (m > 1) {","            LMSsort(T, SA, C, B, n, k);","            name = LMSpostproc(T, SA, n, m);","        } else if (m === 1) {","            SA[b] = j + 1;","            name = 1;","        } else {","            name = 0;","        }","","        /* stage 2: solve the reduced problem","           recurse if names are not yet unique */","        if(name < m) {","            if((flags & 4) !== 0) { C = null; B = null; }","            if((flags & 2) !== 0) { B = null; }","            newfs = (n + fs) - (m * 2);","            if((flags & (1 | 4 | 8)) === 0) {","                if((k + name) <= newfs) { newfs -= k; }","                else { flags |= 8; }","            }","            ASSERT( (n >>> 1) <= (newfs + m) );","            for (i = m + (n >>> 1) - 1, j = m * 2 + newfs - 1; m <= i; i--) {","                if(SA[i] !== 0) { SA[j--] = SA[i] - 1; }","            }","            RA = SA.subarray(m + newfs);","            SA_IS(RA, SA, newfs, m, name, false);","            RA = null;","","            i = n - 1; j = m * 2 - 1; c0 = T[n - 1];","            do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));","            for (; i >= 0 ;) {","                do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) <= c1));","                if ( i >= 0 ) {","                    SA[j--] = i + 1;","                    do { c1 = c0; } while ((--i >= 0) && ((c0 = T[i]) >= c1));","                }","            }","","            for (i = 0; i < m; i++) { SA[i] = SA[m + SA[i]]; }","            if((flags & 4) !== 0) { C = B = Util.makeS32Buffer(k); }","            if((flags & 2) !== 0) { B = Util.makeS32Buffer(k); }","        }","","        /* stage 3: induce the result for the original problem */","        if((flags & 8) !== 0) { getCounts(T, C, n, k); }","        /* put all left-most S characters into their buckets */","        if (m > 1) {","            getBuckets(C, B, k, true); /* find ends of buckets */","            i = m - 1; j = n; p = SA[m - 1]; c1 = T[p];","            do {","                q = B[c0 = c1];","                while (q < j) { SA[--j] = 0; }","                do {","                    SA[--j] = p;","                    if(--i < 0) { break; }","                    p = SA[i];","                } while((c1 = T[p]) === c0);","            } while (i >= 0 );","            while ( j > 0 ) { SA[--j] = 0; }","        }","        if (!isbwt) { induceSA(T, SA, C, B, n, k); }","        else { pidx = computeBWT(T, SA, C, B, n, k); }","        C = null; B = null;","        return pidx;","    };","","    var BWT = Object.create(null);","    /** SA should be a Int32Array (signed!); T can be any typed array.","     *  alphabetSize is optional if T is an Uint8Array or Uint16Array. */","    BWT.suffixsort = function(T, SA, n, alphabetSize) {","        ASSERT( T && SA && T.length >= n && SA.length >= n );","        if (n <= 1) {","            if (n === 1) { SA[0] = 0; }","            return 0;","        }","        if (!alphabetSize) {","            if (T.BYTES_PER_ELEMENT === 1) { alphabetSize = 256; }","            else if (T.BYTES_PER_ELEMENT === 2) { alphabetSize = 65536; }","            else throw new Error('Need to specify alphabetSize');","        }","        ASSERT( alphabetSize > 0 );","        if (T.BYTES_PER_ELEMENT) {","            ASSERT( alphabetSize <= (1 << (T.BYTES_PER_ELEMENT*8) ) );","        }","        return SA_IS(T, SA, 0, n, alphabetSize, false);","    };","    /** Burrows-Wheeler Transform.","        A should be Int32Array (signed!); T can be any typed array.","        U is the same type as T (it is used for output).","        alphabetSize is optional if T is an Uint8Array or Uint16Array.","        ASSUMES STRING IS TERMINATED WITH AN EOF CHARACTER.","    */","    BWT.bwtransform = function(T, U, A, n, alphabetSize) {","        var i, pidx;","        ASSERT( T && U && A );","        ASSERT( T.length >= n && U.length >= n && A.length >= n );","        if (n <= 1) {","            if (n === 1) { U[0] = T[0]; }","            return n;","        }","        if (!alphabetSize) {","            if (T.BYTES_PER_ELEMENT === 1) { alphabetSize = 256; }","            else if (T.BYTES_PER_ELEMENT === 2) { alphabetSize = 65536; }","            else throw new Error('Need to specify alphabetSize');","        }","        ASSERT( alphabetSize > 0 );","        if (T.BYTES_PER_ELEMENT) {","            ASSERT( alphabetSize <= (1 << (T.BYTES_PER_ELEMENT*8) ) );","        }","        pidx = SA_IS(T, A, 0, n, alphabetSize, true);","        U[0] = T[n - 1];","        for (i = 0; i < pidx ; i++) { U[i + 1] = A[i]; }","        for (i += 1; i < n; i++) { U[i] = A[i]; }","        return pidx + 1;","    };","    /** Reverses transform above. (ASSUMED STRING IS TERMINATED WITH EOF.) */","    BWT.unbwtransform = function(T, U, LF, n, pidx) {","        var C = Util.makeU32Buffer(256);","        var i, t;","        for (i=0; i<256; i++) { C[i] = 0; }","        for (i=0; i<n; i++) { LF[i] = C[T[i]]++; }","        for (i=0, t=0; i<256; i++) { t += C[i]; C[i] = t - C[i]; }","        for (i=n-1, t=0; i>=0; i--) {","            t = LF[t] + C[U[i]=T[t]];","            t += (t<pidx) ? 1 : 0;","        }","        C = null;","    };","","    /** Burrows-Wheeler Transform.","        A should be Int32Array (signed!); T can be any typed array.","        U is the same type as T (it is used for output).","        alphabetSize is optional if T is an Uint8Array or Uint16Array.","        ASSUMES STRING IS CYCLIC.","        (XXX: this is twice as inefficient as I'd like! [CSA])","    */","    BWT.bwtransform2 = function(T, U, n, alphabetSize) {","        var i, j, pidx = 0;","        ASSERT( T && U );","        ASSERT( T.length >= n && U.length >= n );","        if (n <= 1) {","            if (n === 1) { U[0] = T[0]; }","            return 0;","        }","        if (!alphabetSize) {","            if (T.BYTES_PER_ELEMENT === 1) { alphabetSize = 256; }","            else if (T.BYTES_PER_ELEMENT === 2) { alphabetSize = 65536; }","            else throw new Error('Need to specify alphabetSize');","        }","        ASSERT( alphabetSize > 0 );","        if (T.BYTES_PER_ELEMENT) {","            ASSERT( alphabetSize <= (1 << (T.BYTES_PER_ELEMENT*8) ) );","        }","        // double length of T","        var TT;","        if (T.length >= n*2) {","            TT = T; // do it in place if possible","        } else if (alphabetSize <= 256) {","            TT = Util.makeU8Buffer(n*2);","        } else if (alphabetSize <= 65536) {","            TT = Util.makeU16Buffer(n*2);","        } else {","            TT = Util.makeU32Buffer(n*2);","        }","        if (TT!==T) {","            for (i=0; i<n; i++) { TT[i] = T[i]; }","        }","        for (i=0; i<n; i++) { TT[n+i] = TT[i]; }","        // sort doubled string","        var A = Util.makeS32Buffer(n*2);","        SA_IS(TT, A, 0, n*2, alphabetSize, false);","        for (i=0, j=0; i<2*n; i++) {","            var s = A[i];","            if (s < n) {","                if (s === 0) { pidx = j; }","                if (--s < 0) { s = n-1; }","                U[j++] = T[s];","            }","        }","        ASSERT(j===n);","        return pidx;","    };","","    return freeze(BWT);","});",""],"l":{"13":1,"14":1,"15":1,"21":1,"22":0,"23":0,"24":0,"26":1,"27":0,"28":0,"29":0,"31":0,"36":1,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"73":1,"74":0,"75":0,"76":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"104":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"114":0,"118":1,"119":0,"120":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0,"153":1,"154":0,"155":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"188":0,"191":0,"197":1,"198":0,"199":0,"200":0,"201":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"214":0,"215":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"243":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"258":0,"260":0,"261":0,"262":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"274":0,"275":0,"276":0,"280":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"294":0,"296":0,"297":0,"298":0,"299":0,"302":1,"305":1,"306":0,"307":0,"308":0,"309":0,"311":0,"312":0,"313":0,"314":0,"316":0,"317":0,"318":0,"320":0,"328":1,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"336":0,"337":0,"338":0,"339":0,"341":0,"342":0,"343":0,"345":0,"346":0,"347":0,"348":0,"349":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"362":0,"372":1,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"380":0,"381":0,"382":0,"383":0,"385":0,"386":0,"387":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"400":0,"401":0,"403":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"415":0,"416":0,"419":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Util.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Util.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":13,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":13,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":1,"151":0,"152":1,"153":1,"154":1,"155":128,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":1,"165":1,"166":1,"167":0,"168":1,"169":1,"170":1,"171":256,"172":1,"173":1,"174":1,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,1],"27":[1,1],"28":[1,0],"29":[0,0],"30":[1,0],"31":[1,0],"32":[1,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":13,"15":0,"16":13,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":128,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":31},"end":{"line":3,"column":56}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":29},"end":{"line":9,"column":56}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":29},"end":{"line":15,"column":40}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":25},"end":{"line":19,"column":58}}},"5":{"name":"(anonymous_5)","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":39}}},"6":{"name":"(anonymous_6)","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":36}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":24},"end":{"line":29,"column":35}}},"8":{"name":"(anonymous_8)","line":34,"loc":{"start":{"line":34,"column":29},"end":{"line":34,"column":40}}},"9":{"name":"(anonymous_9)","line":41,"loc":{"start":{"line":41,"column":29},"end":{"line":41,"column":43}}},"10":{"name":"(anonymous_10)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":50}}},"11":{"name":"(anonymous_11)","line":59,"loc":{"start":{"line":59,"column":39},"end":{"line":59,"column":55}}},"12":{"name":"(anonymous_12)","line":67,"loc":{"start":{"line":67,"column":39},"end":{"line":67,"column":50}}},"13":{"name":"(anonymous_13)","line":85,"loc":{"start":{"line":85,"column":30},"end":{"line":85,"column":53}}},"14":{"name":"(anonymous_14)","line":105,"loc":{"start":{"line":105,"column":30},"end":{"line":105,"column":71}}},"15":{"name":"(anonymous_15)","line":106,"loc":{"start":{"line":106,"column":15},"end":{"line":106,"column":52}}},"16":{"name":"(anonymous_16)","line":143,"loc":{"start":{"line":143,"column":32},"end":{"line":143,"column":54}}},"17":{"name":"(anonymous_17)","line":144,"loc":{"start":{"line":144,"column":15},"end":{"line":144,"column":45}}},"18":{"name":"(anonymous_18)","line":168,"loc":{"start":{"line":168,"column":29},"end":{"line":168,"column":65}}},"19":{"name":"(anonymous_19)","line":181,"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":68}}},"20":{"name":"(anonymous_20)","line":194,"loc":{"start":{"line":194,"column":31},"end":{"line":194,"column":51}}},"21":{"name":"(anonymous_21)","line":211,"loc":{"start":{"line":211,"column":30},"end":{"line":211,"column":46}}},"22":{"name":"(anonymous_22)","line":224,"loc":{"start":{"line":224,"column":19},"end":{"line":224,"column":31}}},"23":{"name":"(anonymous_23)","line":231,"loc":{"start":{"line":231,"column":24},"end":{"line":231,"column":39}}},"24":{"name":"id","line":238,"loc":{"start":{"line":238,"column":23},"end":{"line":238,"column":38}}},"25":{"name":"(anonymous_25)","line":240,"loc":{"start":{"line":240,"column":56},"end":{"line":240,"column":68}}},"26":{"name":"(anonymous_26)","line":248,"loc":{"start":{"line":248,"column":63},"end":{"line":248,"column":78}}},"27":{"name":"(anonymous_27)","line":251,"loc":{"start":{"line":251,"column":43},"end":{"line":251,"column":58}}},"28":{"name":"(anonymous_28)","line":258,"loc":{"start":{"line":258,"column":65},"end":{"line":258,"column":80}}},"29":{"name":"(anonymous_29)","line":264,"loc":{"start":{"line":264,"column":65},"end":{"line":264,"column":80}}},"30":{"name":"(anonymous_30)","line":270,"loc":{"start":{"line":270,"column":64},"end":{"line":270,"column":79}}},"31":{"name":"(anonymous_31)","line":275,"loc":{"start":{"line":275,"column":21},"end":{"line":275,"column":40}}},"32":{"name":"(anonymous_32)","line":301,"loc":{"start":{"line":301,"column":25},"end":{"line":301,"column":37}}},"33":{"name":"(anonymous_33)","line":319,"loc":{"start":{"line":319,"column":17},"end":{"line":319,"column":29}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":324,"column":3}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":35}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":25}},"6":{"start":{"line":9,"column":4},"end":{"line":51,"column":6}},"7":{"start":{"line":10,"column":8},"end":{"line":49,"column":9}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":31}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":39}},"11":{"start":{"line":14,"column":12},"end":{"line":14,"column":26}},"12":{"start":{"line":15,"column":12},"end":{"line":18,"column":14}},"13":{"start":{"line":16,"column":16},"end":{"line":16,"column":58}},"14":{"start":{"line":16,"column":45},"end":{"line":16,"column":56}},"15":{"start":{"line":17,"column":16},"end":{"line":17,"column":42}},"16":{"start":{"line":19,"column":12},"end":{"line":26,"column":14}},"17":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}},"18":{"start":{"line":21,"column":16},"end":{"line":24,"column":17}},"19":{"start":{"line":22,"column":20},"end":{"line":22,"column":58}},"20":{"start":{"line":23,"column":20},"end":{"line":23,"column":32}},"21":{"start":{"line":25,"column":16},"end":{"line":25,"column":33}},"22":{"start":{"line":27,"column":12},"end":{"line":27,"column":59}},"23":{"start":{"line":27,"column":41},"end":{"line":27,"column":56}},"24":{"start":{"line":28,"column":12},"end":{"line":28,"column":57}},"25":{"start":{"line":28,"column":38},"end":{"line":28,"column":54}},"26":{"start":{"line":29,"column":12},"end":{"line":29,"column":73}},"27":{"start":{"line":29,"column":37},"end":{"line":29,"column":70}},"28":{"start":{"line":30,"column":15},"end":{"line":49,"column":9}},"29":{"start":{"line":32,"column":12},"end":{"line":32,"column":26}},"30":{"start":{"line":33,"column":12},"end":{"line":33,"column":33}},"31":{"start":{"line":34,"column":12},"end":{"line":38,"column":14}},"32":{"start":{"line":35,"column":16},"end":{"line":35,"column":38}},"33":{"start":{"line":36,"column":16},"end":{"line":36,"column":53}},"34":{"start":{"line":36,"column":34},"end":{"line":36,"column":51}},"35":{"start":{"line":37,"column":16},"end":{"line":37,"column":26}},"36":{"start":{"line":39,"column":12},"end":{"line":39,"column":53}},"37":{"start":{"line":39,"column":31},"end":{"line":39,"column":51}},"38":{"start":{"line":40,"column":12},"end":{"line":45,"column":13}},"39":{"start":{"line":41,"column":16},"end":{"line":44,"column":18}},"40":{"start":{"line":42,"column":20},"end":{"line":42,"column":32}},"41":{"start":{"line":43,"column":20},"end":{"line":43,"column":38}},"42":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"43":{"start":{"line":47,"column":16},"end":{"line":47,"column":44}},"44":{"start":{"line":50,"column":8},"end":{"line":50,"column":21}},"45":{"start":{"line":53,"column":4},"end":{"line":57,"column":6}},"46":{"start":{"line":54,"column":8},"end":{"line":54,"column":29}},"47":{"start":{"line":55,"column":8},"end":{"line":55,"column":33}},"48":{"start":{"line":56,"column":8},"end":{"line":56,"column":21}},"49":{"start":{"line":58,"column":4},"end":{"line":58,"column":61}},"50":{"start":{"line":59,"column":4},"end":{"line":66,"column":6}},"51":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"52":{"start":{"line":61,"column":12},"end":{"line":61,"column":70}},"53":{"start":{"line":62,"column":12},"end":{"line":62,"column":39}},"54":{"start":{"line":63,"column":12},"end":{"line":63,"column":36}},"55":{"start":{"line":65,"column":8},"end":{"line":65,"column":40}},"56":{"start":{"line":67,"column":4},"end":{"line":77,"column":6}},"57":{"start":{"line":69,"column":8},"end":{"line":75,"column":9}},"58":{"start":{"line":70,"column":12},"end":{"line":71,"column":79}},"59":{"start":{"line":71,"column":16},"end":{"line":71,"column":79}},"60":{"start":{"line":72,"column":12},"end":{"line":72,"column":56}},"61":{"start":{"line":73,"column":12},"end":{"line":73,"column":61}},"62":{"start":{"line":74,"column":12},"end":{"line":74,"column":36}},"63":{"start":{"line":76,"column":8},"end":{"line":76,"column":27}},"64":{"start":{"line":85,"column":4},"end":{"line":103,"column":6}},"65":{"start":{"line":86,"column":8},"end":{"line":86,"column":51}},"66":{"start":{"line":87,"column":8},"end":{"line":98,"column":9}},"67":{"start":{"line":88,"column":12},"end":{"line":95,"column":13}},"68":{"start":{"line":89,"column":16},"end":{"line":89,"column":25}},"69":{"start":{"line":90,"column":19},"end":{"line":95,"column":13}},"70":{"start":{"line":91,"column":16},"end":{"line":91,"column":42}},"71":{"start":{"line":92,"column":16},"end":{"line":92,"column":76}},"72":{"start":{"line":94,"column":16},"end":{"line":94,"column":59}},"73":{"start":{"line":97,"column":12},"end":{"line":97,"column":72}},"74":{"start":{"line":99,"column":8},"end":{"line":101,"column":11}},"75":{"start":{"line":102,"column":8},"end":{"line":102,"column":17}},"76":{"start":{"line":105,"column":4},"end":{"line":142,"column":6}},"77":{"start":{"line":106,"column":8},"end":{"line":141,"column":10}},"78":{"start":{"line":107,"column":12},"end":{"line":107,"column":56}},"79":{"start":{"line":108,"column":12},"end":{"line":108,"column":66}},"80":{"start":{"line":109,"column":12},"end":{"line":109,"column":33}},"81":{"start":{"line":113,"column":12},"end":{"line":113,"column":18}},"82":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"83":{"start":{"line":115,"column":16},"end":{"line":115,"column":57}},"84":{"start":{"line":119,"column":12},"end":{"line":119,"column":25}},"85":{"start":{"line":120,"column":12},"end":{"line":124,"column":13}},"86":{"start":{"line":121,"column":16},"end":{"line":121,"column":41}},"87":{"start":{"line":123,"column":16},"end":{"line":123,"column":30}},"88":{"start":{"line":125,"column":12},"end":{"line":135,"column":13}},"89":{"start":{"line":126,"column":16},"end":{"line":126,"column":60}},"90":{"start":{"line":127,"column":16},"end":{"line":127,"column":73}},"91":{"start":{"line":128,"column":16},"end":{"line":128,"column":45}},"92":{"start":{"line":129,"column":16},"end":{"line":131,"column":17}},"93":{"start":{"line":130,"column":20},"end":{"line":130,"column":54}},"94":{"start":{"line":132,"column":16},"end":{"line":132,"column":66}},"95":{"start":{"line":134,"column":16},"end":{"line":134,"column":66}},"96":{"start":{"line":138,"column":12},"end":{"line":138,"column":74}},"97":{"start":{"line":140,"column":12},"end":{"line":140,"column":28}},"98":{"start":{"line":143,"column":4},"end":{"line":166,"column":6}},"99":{"start":{"line":144,"column":8},"end":{"line":165,"column":10}},"100":{"start":{"line":145,"column":12},"end":{"line":145,"column":56}},"101":{"start":{"line":149,"column":12},"end":{"line":149,"column":18}},"102":{"start":{"line":150,"column":12},"end":{"line":154,"column":13}},"103":{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},"104":{"start":{"line":152,"column":20},"end":{"line":152,"column":49}},"105":{"start":{"line":157,"column":12},"end":{"line":157,"column":65}},"106":{"start":{"line":158,"column":12},"end":{"line":158,"column":65}},"107":{"start":{"line":159,"column":12},"end":{"line":159,"column":33}},"108":{"start":{"line":162,"column":12},"end":{"line":162,"column":48}},"109":{"start":{"line":164,"column":12},"end":{"line":164,"column":28}},"110":{"start":{"line":168,"column":4},"end":{"line":179,"column":6}},"111":{"start":{"line":169,"column":8},"end":{"line":169,"column":23}},"112":{"start":{"line":170,"column":8},"end":{"line":178,"column":9}},"113":{"start":{"line":171,"column":12},"end":{"line":171,"column":41}},"114":{"start":{"line":172,"column":12},"end":{"line":175,"column":13}},"115":{"start":{"line":173,"column":16},"end":{"line":173,"column":34}},"116":{"start":{"line":174,"column":16},"end":{"line":174,"column":22}},"117":{"start":{"line":176,"column":12},"end":{"line":176,"column":29}},"118":{"start":{"line":177,"column":12},"end":{"line":177,"column":21}},"119":{"start":{"line":181,"column":4},"end":{"line":191,"column":6}},"120":{"start":{"line":182,"column":8},"end":{"line":182,"column":24}},"121":{"start":{"line":183,"column":8},"end":{"line":190,"column":9}},"122":{"start":{"line":184,"column":12},"end":{"line":184,"column":36}},"123":{"start":{"line":185,"column":12},"end":{"line":187,"column":13}},"124":{"start":{"line":186,"column":16},"end":{"line":186,"column":22}},"125":{"start":{"line":188,"column":12},"end":{"line":188,"column":36}},"126":{"start":{"line":189,"column":12},"end":{"line":189,"column":22}},"127":{"start":{"line":194,"column":4},"end":{"line":208,"column":6}},"128":{"start":{"line":195,"column":8},"end":{"line":195,"column":31}},"129":{"start":{"line":196,"column":8},"end":{"line":196,"column":26}},"130":{"start":{"line":197,"column":8},"end":{"line":202,"column":26}},"131":{"start":{"line":198,"column":12},"end":{"line":198,"column":33}},"132":{"start":{"line":201,"column":12},"end":{"line":201,"column":38}},"133":{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},"134":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"135":{"start":{"line":205,"column":12},"end":{"line":205,"column":39}},"136":{"start":{"line":207,"column":8},"end":{"line":207,"column":22}},"137":{"start":{"line":211,"column":4},"end":{"line":220,"column":6}},"138":{"start":{"line":212,"column":8},"end":{"line":212,"column":21}},"139":{"start":{"line":213,"column":8},"end":{"line":218,"column":9}},"140":{"start":{"line":214,"column":12},"end":{"line":214,"column":33}},"141":{"start":{"line":215,"column":12},"end":{"line":215,"column":49}},"142":{"start":{"line":215,"column":26},"end":{"line":215,"column":40}},"143":{"start":{"line":215,"column":41},"end":{"line":215,"column":47}},"144":{"start":{"line":217,"column":12},"end":{"line":217,"column":30}},"145":{"start":{"line":219,"column":8},"end":{"line":219,"column":17}},"146":{"start":{"line":224,"column":4},"end":{"line":229,"column":6}},"147":{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},"148":{"start":{"line":226,"column":12},"end":{"line":226,"column":21}},"149":{"start":{"line":228,"column":8},"end":{"line":228,"column":17}},"150":{"start":{"line":231,"column":4},"end":{"line":233,"column":6}},"151":{"start":{"line":232,"column":8},"end":{"line":232,"column":41}},"152":{"start":{"line":238,"column":4},"end":{"line":238,"column":52}},"153":{"start":{"line":238,"column":40},"end":{"line":238,"column":49}},"154":{"start":{"line":239,"column":4},"end":{"line":245,"column":5}},"155":{"start":{"line":241,"column":12},"end":{"line":241,"column":27}},"156":{"start":{"line":244,"column":8},"end":{"line":244,"column":32}},"157":{"start":{"line":248,"column":4},"end":{"line":255,"column":22}},"158":{"start":{"line":250,"column":8},"end":{"line":250,"column":50}},"159":{"start":{"line":252,"column":8},"end":{"line":252,"column":33}},"160":{"start":{"line":253,"column":8},"end":{"line":253,"column":18}},"161":{"start":{"line":254,"column":8},"end":{"line":254,"column":17}},"162":{"start":{"line":258,"column":4},"end":{"line":261,"column":22}},"163":{"start":{"line":260,"column":8},"end":{"line":260,"column":51}},"164":{"start":{"line":264,"column":4},"end":{"line":267,"column":22}},"165":{"start":{"line":266,"column":8},"end":{"line":266,"column":51}},"166":{"start":{"line":270,"column":4},"end":{"line":273,"column":22}},"167":{"start":{"line":272,"column":8},"end":{"line":272,"column":50}},"168":{"start":{"line":275,"column":4},"end":{"line":281,"column":6}},"169":{"start":{"line":276,"column":8},"end":{"line":276,"column":49}},"170":{"start":{"line":277,"column":8},"end":{"line":279,"column":9}},"171":{"start":{"line":278,"column":12},"end":{"line":278,"column":28}},"172":{"start":{"line":280,"column":8},"end":{"line":280,"column":19}},"173":{"start":{"line":284,"column":4},"end":{"line":296,"column":6}},"174":{"start":{"line":297,"column":4},"end":{"line":297,"column":43}},"175":{"start":{"line":301,"column":4},"end":{"line":317,"column":6}},"176":{"start":{"line":302,"column":8},"end":{"line":302,"column":29}},"177":{"start":{"line":303,"column":8},"end":{"line":305,"column":9}},"178":{"start":{"line":304,"column":12},"end":{"line":304,"column":57}},"179":{"start":{"line":306,"column":8},"end":{"line":316,"column":9}},"180":{"start":{"line":307,"column":12},"end":{"line":311,"column":13}},"181":{"start":{"line":308,"column":16},"end":{"line":308,"column":53}},"182":{"start":{"line":310,"column":16},"end":{"line":310,"column":44}},"183":{"start":{"line":312,"column":15},"end":{"line":316,"column":9}},"184":{"start":{"line":313,"column":12},"end":{"line":313,"column":38}},"185":{"start":{"line":315,"column":12},"end":{"line":315,"column":30}},"186":{"start":{"line":319,"column":4},"end":{"line":321,"column":6}},"187":{"start":{"line":320,"column":8},"end":{"line":320,"column":35}},"188":{"start":{"line":323,"column":4},"end":{"line":323,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":16}},{"start":{"line":16,"column":16},"end":{"line":16,"column":16}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":41}},{"start":{"line":21,"column":45},"end":{"line":21,"column":69}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":15}},{"start":{"line":30,"column":15},"end":{"line":30,"column":15}}]},"6":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":28}},{"start":{"line":30,"column":32},"end":{"line":30,"column":50}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":16}},{"start":{"line":36,"column":16},"end":{"line":36,"column":16}}]},"8":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"10":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"11":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"12":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":25}},{"start":{"line":60,"column":29},"end":{"line":60,"column":59}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"14":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]},"15":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"16":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":12}},{"start":{"line":88,"column":12},"end":{"line":88,"column":12}}]},"17":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":16},"end":{"line":88,"column":41}},{"start":{"line":88,"column":45},"end":{"line":88,"column":66}}]},"18":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":19},"end":{"line":90,"column":19}},{"start":{"line":90,"column":19},"end":{"line":90,"column":19}}]},"19":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":12}},{"start":{"line":120,"column":12},"end":{"line":120,"column":12}}]},"20":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":16},"end":{"line":120,"column":34}},{"start":{"line":120,"column":38},"end":{"line":120,"column":56}}]},"21":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":12}},{"start":{"line":125,"column":12},"end":{"line":125,"column":12}}]},"22":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":16},"end":{"line":151,"column":16}},{"start":{"line":151,"column":16},"end":{"line":151,"column":16}}]},"23":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":12}},{"start":{"line":172,"column":12},"end":{"line":172,"column":12}}]},"24":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":12},"end":{"line":185,"column":12}},{"start":{"line":185,"column":12},"end":{"line":185,"column":12}}]},"25":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":12},"end":{"line":215,"column":12}},{"start":{"line":215,"column":12},"end":{"line":215,"column":12}}]},"26":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"27":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":9},"end":{"line":239,"column":40}},{"start":{"line":240,"column":8},"end":{"line":242,"column":10}}]},"28":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":63},"end":{"line":251,"column":5}},{"start":{"line":251,"column":8},"end":{"line":255,"column":21}}]},"29":{"line":251,"type":"cond-expr","locations":[{"start":{"line":251,"column":43},"end":{"line":255,"column":5}},{"start":{"line":255,"column":8},"end":{"line":255,"column":21}}]},"30":{"line":258,"type":"cond-expr","locations":[{"start":{"line":258,"column":65},"end":{"line":261,"column":5}},{"start":{"line":261,"column":8},"end":{"line":261,"column":21}}]},"31":{"line":264,"type":"cond-expr","locations":[{"start":{"line":264,"column":65},"end":{"line":267,"column":5}},{"start":{"line":267,"column":8},"end":{"line":267,"column":21}}]},"32":{"line":270,"type":"cond-expr","locations":[{"start":{"line":270,"column":64},"end":{"line":273,"column":5}},{"start":{"line":273,"column":8},"end":{"line":273,"column":21}}]},"33":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":8},"end":{"line":303,"column":8}},{"start":{"line":303,"column":8},"end":{"line":303,"column":8}}]},"34":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8}},{"start":{"line":306,"column":8},"end":{"line":306,"column":8}}]},"35":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":12},"end":{"line":307,"column":12}},{"start":{"line":307,"column":12},"end":{"line":307,"column":12}}]},"36":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":15},"end":{"line":312,"column":15}},{"start":{"line":312,"column":15},"end":{"line":312,"column":15}}]},"37":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":23},"end":{"line":320,"column":25}},{"start":{"line":320,"column":26},"end":{"line":320,"column":34}}]}},"code":["/* Some basic utilities, used in a number of places. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./freeze','./Stream'],function(freeze, Stream) {","    var Util = Object.create(null);","","    var EOF = Stream.EOF;","","    /* Take a buffer, array, or stream, and return an input stream. */","    Util.coerceInputStream = function(input, forceRead) {","        if (!('readByte' in input)) {","            var buffer = input;","            input = new Stream();","            input.size = buffer.length;","            input.pos = 0;","            input.readByte = function() {","                if (this.pos >= this.size) { return EOF; }","                return buffer[this.pos++];","            };","            input.read = function(buf, bufOffset, length) {","                var bytesRead = 0;","                while (bytesRead < length && this.pos < buffer.length) {","                    buf[bufOffset++] = buffer[this.pos++];","                    bytesRead++;","                }","                return bytesRead;","            };","            input.seek = function(pos) { this.pos = pos; };","            input.tell = function() { return this.pos; };","            input.eof = function() { return this.pos >= buffer.length; };","        } else if (forceRead && !('read' in input)) {","            // wrap input if it doesn't implement read","            var s = input;","            input = new Stream();","            input.readByte = function() {","                var ch = s.readByte();","                if (ch === EOF) { this._eof = true; }","                return ch;","            };","            if ('size' in s) { input.size = s.size; }","            if ('seek' in s) {","                input.seek = function(pos) {","                    s.seek(pos); // may throw if s doesn't implement seek","                    this._eof = false;","                };","            }","            if ('tell' in s) {","                input.tell = s.tell.bind(s);","            }","        }","        return input;","    };","","    var BufferStream = function(buffer, resizeOk) {","        this.buffer = buffer;","        this.resizeOk = resizeOk;","        this.pos = 0;","    };","    BufferStream.prototype = Object.create(Stream.prototype);","    BufferStream.prototype.writeByte = function(_byte) {","        if (this.resizeOk && this.pos >= this.buffer.length) {","            var newBuffer = Util.makeU8Buffer(this.buffer.length * 2);","            newBuffer.set(this.buffer);","            this.buffer = newBuffer;","        }","        this.buffer[this.pos++] = _byte;","    };","    BufferStream.prototype.getBuffer = function() {","        // trim buffer if needed","        if (this.pos !== this.buffer.length) {","            if (!this.resizeOk)","                throw new TypeError('outputsize does not match decoded input');","            var newBuffer = Util.makeU8Buffer(this.pos);","            newBuffer.set(this.buffer.subarray(0, this.pos));","            this.buffer = newBuffer;","        }","        return this.buffer;","    };","","    /* Take a stream (or not) and an (optional) size, and return an","     * output stream.  Return an object with a 'retval' field equal to","     * the output stream (if that was given) or else a pointer at the","     * internal Uint8Array/buffer/array; and a 'stream' field equal to","     * an output stream to use.","     */","    Util.coerceOutputStream = function(output, size) {","        var r = { stream: output, retval: output };","        if (output) {","            if (typeof(output)==='object' && 'writeByte' in output) {","                return r; /* leave output alone */","            } else if (typeof(size) === 'number') {","                console.assert(size >= 0);","                r.stream = new BufferStream(Util.makeU8Buffer(size), false);","            } else { // output is a buffer","                r.stream = new BufferStream(output, false);","            }","        } else {","            r.stream = new BufferStream(Util.makeU8Buffer(16384), true);","        }","        Object.defineProperty(r, 'retval', {","            get: r.stream.getBuffer.bind(r.stream)","        });","        return r;","    };","","    Util.compressFileHelper = function(magic, guts, suppressFinalByte) {","        return function(inStream, outStream, props) {","            inStream = Util.coerceInputStream(inStream);","            var o = Util.coerceOutputStream(outStream, outStream);","            outStream = o.stream;","","            // write the magic number to identify this file type","            // (it better be ASCII, we're not doing utf-8 conversion)","            var i;","            for (i=0; i<magic.length; i++) {","                outStream.writeByte(magic.charCodeAt(i));","            }","","            // if we know the size, write it","            var fileSize;","            if ('size' in inStream && inStream.size >= 0) {","                fileSize = inStream.size;","            } else {","                fileSize = -1; // size unknown","            }","            if (suppressFinalByte) {","                var tmpOutput = Util.coerceOutputStream([]);","                Util.writeUnsignedNumber(tmpOutput.stream, fileSize + 1);","                tmpOutput = tmpOutput.retval;","                for (i=0; i<tmpOutput.length-1; i++) {","                    outStream.writeByte(tmpOutput[i]);","                }","                suppressFinalByte = tmpOutput[tmpOutput.length-1];","            } else {","                Util.writeUnsignedNumber(outStream, fileSize + 1);","            }","","            // call the guts to do the real compression","            guts(inStream, outStream, fileSize, props, suppressFinalByte);","","            return o.retval;","        };","    };","    Util.decompressFileHelper = function(magic, guts) {","        return function(inStream, outStream) {","            inStream = Util.coerceInputStream(inStream);","","            // read the magic number to confirm this file type","            // (it better be ASCII, we're not doing utf-8 conversion)","            var i;","            for (i=0; i<magic.length; i++) {","                if (magic.charCodeAt(i) !== inStream.readByte()) {","                    throw new Error(\"Bad magic\");","                }","            }","","            // read the file size & create an appropriate output stream/buffer","            var fileSize = Util.readUnsignedNumber(inStream) - 1;","            var o = Util.coerceOutputStream(outStream, fileSize);","            outStream = o.stream;","","            // call the guts to do the real decompression","            guts(inStream, outStream, fileSize);","","            return o.retval;","        };","    };","    // a helper for simple self-test of model encode","    Util.compressWithModel = function(inStream, fileSize, model) {","        var inSize = 0;","        while (inSize !== fileSize) {","            var ch = inStream.readByte();","            if (ch === EOF) {","                model.encode(256); // end of stream;","                break;","            }","            model.encode(ch);","            inSize++;","        }","    };","    // a helper for simple self-test of model decode","    Util.decompressWithModel = function(outStream, fileSize, model) {","        var outSize = 0;","        while (outSize !== fileSize) {","            var ch = model.decode();","            if (ch === 256) {","                break; // end of stream;","            }","            outStream.writeByte(ch);","            outSize++;","        }","    };","","    /** Write a number using a self-delimiting big-endian encoding. */","    Util.writeUnsignedNumber = function(output, n) {","        console.assert(n >= 0);","        var bytes = [], i;","        do {","            bytes.push(n & 0x7F);","            // use division instead of shift to allow encoding numbers up to","            // 2^53","            n = Math.floor( n / 128 );","        } while (n !== 0);","        bytes[0] |= 0x80; // mark end of encoding.","        for (i=bytes.length-1; i>=0; i--) {","            output.writeByte(bytes[i]); // write in big-endian order","        }","        return output;","    };","","    /** Read a number using a self-delimiting big-endian encoding. */","    Util.readUnsignedNumber = function(input) {","        var n = 0, c;","        while (true) {","            c = input.readByte();","            if (c&0x80) { n += (c&0x7F); break; }","            // using + and * instead of << allows decoding numbers up to 2^53","            n = (n + c) * 128;","        }","        return n;","    };","","    // Compatibility thunks for Buffer/TypedArray constructors.","","    var zerofill = function(a) {","        for (var i = 0, len = a.length; i < len; i++) {","            a[i] = 0;","        }","        return a;","    };","","    var fallbackarray = function(size) {","        return zerofill(new Array(size));","    };","","    // Node 0.11.6 - 0.11.10ish don't properly zero fill typed arrays.","    // See https://github.com/joyent/node/issues/6664","    // Try to detect and workaround the bug.","    var ensureZeroed = function id(a) { return a; };","    if ((typeof(process) !== 'undefined') &&","        Array.prototype.some.call(new Uint32Array(128), function(x) {","            return x !== 0;","        })) {","        //console.warn('Working around broken TypedArray');","        ensureZeroed = zerofill;","    }","","    /** Portable 8-bit unsigned buffer. */","    Util.makeU8Buffer = (typeof(Uint8Array) !== 'undefined') ? function(size) {","        // Uint8Array ought to be  automatically zero-filled","        return ensureZeroed(new Uint8Array(size));","    } : (typeof(Buffer) !== 'undefined') ? function(size) {","        var b = new Buffer(size);","        b.fill(0);","        return b;","    } : fallbackarray;","","    /** Portable 16-bit unsigned buffer. */","    Util.makeU16Buffer = (typeof(Uint16Array) !== 'undefined') ? function(size) {","        // Uint16Array ought to be  automatically zero-filled","        return ensureZeroed(new Uint16Array(size));","    } : fallbackarray;","","    /** Portable 32-bit unsigned buffer. */","    Util.makeU32Buffer = (typeof(Uint32Array) !== 'undefined') ? function(size) {","        // Uint32Array ought to be  automatically zero-filled","        return ensureZeroed(new Uint32Array(size));","    } : fallbackarray;","","    /** Portable 32-bit signed buffer. */","    Util.makeS32Buffer = (typeof(Int32Array) !== 'undefined') ? function(size) {","        // Int32Array ought to be  automatically zero-filled","        return ensureZeroed(new Int32Array(size));","    } : fallbackarray;","","    Util.arraycopy = function(dst, src) {","        console.assert(dst.length >= src.length);","        for (var i = 0, len = src.length; i < len ; i++) {","            dst[i] = src[i];","        }","        return dst;","    };","","    /** Highest bit set in a byte. */","    var bytemsb = [","        0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,","        5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,","        6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7,","        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,","        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,","        7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,","        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,","        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,","        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,","        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,","        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 /* 256 */","    ];","    console.assert(bytemsb.length===0x100);","    /** Find last set (most significant bit).","     *  @return the last bit set in the argument.","     *          <code>fls(0)==0</code> and <code>fls(1)==1</code>. */","    var fls = Util.fls = function(v) {","        console.assert(v>=0);","        if (v > 0xFFFFFFFF) { // use floating-point mojo","            return 32 + fls(Math.floor(v / 0x100000000));","        }","        if ( (v & 0xFFFF0000) !== 0) {","            if ( (v & 0xFF000000) !== 0) {","                return 24 + bytemsb[(v>>>24) & 0xFF];","            } else {","                return 16 + bytemsb[v>>>16];","            }","        } else if ( (v & 0x0000FF00) !== 0) {","            return 8 + bytemsb[v>>>8];","        } else {","            return bytemsb[v];","        }","    };","    /** Returns ceil(log2(n)) */","    Util.log2c = function(v) {","        return (v===0)?-1:fls(v-1);","    };","","    return freeze(Util); // ensure constants are recognized as such.","});",""],"l":{"2":1,"3":1,"4":1,"6":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"46":0,"47":0,"50":0,"53":1,"54":0,"55":0,"56":0,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"65":0,"67":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"94":0,"97":0,"99":0,"102":0,"105":1,"106":13,"107":0,"108":0,"109":0,"113":0,"114":0,"115":0,"119":0,"120":0,"121":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"134":0,"138":0,"140":0,"143":1,"144":13,"145":0,"149":0,"150":0,"151":0,"152":0,"157":0,"158":0,"159":0,"162":0,"164":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"176":0,"177":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"188":0,"189":0,"194":1,"195":0,"196":0,"197":0,"198":0,"201":0,"203":0,"204":0,"205":0,"207":0,"211":1,"212":0,"213":0,"214":0,"215":0,"217":0,"219":0,"224":1,"225":0,"226":0,"228":0,"231":1,"232":0,"238":1,"239":1,"241":128,"244":0,"248":1,"250":0,"252":0,"253":0,"254":0,"258":1,"260":0,"264":1,"266":1,"270":1,"272":0,"275":1,"276":1,"277":1,"278":256,"280":1,"284":1,"297":1,"301":1,"302":0,"303":0,"304":0,"306":0,"307":0,"308":0,"310":0,"312":0,"313":0,"315":0,"319":1,"320":0,"323":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Context1Model.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Context1Model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":45},"end":{"line":3,"column":78}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":70}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":33},"end":{"line":13,"column":55}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":33},"end":{"line":16,"column":51}}},"5":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":74},"end":{"line":22,"column":121}}},"6":{"name":"(anonymous_6)","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}}},"7":{"name":"(anonymous_7)","line":38,"loc":{"start":{"line":38,"column":78},"end":{"line":38,"column":118}}},"8":{"name":"(anonymous_8)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":23}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":56,"column":3}},"4":{"start":{"line":5,"column":0},"end":{"line":12,"column":2}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":8}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":25}},"7":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":54}},"9":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":40}},"11":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"12":{"start":{"line":17,"column":2},"end":{"line":17,"column":45}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}},"14":{"start":{"line":22,"column":0},"end":{"line":37,"column":3}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":43}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":39}},"18":{"start":{"line":25,"column":22},"end":{"line":25,"column":37}},"19":{"start":{"line":26,"column":2},"end":{"line":26,"column":47}},"20":{"start":{"line":27,"column":2},"end":{"line":27,"column":58}},"21":{"start":{"line":28,"column":2},"end":{"line":28,"column":22}},"22":{"start":{"line":29,"column":2},"end":{"line":34,"column":4}},"23":{"start":{"line":31,"column":6},"end":{"line":31,"column":37}},"24":{"start":{"line":32,"column":6},"end":{"line":32,"column":24}},"25":{"start":{"line":35,"column":2},"end":{"line":35,"column":53}},"26":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}},"27":{"start":{"line":38,"column":0},"end":{"line":53,"column":3}},"28":{"start":{"line":39,"column":2},"end":{"line":39,"column":42}},"29":{"start":{"line":40,"column":2},"end":{"line":40,"column":25}},"30":{"start":{"line":41,"column":2},"end":{"line":41,"column":39}},"31":{"start":{"line":41,"column":22},"end":{"line":41,"column":37}},"32":{"start":{"line":42,"column":2},"end":{"line":42,"column":47}},"33":{"start":{"line":43,"column":2},"end":{"line":43,"column":58}},"34":{"start":{"line":44,"column":2},"end":{"line":44,"column":22}},"35":{"start":{"line":45,"column":2},"end":{"line":51,"column":4}},"36":{"start":{"line":47,"column":6},"end":{"line":47,"column":42}},"37":{"start":{"line":48,"column":6},"end":{"line":48,"column":24}},"38":{"start":{"line":49,"column":6},"end":{"line":49,"column":20}},"39":{"start":{"line":52,"column":2},"end":{"line":52,"column":56}},"40":{"start":{"line":55,"column":0},"end":{"line":55,"column":21}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/** A simple context-1 model. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./BitStream','./Huffman','./Util'], function(BitStream,Huffman,Util) {","","var Context1Model = function(modelFactory, contextSize, alphabetSize) {","  var i;","  this.literalModel = [];","  // even if there's an EOF symbol, we don't need a context for it!","  for (i=0; i<contextSize; i++) {","    this.literalModel[i] = modelFactory(alphabetSize);","  }","};","Context1Model.prototype.encode = function(ch, context) {","  this.literalModel[context].encode(ch);","};","Context1Model.prototype.decode = function(context) {","  return this.literalModel[context].decode();","};","","/** Simple self-test. */","Context1Model.MAGIC='ctx1';","Context1Model.compressFile = Util.compressFileHelper(Context1Model.MAGIC, function(inStream, outStream, fileSize, props) {","  var bitstream = new BitStream(outStream);","  var alphabetSize = 256;","  if (fileSize < 0) { alphabetSize++; }","  var coder = Huffman.factory(bitstream, 8191);","  var model = new Context1Model(coder, 256, alphabetSize);","  var lastchar = 0x20;","  var modelp = {","    encode: function(symbol) {","      model.encode(symbol, lastchar);","      lastchar = symbol;","    }","  };","  Util.compressWithModel(inStream, fileSize, modelp);","  bitstream.flush();","});","Context1Model.decompressFile = Util.decompressFileHelper(Context1Model.MAGIC, function(inStream, outStream, fileSize) {","  var bitstream = new BitStream(inStream);","  var alphabetSize = 256;","  if (fileSize < 0) { alphabetSize++; }","  var coder = Huffman.factory(bitstream, 8191);","  var model = new Context1Model(coder, 256, alphabetSize);","  var lastchar = 0x20;","  var modelp = {","    decode: function() {","      var symbol = model.decode(lastchar);","      lastchar = symbol;","      return symbol;","    }","  };","  Util.decompressWithModel(outStream, fileSize, modelp);","});","","return Context1Model;","});",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"9":0,"10":0,"13":1,"14":0,"16":1,"17":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"35":0,"36":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"52":0,"55":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Huffman.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Huffman.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":32},"end":{"line":10,"column":57}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":48}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":36}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":23},"end":{"line":70,"column":40}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":14},"end":{"line":80,"column":58}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":18},"end":{"line":122,"column":50}}},"7":{"name":"(anonymous_7)","line":123,"loc":{"start":{"line":123,"column":9},"end":{"line":123,"column":24}}},"8":{"name":"(anonymous_8)","line":131,"loc":{"start":{"line":131,"column":26},"end":{"line":131,"column":43}}},"9":{"name":"(anonymous_9)","line":178,"loc":{"start":{"line":178,"column":27},"end":{"line":178,"column":42}}},"10":{"name":"(anonymous_10)","line":207,"loc":{"start":{"line":207,"column":26},"end":{"line":207,"column":41}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":45}}},"12":{"name":"(anonymous_12)","line":298,"loc":{"start":{"line":298,"column":26},"end":{"line":298,"column":41}}},"13":{"name":"(anonymous_13)","line":340,"loc":{"start":{"line":340,"column":27},"end":{"line":340,"column":44}}},"14":{"name":"(anonymous_14)","line":366,"loc":{"start":{"line":366,"column":27},"end":{"line":366,"column":44}}},"15":{"name":"(anonymous_15)","line":416,"loc":{"start":{"line":416,"column":27},"end":{"line":416,"column":38}}},"16":{"name":"(anonymous_16)","line":451,"loc":{"start":{"line":451,"column":27},"end":{"line":451,"column":38}}},"17":{"name":"(anonymous_17)","line":493,"loc":{"start":{"line":493,"column":62},"end":{"line":493,"column":99}}},"18":{"name":"(anonymous_18)","line":504,"loc":{"start":{"line":504,"column":66},"end":{"line":504,"column":96}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":79}},"2":{"start":{"line":9,"column":36},"end":{"line":9,"column":77}},"3":{"start":{"line":10,"column":0},"end":{"line":514,"column":3}},"4":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}},"5":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"6":{"start":{"line":63,"column":4},"end":{"line":63,"column":21}},"7":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"8":{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},"9":{"start":{"line":67,"column":0},"end":{"line":69,"column":2}},"10":{"start":{"line":68,"column":2},"end":{"line":68,"column":66}},"11":{"start":{"line":70,"column":0},"end":{"line":75,"column":2}},"12":{"start":{"line":71,"column":2},"end":{"line":71,"column":22}},"13":{"start":{"line":72,"column":2},"end":{"line":72,"column":26}},"14":{"start":{"line":73,"column":2},"end":{"line":73,"column":30}},"15":{"start":{"line":74,"column":2},"end":{"line":74,"column":30}},"16":{"start":{"line":80,"column":0},"end":{"line":120,"column":1}},"17":{"start":{"line":81,"column":2},"end":{"line":81,"column":8}},"18":{"start":{"line":84,"column":2},"end":{"line":84,"column":50}},"19":{"start":{"line":85,"column":2},"end":{"line":86,"column":18}},"20":{"start":{"line":86,"column":6},"end":{"line":86,"column":18}},"21":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"22":{"start":{"line":92,"column":6},"end":{"line":92,"column":13}},"23":{"start":{"line":97,"column":2},"end":{"line":97,"column":18}},"24":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"25":{"start":{"line":99,"column":4},"end":{"line":99,"column":40}},"26":{"start":{"line":103,"column":2},"end":{"line":103,"column":16}},"27":{"start":{"line":105,"column":2},"end":{"line":109,"column":3}},"28":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"29":{"start":{"line":107,"column":6},"end":{"line":107,"column":22}},"30":{"start":{"line":113,"column":2},"end":{"line":113,"column":30}},"31":{"start":{"line":115,"column":2},"end":{"line":118,"column":3}},"32":{"start":{"line":116,"column":4},"end":{"line":116,"column":53}},"33":{"start":{"line":117,"column":4},"end":{"line":117,"column":55}},"34":{"start":{"line":119,"column":2},"end":{"line":119,"column":31}},"35":{"start":{"line":122,"column":0},"end":{"line":126,"column":2}},"36":{"start":{"line":123,"column":2},"end":{"line":125,"column":4}},"37":{"start":{"line":124,"column":4},"end":{"line":124,"column":58}},"38":{"start":{"line":131,"column":0},"end":{"line":173,"column":2}},"39":{"start":{"line":132,"column":2},"end":{"line":132,"column":17}},"40":{"start":{"line":136,"column":2},"end":{"line":141,"column":3}},"41":{"start":{"line":137,"column":4},"end":{"line":137,"column":15}},"42":{"start":{"line":139,"column":4},"end":{"line":139,"column":26}},"43":{"start":{"line":140,"column":4},"end":{"line":140,"column":13}},"44":{"start":{"line":150,"column":2},"end":{"line":158,"column":3}},"45":{"start":{"line":151,"column":4},"end":{"line":151,"column":33}},"46":{"start":{"line":152,"column":4},"end":{"line":152,"column":32}},"47":{"start":{"line":153,"column":4},"end":{"line":153,"column":31}},"48":{"start":{"line":154,"column":4},"end":{"line":154,"column":15}},"49":{"start":{"line":156,"column":4},"end":{"line":156,"column":13}},"50":{"start":{"line":157,"column":4},"end":{"line":157,"column":13}},"51":{"start":{"line":162,"column":2},"end":{"line":162,"column":35}},"52":{"start":{"line":163,"column":2},"end":{"line":163,"column":30}},"53":{"start":{"line":164,"column":2},"end":{"line":164,"column":28}},"54":{"start":{"line":165,"column":2},"end":{"line":165,"column":26}},"55":{"start":{"line":169,"column":2},"end":{"line":169,"column":34}},"56":{"start":{"line":170,"column":2},"end":{"line":170,"column":32}},"57":{"start":{"line":171,"column":2},"end":{"line":171,"column":33}},"58":{"start":{"line":172,"column":2},"end":{"line":172,"column":14}},"59":{"start":{"line":178,"column":0},"end":{"line":200,"column":2}},"60":{"start":{"line":179,"column":2},"end":{"line":179,"column":39}},"61":{"start":{"line":180,"column":2},"end":{"line":180,"column":34}},"62":{"start":{"line":182,"column":2},"end":{"line":184,"column":3}},"63":{"start":{"line":183,"column":4},"end":{"line":183,"column":13}},"64":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"65":{"start":{"line":187,"column":4},"end":{"line":187,"column":16}},"66":{"start":{"line":192,"column":2},"end":{"line":192,"column":35}},"67":{"start":{"line":193,"column":2},"end":{"line":193,"column":35}},"68":{"start":{"line":195,"column":2},"end":{"line":195,"column":37}},"69":{"start":{"line":196,"column":2},"end":{"line":196,"column":33}},"70":{"start":{"line":197,"column":2},"end":{"line":197,"column":28}},"71":{"start":{"line":198,"column":2},"end":{"line":198,"column":24}},"72":{"start":{"line":199,"column":2},"end":{"line":199,"column":16}},"73":{"start":{"line":207,"column":0},"end":{"line":243,"column":2}},"74":{"start":{"line":208,"column":2},"end":{"line":208,"column":18}},"75":{"start":{"line":209,"column":2},"end":{"line":209,"column":11}},"76":{"start":{"line":211,"column":2},"end":{"line":211,"column":36}},"77":{"start":{"line":216,"column":2},"end":{"line":220,"column":3}},"78":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"79":{"start":{"line":218,"column":6},"end":{"line":218,"column":13}},"80":{"start":{"line":224,"column":2},"end":{"line":224,"column":41}},"81":{"start":{"line":225,"column":2},"end":{"line":225,"column":29}},"82":{"start":{"line":227,"column":2},"end":{"line":227,"column":44}},"83":{"start":{"line":228,"column":2},"end":{"line":228,"column":32}},"84":{"start":{"line":232,"column":2},"end":{"line":240,"column":3}},"85":{"start":{"line":233,"column":4},"end":{"line":233,"column":36}},"86":{"start":{"line":234,"column":4},"end":{"line":234,"column":40}},"87":{"start":{"line":235,"column":4},"end":{"line":235,"column":45}},"88":{"start":{"line":237,"column":4},"end":{"line":237,"column":52}},"89":{"start":{"line":238,"column":4},"end":{"line":238,"column":48}},"90":{"start":{"line":239,"column":4},"end":{"line":239,"column":33}},"91":{"start":{"line":242,"column":2},"end":{"line":242,"column":14}},"92":{"start":{"line":247,"column":0},"end":{"line":291,"column":2}},"93":{"start":{"line":248,"column":2},"end":{"line":248,"column":9}},"94":{"start":{"line":256,"column":2},"end":{"line":261,"column":3}},"95":{"start":{"line":257,"column":4},"end":{"line":257,"column":33}},"96":{"start":{"line":258,"column":4},"end":{"line":258,"column":11}},"97":{"start":{"line":260,"column":4},"end":{"line":260,"column":30}},"98":{"start":{"line":273,"column":2},"end":{"line":283,"column":3}},"99":{"start":{"line":274,"column":4},"end":{"line":276,"column":5}},"100":{"start":{"line":275,"column":8},"end":{"line":275,"column":33}},"101":{"start":{"line":278,"column":4},"end":{"line":282,"column":5}},"102":{"start":{"line":279,"column":8},"end":{"line":279,"column":18}},"103":{"start":{"line":281,"column":8},"end":{"line":281,"column":35}},"104":{"start":{"line":286,"column":2},"end":{"line":290,"column":3}},"105":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"106":{"start":{"line":288,"column":6},"end":{"line":288,"column":20}},"107":{"start":{"line":298,"column":0},"end":{"line":336,"column":2}},"108":{"start":{"line":299,"column":2},"end":{"line":299,"column":36}},"109":{"start":{"line":304,"column":2},"end":{"line":331,"column":3}},"110":{"start":{"line":308,"column":4},"end":{"line":320,"column":5}},"111":{"start":{"line":309,"column":6},"end":{"line":311,"column":7}},"112":{"start":{"line":310,"column":8},"end":{"line":310,"column":67}},"113":{"start":{"line":316,"column":11},"end":{"line":320,"column":5}},"114":{"start":{"line":317,"column":6},"end":{"line":319,"column":7}},"115":{"start":{"line":318,"column":8},"end":{"line":318,"column":19}},"116":{"start":{"line":325,"column":4},"end":{"line":325,"column":37}},"117":{"start":{"line":326,"column":4},"end":{"line":326,"column":16}},"118":{"start":{"line":328,"column":4},"end":{"line":330,"column":5}},"119":{"start":{"line":329,"column":6},"end":{"line":329,"column":23}},"120":{"start":{"line":335,"column":2},"end":{"line":335,"column":32}},"121":{"start":{"line":340,"column":0},"end":{"line":362,"column":2}},"122":{"start":{"line":341,"column":2},"end":{"line":341,"column":21}},"123":{"start":{"line":346,"column":2},"end":{"line":350,"column":3}},"124":{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},"125":{"start":{"line":348,"column":6},"end":{"line":348,"column":14}},"126":{"start":{"line":356,"column":2},"end":{"line":361,"column":3}},"127":{"start":{"line":357,"column":4},"end":{"line":360,"column":25}},"128":{"start":{"line":358,"column":6},"end":{"line":358,"column":31}},"129":{"start":{"line":359,"column":6},"end":{"line":359,"column":18}},"130":{"start":{"line":366,"column":0},"end":{"line":411,"column":2}},"131":{"start":{"line":367,"column":2},"end":{"line":367,"column":20}},"132":{"start":{"line":368,"column":2},"end":{"line":368,"column":20}},"133":{"start":{"line":370,"column":2},"end":{"line":375,"column":3}},"134":{"start":{"line":371,"column":4},"end":{"line":371,"column":28}},"135":{"start":{"line":373,"column":4},"end":{"line":373,"column":26}},"136":{"start":{"line":374,"column":4},"end":{"line":374,"column":11}},"137":{"start":{"line":380,"column":2},"end":{"line":384,"column":3}},"138":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"139":{"start":{"line":382,"column":6},"end":{"line":382,"column":13}},"140":{"start":{"line":390,"column":2},"end":{"line":392,"column":3}},"141":{"start":{"line":391,"column":4},"end":{"line":391,"column":15}},"142":{"start":{"line":391,"column":16},"end":{"line":391,"column":32}},"143":{"start":{"line":391,"column":33},"end":{"line":391,"column":42}},"144":{"start":{"line":396,"column":2},"end":{"line":398,"column":3}},"145":{"start":{"line":397,"column":4},"end":{"line":397,"column":23}},"146":{"start":{"line":403,"column":2},"end":{"line":406,"column":3}},"147":{"start":{"line":404,"column":4},"end":{"line":404,"column":24}},"148":{"start":{"line":405,"column":4},"end":{"line":405,"column":30}},"149":{"start":{"line":410,"column":2},"end":{"line":410,"column":23}},"150":{"start":{"line":416,"column":0},"end":{"line":447,"column":2}},"151":{"start":{"line":417,"column":2},"end":{"line":417,"column":38}},"152":{"start":{"line":423,"column":2},"end":{"line":428,"column":3}},"153":{"start":{"line":424,"column":4},"end":{"line":427,"column":25}},"154":{"start":{"line":425,"column":6},"end":{"line":425,"column":40}},"155":{"start":{"line":426,"column":6},"end":{"line":426,"column":16}},"156":{"start":{"line":433,"column":2},"end":{"line":439,"column":3}},"157":{"start":{"line":434,"column":4},"end":{"line":438,"column":5}},"158":{"start":{"line":435,"column":6},"end":{"line":437,"column":7}},"159":{"start":{"line":436,"column":8},"end":{"line":436,"column":22}},"160":{"start":{"line":445,"column":2},"end":{"line":445,"column":24}},"161":{"start":{"line":446,"column":2},"end":{"line":446,"column":11}},"162":{"start":{"line":451,"column":0},"end":{"line":489,"column":2}},"163":{"start":{"line":452,"column":2},"end":{"line":452,"column":23}},"164":{"start":{"line":453,"column":2},"end":{"line":453,"column":19}},"165":{"start":{"line":461,"column":2},"end":{"line":467,"column":3}},"166":{"start":{"line":462,"column":4},"end":{"line":466,"column":5}},"167":{"start":{"line":463,"column":6},"end":{"line":463,"column":22}},"168":{"start":{"line":465,"column":6},"end":{"line":465,"column":18}},"169":{"start":{"line":472,"column":2},"end":{"line":482,"column":3}},"170":{"start":{"line":473,"column":4},"end":{"line":479,"column":5}},"171":{"start":{"line":474,"column":6},"end":{"line":474,"column":30}},"172":{"start":{"line":475,"column":6},"end":{"line":475,"column":33}},"173":{"start":{"line":477,"column":6},"end":{"line":477,"column":28}},"174":{"start":{"line":478,"column":6},"end":{"line":478,"column":15}},"175":{"start":{"line":481,"column":4},"end":{"line":481,"column":37}},"176":{"start":{"line":487,"column":2},"end":{"line":487,"column":24}},"177":{"start":{"line":488,"column":2},"end":{"line":488,"column":16}},"178":{"start":{"line":492,"column":0},"end":{"line":492,"column":23}},"179":{"start":{"line":493,"column":0},"end":{"line":501,"column":3}},"180":{"start":{"line":494,"column":2},"end":{"line":494,"column":40}},"181":{"start":{"line":496,"column":2},"end":{"line":496,"column":25}},"182":{"start":{"line":497,"column":2},"end":{"line":497,"column":35}},"183":{"start":{"line":497,"column":18},"end":{"line":497,"column":33}},"184":{"start":{"line":498,"column":2},"end":{"line":498,"column":61}},"185":{"start":{"line":499,"column":2},"end":{"line":499,"column":44}},"186":{"start":{"line":500,"column":2},"end":{"line":500,"column":20}},"187":{"start":{"line":504,"column":0},"end":{"line":511,"column":3}},"188":{"start":{"line":505,"column":2},"end":{"line":505,"column":39}},"189":{"start":{"line":507,"column":2},"end":{"line":507,"column":25}},"190":{"start":{"line":508,"column":2},"end":{"line":508,"column":35}},"191":{"start":{"line":508,"column":18},"end":{"line":508,"column":33}},"192":{"start":{"line":509,"column":2},"end":{"line":509,"column":61}},"193":{"start":{"line":510,"column":2},"end":{"line":510,"column":47}},"194":{"start":{"line":513,"column":0},"end":{"line":513,"column":15}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":0},"end":{"line":9,"column":0}},{"start":{"line":9,"column":0},"end":{"line":9,"column":0}}]},"2":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":17},"end":{"line":84,"column":21}},{"start":{"line":84,"column":25},"end":{"line":84,"column":48}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"4":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":11}},{"start":{"line":85,"column":15},"end":{"line":85,"column":26}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"7":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"8":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"9":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"10":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"11":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"12":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]},"13":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"14":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"15":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"16":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"17":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"18":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":6}},{"start":{"line":309,"column":6},"end":{"line":309,"column":6}}]},"19":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":11},"end":{"line":316,"column":11}},{"start":{"line":316,"column":11},"end":{"line":316,"column":11}}]},"20":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"21":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":347,"column":4}},{"start":{"line":347,"column":4},"end":{"line":347,"column":4}}]},"22":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":2},"end":{"line":356,"column":2}},{"start":{"line":356,"column":2},"end":{"line":356,"column":2}}]},"23":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":2},"end":{"line":370,"column":2}},{"start":{"line":370,"column":2},"end":{"line":370,"column":2}}]},"24":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":380,"column":2}},{"start":{"line":380,"column":2},"end":{"line":380,"column":2}}]},"25":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"26":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"27":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":2},"end":{"line":423,"column":2}},{"start":{"line":423,"column":2},"end":{"line":423,"column":2}}]},"28":{"line":425,"type":"cond-expr","locations":[{"start":{"line":425,"column":32},"end":{"line":425,"column":35}},{"start":{"line":425,"column":38},"end":{"line":425,"column":39}}]},"29":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":4},"end":{"line":434,"column":4}},{"start":{"line":434,"column":4},"end":{"line":434,"column":4}}]},"30":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":6}},{"start":{"line":435,"column":6},"end":{"line":435,"column":6}}]},"31":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":4},"end":{"line":462,"column":4}},{"start":{"line":462,"column":4},"end":{"line":462,"column":4}}]},"32":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":2},"end":{"line":472,"column":2}},{"start":{"line":472,"column":2},"end":{"line":472,"column":2}}]},"33":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":4},"end":{"line":473,"column":4}},{"start":{"line":473,"column":4},"end":{"line":473,"column":4}}]},"34":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":2},"end":{"line":497,"column":2}},{"start":{"line":497,"column":2},"end":{"line":497,"column":2}}]},"35":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":2},"end":{"line":508,"column":2}},{"start":{"line":508,"column":2},"end":{"line":508,"column":2}}]}},"code":["/* Adaptive Huffman code, using Vitter's algorithm ported from"," * vitter.c at http://code.google.com/p/compression-code/downloads/list"," * The original code was placed in the public domain, and so I"," * also place this JavaScript port in the public domain."," *   -- C. Scott Ananian <cscott@cscott.net>, 2013"," * ps. some truly grotty C code in the originally, faithfully ported to"," *     evil comma-operator-using, assignment-in-if-condition JavaScript."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./BitStream','./Util'],function(BitStream,Util) {","//  This code is adapted from Professor Vitter's","//  article, Design and Analysis of Dynamic Huffman Codes,","//  which appeared in JACM October 1987","","//  A design trade-off has been made to simplify the","//  code:  a node's block is determined dynamically,","//  and the implicit tree structure is maintained,","//  e.g. explicit node numbers are also implicit.","","//  Dynamic Huffman table weight ranking","//  is maintained per Professor Vitter's","//  invariant (*) for algorithm FGK:","","//  leaves precede internal nodes of the","//  same weight in a non-decreasing ranking","//  of weights using implicit node numbers:","","//  1) leaves slide over internal nodes, internal nodes","//  swap over groups of leaves, leaves are swapped","//  into group leader position, but two internal","//  nodes never change positions relative","//  to one another.","","//  2) weights are incremented by 2:","//  leaves always have even weight values;","//  internal nodes always have odd values.","","//  3) even node numbers are always right children;","//  odd numbers are left children in the tree.","","//  node 2 * HuffSize - 1 is always the tree root;","//  node HuffEsc is the escape node;","","//  the tree is initialized by creating an","//  escape node as the root.","","//  each new leaf symbol is paired with a new escape","//  node into the previous escape node in the tree,","//  until the last symbol which takes over the","//  tree position of the escape node, and","//  HuffEsc is left at zero.","","//  overall table size: 2 * HuffSize","","//  huff_init(alphabet_size, potential symbols used)","//  huff_encode(next_symbol)","//  next_symbol = huff_decode()","","//  huff_scale(by_bits) -- scale weights and re-balance tree","","var HTable = function(up, down, symbol, weight) {","    this.up = up; // next node up the tree","    this.down = down; // pair of down nodes","    this.symbol = symbol;       // node symbol value","    this.weight = weight;       // node weight","};","HTable.prototype.clone = function() {","  return new HTable(this.up, this.down, this.symbol, this.weight);","};","HTable.prototype.set = function(htable) {","  this.up = htable.up;","  this.down = htable.down;","  this.symbol = htable.symbol;","  this.weight = htable.weight;","};","","//  initialize an adaptive coder","//  for alphabet size, and count","//  of nodes to be used","var Huffman = function(size, root, bitstream, max_weight) {","  var i;","  //  default: all alphabet symbols are used","","  console.assert(size && typeof(size)==='number');","  if( !root || root > size )","      root = size;","","  //  create the initial escape node","  //  at the tree root","","  if ( root <<= 1 ) {","      root--;","  }","","  // create root+1 htables (coding table)","  // XXX this could be views on a backing Uint32 array?","  this.table = [];","  for (i=0; i<=root; i++) {","    this.table[i] = new HTable(0,0,0,0);","  }","","  // this.map => mapping for symbols to nodes","  this.map = [];","  // this.size => the alphabet size","  if( this.size = size ) {","    for (i=0; i<size; i++) {","      this.map[i] = 0;","    }","  }","","  // this.esc  => the current tree height","  // this.root => the root of the tree","  this.esc = this.root = root;","","  if (bitstream) {","    this.readBit = bitstream.readBit.bind(bitstream);","    this.writeBit = bitstream.writeBit.bind(bitstream);","  }","  this.max_weight = max_weight; // may be null or undefined","}","// factory interface","Huffman.factory = function(bitstream, max_weight) {","  return function(size) {","    return new Huffman(size, size, bitstream, max_weight);","  };","};","","","// split escape node to incorporate new symbol","","Huffman.prototype.split = function(symbol) {","  var pair, node;","","  //  is the tree already full???","","  if( pair = this.esc ) {","    this.esc--;","  } else {","    console.assert(false);","    return 0;","  }","","  //  if this is the last symbol, it moves into","  //  the escape node's old position, and","  //  this.esc is set to zero.","","  //  otherwise, the escape node is promoted to","  //  parent a new escape node and the new symbol.","","  if( node = this.esc ) {","    this.table[pair].down = node;","    this.table[pair].weight = 1;","    this.table[node].up = pair;","    this.esc--;","  } else {","    pair = 0;","    node = 1;","  }","","  //  initialize the new symbol node","","  this.table[node].symbol = symbol;","  this.table[node].weight = 0;","  this.table[node].down = 0;","  this.map[symbol] = node;","","  //  initialize a new escape node.","","  this.table[this.esc].weight = 0;","  this.table[this.esc].down = 0;","  this.table[this.esc].up = pair;","  return node;","};","","//  swap leaf to group leader position","//  return symbol's new node","","Huffman.prototype.leader = function(node) {","  var weight = this.table[node].weight;","  var leader = node, prev, symbol;","","  while( weight === this.table[leader + 1].weight ) {","    leader++;","  }","","  if( leader === node ) {","    return node;","  }","","  // swap the leaf nodes","","  symbol = this.table[node].symbol;","  prev = this.table[leader].symbol;","","  this.table[leader].symbol = symbol;","  this.table[node].symbol = prev;","  this.map[symbol] = leader;","  this.map[prev] = node;","  return leader;","};","","//  slide internal node up over all leaves of equal weight;","//  or exchange leaf with next smaller weight internal node","","//  return node's new position","","Huffman.prototype.slide = function(node) {","  var next = node;","  var swap;","","  swap = this.table[next++].clone();","","  // if we're sliding an internal node, find the","  // highest possible leaf to exchange with","","  if( swap.weight & 1 ) {","    while( swap.weight > this.table[next + 1].weight ) {","      next++;","    }","  }","","  //  swap the two nodes","","  this.table[node].set(this.table[next]);","  this.table[next].set(swap);","","  this.table[next].up = this.table[node].up;","  this.table[node].up = swap.up;","","  //  repair the symbol map and tree structure","","  if( swap.weight & 1 ) {","    this.table[swap.down].up = next;","    this.table[swap.down - 1].up = next;","    this.map[this.table[node].symbol] = node;","  } else {","    this.table[this.table[node].down - 1].up = node;","    this.table[this.table[node].down].up = node;","    this.map[swap.symbol] = next;","  }","","  return next;","};","","//  increment symbol weight and re balance the tree.","","Huffman.prototype.increment = function(node) {","  var up;","","  //  obviate swapping a parent with its child:","  //    increment the leaf and proceed","  //    directly to its parent.","","  //  otherwise, promote leaf to group leader position in the tree","","  if( this.table[node].up === node + 1 ) {","    this.table[node].weight += 2;","    node++;","  } else {","    node = this.leader (node);","  }","","  //  increase the weight of each node and slide","  //  over any smaller weights ahead of it","  //  until reaching the root","","  //  internal nodes work upwards from","  //  their initial positions; while","  //  symbol nodes slide over first,","  //  then work up from their final","  //  positions.","","  while( this.table[node].weight += 2, up = this.table[node].up ) {","    while( this.table[node].weight > this.table[node + 1].weight ) {","        node = this.slide (node);","    }","","    if( this.table[node].weight & 1 ) {","        node = up;","    } else {","        node = this.table[node].up;","    }","  }","","  /* Re-scale if necessary. */","  if (this.max_weight) {","    if (this.table[this.root].weight >= this.max_weight) {","      this.scale(1);","    }","  }","};","","//  scale all weights and re-balance the tree","","//  zero weight nodes are removed from the tree","//  by sliding them out the left of the rank list","","Huffman.prototype.scale = function(bits) {","  var node = this.esc, weight, prev;","","  //  work up the tree from the escape node","  //  scaling weights by the value of bits","","  while( ++node <= this.root ) {","    //  recompute the weight of internal nodes;","    //  slide down and out any unused ones","","    if( this.table[node].weight & 1 ) {","      if( weight = this.table[this.table[node].down].weight & ~1 ) {","        weight += this.table[this.table[node].down - 1].weight | 1;","      }","","      //  remove zero weight leaves by incrementing HuffEsc","      //  and removing them from the symbol map.  take care","","    } else if( !(weight = this.table[node].weight >> bits & ~1) ) {","      if( this.map[this.table[node].symbol] = 0, this.esc++ ) {","        this.esc++;","      }","    }","","    // slide the scaled node back down over any","    // previous nodes with larger weights","","    this.table[node].weight = weight;","    prev = node;","","    while( weight < this.table[--prev].weight ) {","      this.slide(prev);","    }","  }","","  // prepare a new escape node","","  this.table[this.esc].down = 0;","};","","//  send the bits for an escaped symbol","","Huffman.prototype.sendid = function(symbol) {","  var empty = 0, max;","","  //  count the number of empty symbols","  //  before the symbol in the table","","  while( symbol-- ) {","    if( !this.map[symbol] ) {","      empty++;","    }","  }","","  //  send LSB of this count first, using","  //  as many bits as are required for","  //  the maximum possible count","","  if( max = this.size - Math.floor((this.root - this.esc) / 2) - 1 ) {","    do {","      this.writeBit(empty & 1);","      empty >>= 1;","    } while( max >>= 1 );","  }","};","","//  encode the next symbol","","Huffman.prototype.encode = function(symbol) {","  var emit = 1, bit;","  var up, idx, node;","","  if( symbol < this.size ) {","    node = this.map[symbol];","  } else {","    console.assert(false);","    return;","  }","","  //  for a new symbol, direct the receiver to the escape node","  //  but refuse input if table is already full.","","  if( !(idx = node) ) {","    if( !(idx = this.esc) ) {","      return;","    }","  }","","  //  accumulate the code bits by","  //  working up the tree from","  //  the node to the root","","  while( up = this.table[idx].up ) {","    emit <<= 1; emit |= idx & 1; idx = up;","  }","","  //  send the code, root selector bit first","","  while( bit = emit & 1, emit >>= 1 ) {","    this.writeBit(bit);","  }","","  //  send identification and incorporate","  //  new symbols into the tree","","  if( !node ) {","    this.sendid(symbol);","    node = this.split(symbol);","  }","","  //  adjust and re-balance the tree","","  this.increment(node);","};","","//  read the identification bits","//  for an escaped symbol","","Huffman.prototype.readid = function() {","  var empty = 0, bit = 1, max, symbol;","","  //  receive the symbol, LSB first, reading","  //  only the number of bits necessary to","  //  transmit the maximum possible symbol value","","  if( max = this.size - Math.floor((this.root - this.esc) / 2) - 1 ) {","    do {","      empty |= this.readBit() ? bit : 0;","      bit <<= 1;","    } while( max >>= 1 );","  }","","  //  the count is of unmapped symbols","  //  in the table before the new one","","  for( symbol = 0; symbol < this.size; symbol++ ) {","    if( !this.map[symbol] ) {","      if( !empty-- ) {","        return symbol;","      }","    }","  }","","  //  oops!  our count is too big, either due","  //  to a bit error, or a short node count","  //  given to huff_init.","","  console.assert(false);","  return 0;","};","","//  decode the next symbol","","Huffman.prototype.decode = function() {","  var node = this.root;","  var symbol, down;","","  //  work down the tree from the root","  //  until reaching either a leaf","  //  or the escape node.  A one","  //  bit means go left, a zero","  //  means go right.","","  while( down = this.table[node].down ) {","    if( this.readBit() ) {","      node = down - 1;  // the left child precedes the right child","    } else {","      node = down;","    }","  }","","  //  sent to the escape node???","  //  refuse to add to a full tree","","  if( node === this.esc ) {","    if( this.esc ) {","      symbol = this.readid ();","      node = this.split (symbol);","    } else {","      console.assert(false);","      return 0;","    }","  } else {","    symbol = this.table[node].symbol;","  }","","  //  increment weights and re-balance","  //  the coding tree","","  this.increment (node);","  return symbol;","};","","// stand alone compressor, mostly for testing","Huffman.MAGIC = 'huff';","Huffman.compressFile = Util.compressFileHelper(Huffman.MAGIC, function(input, output, size, props) {","  var bitstream = new BitStream(output);","","  var alphabetSize = 256;","  if (size < 0) { alphabetSize++; }","  var huff = new Huffman(257, alphabetSize, bitstream, 8191);","  Util.compressWithModel(input, size, huff);","  bitstream.flush();","});","","// stand alone decompresser, again for testing","Huffman.decompressFile = Util.decompressFileHelper(Huffman.MAGIC, function(input, output, size) {","  var bitstream = new BitStream(input);","","  var alphabetSize = 256;","  if (size < 0) { alphabetSize++; }","  var huff = new Huffman(257, alphabetSize, bitstream, 8191);","  Util.decompressWithModel(output, size, huff);","});","","return Huffman;","});",""],"l":{"9":1,"10":1,"61":1,"62":0,"63":0,"64":0,"65":0,"67":1,"68":0,"70":1,"71":0,"72":0,"73":0,"74":0,"80":1,"81":0,"84":0,"85":0,"86":0,"91":0,"92":0,"97":0,"98":0,"99":0,"103":0,"105":0,"106":0,"107":0,"113":0,"115":0,"116":0,"117":0,"119":0,"122":1,"123":0,"124":0,"131":1,"132":0,"136":0,"137":0,"139":0,"140":0,"150":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"162":0,"163":0,"164":0,"165":0,"169":0,"170":0,"171":0,"172":0,"178":1,"179":0,"180":0,"182":0,"183":0,"186":0,"187":0,"192":0,"193":0,"195":0,"196":0,"197":0,"198":0,"199":0,"207":1,"208":0,"209":0,"211":0,"216":0,"217":0,"218":0,"224":0,"225":0,"227":0,"228":0,"232":0,"233":0,"234":0,"235":0,"237":0,"238":0,"239":0,"242":0,"247":1,"248":0,"256":0,"257":0,"258":0,"260":0,"273":0,"274":0,"275":0,"278":0,"279":0,"281":0,"286":0,"287":0,"288":0,"298":1,"299":0,"304":0,"308":0,"309":0,"310":0,"316":0,"317":0,"318":0,"325":0,"326":0,"328":0,"329":0,"335":0,"340":1,"341":0,"346":0,"347":0,"348":0,"356":0,"357":0,"358":0,"359":0,"366":1,"367":0,"368":0,"370":0,"371":0,"373":0,"374":0,"380":0,"381":0,"382":0,"390":0,"391":0,"396":0,"397":0,"403":0,"404":0,"405":0,"410":0,"416":1,"417":0,"423":0,"424":0,"425":0,"426":0,"433":0,"434":0,"435":0,"436":0,"445":0,"446":0,"451":1,"452":0,"453":0,"461":0,"462":0,"463":0,"465":0,"472":0,"473":0,"474":0,"475":0,"477":0,"478":0,"481":0,"487":0,"488":0,"492":1,"493":1,"494":0,"496":0,"497":0,"498":0,"499":0,"500":0,"504":1,"505":0,"507":0,"508":0,"509":0,"510":0,"513":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/DefSumModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/DefSumModel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":44},"end":{"line":5,"column":76}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":18},"end":{"line":11,"column":51}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":22},"end":{"line":36,"column":49}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":9},"end":{"line":37,"column":24}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":32},"end":{"line":39,"column":60}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":31},"end":{"line":94,"column":48}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":31},"end":{"line":112,"column":42}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":70},"end":{"line":135,"column":128}}},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":74},"end":{"line":143,"column":114}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":79}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":77}},"3":{"start":{"line":5,"column":0},"end":{"line":152,"column":3}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"7":{"start":{"line":11,"column":0},"end":{"line":35,"column":2}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":8}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":29}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":35}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":21}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":41}},"13":{"start":{"line":17,"column":2},"end":{"line":17,"column":43}},"14":{"start":{"line":18,"column":2},"end":{"line":18,"column":43}},"15":{"start":{"line":19,"column":2},"end":{"line":19,"column":35}},"16":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"18":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"19":{"start":{"line":24,"column":2},"end":{"line":24,"column":62}},"20":{"start":{"line":25,"column":2},"end":{"line":25,"column":29}},"21":{"start":{"line":25,"column":20},"end":{"line":25,"column":27}},"22":{"start":{"line":27,"column":2},"end":{"line":27,"column":50}},"23":{"start":{"line":28,"column":2},"end":{"line":28,"column":55}},"24":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"25":{"start":{"line":30,"column":4},"end":{"line":30,"column":31}},"26":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"27":{"start":{"line":33,"column":4},"end":{"line":33,"column":29}},"28":{"start":{"line":36,"column":0},"end":{"line":38,"column":2}},"29":{"start":{"line":37,"column":2},"end":{"line":37,"column":76}},"30":{"start":{"line":37,"column":26},"end":{"line":37,"column":73}},"31":{"start":{"line":39,"column":0},"end":{"line":93,"column":2}},"32":{"start":{"line":40,"column":2},"end":{"line":47,"column":3}},"33":{"start":{"line":42,"column":4},"end":{"line":42,"column":60}},"34":{"start":{"line":42,"column":51},"end":{"line":42,"column":58}},"35":{"start":{"line":46,"column":4},"end":{"line":46,"column":64}},"36":{"start":{"line":46,"column":55},"end":{"line":46,"column":62}},"37":{"start":{"line":48,"column":2},"end":{"line":48,"column":24}},"38":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"39":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"40":{"start":{"line":52,"column":4},"end":{"line":52,"column":11}},"41":{"start":{"line":54,"column":2},"end":{"line":54,"column":40}},"42":{"start":{"line":55,"column":2},"end":{"line":55,"column":65}},"43":{"start":{"line":56,"column":2},"end":{"line":70,"column":3}},"44":{"start":{"line":57,"column":4},"end":{"line":57,"column":73}},"45":{"start":{"line":58,"column":4},"end":{"line":69,"column":5}},"46":{"start":{"line":60,"column":6},"end":{"line":60,"column":29}},"47":{"start":{"line":61,"column":6},"end":{"line":61,"column":25}},"48":{"start":{"line":62,"column":6},"end":{"line":62,"column":33}},"49":{"start":{"line":62,"column":25},"end":{"line":62,"column":31}},"50":{"start":{"line":63,"column":6},"end":{"line":63,"column":34}},"51":{"start":{"line":66,"column":6},"end":{"line":66,"column":29}},"52":{"start":{"line":67,"column":6},"end":{"line":67,"column":34}},"53":{"start":{"line":68,"column":6},"end":{"line":68,"column":19}},"54":{"start":{"line":71,"column":2},"end":{"line":71,"column":25}},"55":{"start":{"line":72,"column":2},"end":{"line":72,"column":41}},"56":{"start":{"line":74,"column":2},"end":{"line":74,"column":65}},"57":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"58":{"start":{"line":77,"column":4},"end":{"line":77,"column":23}},"59":{"start":{"line":79,"column":2},"end":{"line":79,"column":32}},"60":{"start":{"line":80,"column":2},"end":{"line":80,"column":23}},"61":{"start":{"line":82,"column":2},"end":{"line":82,"column":29}},"62":{"start":{"line":82,"column":20},"end":{"line":82,"column":27}},"63":{"start":{"line":83,"column":2},"end":{"line":92,"column":3}},"64":{"start":{"line":84,"column":4},"end":{"line":84,"column":35}},"65":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"66":{"start":{"line":86,"column":6},"end":{"line":86,"column":28}},"67":{"start":{"line":88,"column":4},"end":{"line":88,"column":40}},"68":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"69":{"start":{"line":90,"column":6},"end":{"line":90,"column":31}},"70":{"start":{"line":94,"column":0},"end":{"line":111,"column":2}},"71":{"start":{"line":95,"column":2},"end":{"line":95,"column":31}},"72":{"start":{"line":96,"column":2},"end":{"line":96,"column":40}},"73":{"start":{"line":97,"column":2},"end":{"line":97,"column":59}},"74":{"start":{"line":98,"column":2},"end":{"line":101,"column":3}},"75":{"start":{"line":99,"column":4},"end":{"line":99,"column":55}},"76":{"start":{"line":100,"column":4},"end":{"line":100,"column":32}},"77":{"start":{"line":103,"column":2},"end":{"line":103,"column":42}},"78":{"start":{"line":104,"column":2},"end":{"line":104,"column":28}},"79":{"start":{"line":106,"column":2},"end":{"line":106,"column":29}},"80":{"start":{"line":107,"column":2},"end":{"line":107,"column":38}},"81":{"start":{"line":108,"column":2},"end":{"line":108,"column":40}},"82":{"start":{"line":109,"column":2},"end":{"line":109,"column":43}},"83":{"start":{"line":110,"column":2},"end":{"line":110,"column":30}},"84":{"start":{"line":112,"column":0},"end":{"line":131,"column":2}},"85":{"start":{"line":113,"column":2},"end":{"line":113,"column":55}},"86":{"start":{"line":114,"column":2},"end":{"line":114,"column":36}},"87":{"start":{"line":115,"column":2},"end":{"line":115,"column":31}},"88":{"start":{"line":116,"column":2},"end":{"line":116,"column":40}},"89":{"start":{"line":117,"column":2},"end":{"line":117,"column":50}},"90":{"start":{"line":118,"column":2},"end":{"line":118,"column":29}},"91":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"92":{"start":{"line":120,"column":4},"end":{"line":120,"column":18}},"93":{"start":{"line":123,"column":2},"end":{"line":123,"column":40}},"94":{"start":{"line":124,"column":2},"end":{"line":124,"column":41}},"95":{"start":{"line":125,"column":2},"end":{"line":125,"column":35}},"96":{"start":{"line":126,"column":2},"end":{"line":126,"column":29}},"97":{"start":{"line":127,"column":2},"end":{"line":127,"column":38}},"98":{"start":{"line":128,"column":2},"end":{"line":128,"column":45}},"99":{"start":{"line":129,"column":2},"end":{"line":129,"column":29}},"100":{"start":{"line":130,"column":2},"end":{"line":130,"column":16}},"101":{"start":{"line":133,"column":0},"end":{"line":133,"column":25}},"102":{"start":{"line":135,"column":0},"end":{"line":141,"column":8}},"103":{"start":{"line":136,"column":2},"end":{"line":136,"column":40}},"104":{"start":{"line":137,"column":2},"end":{"line":137,"column":34}},"105":{"start":{"line":138,"column":2},"end":{"line":138,"column":63}},"106":{"start":{"line":139,"column":2},"end":{"line":139,"column":52}},"107":{"start":{"line":140,"column":2},"end":{"line":140,"column":23}},"108":{"start":{"line":143,"column":0},"end":{"line":149,"column":3}},"109":{"start":{"line":144,"column":2},"end":{"line":144,"column":39}},"110":{"start":{"line":145,"column":2},"end":{"line":145,"column":57}},"111":{"start":{"line":146,"column":2},"end":{"line":146,"column":69}},"112":{"start":{"line":147,"column":2},"end":{"line":147,"column":55}},"113":{"start":{"line":148,"column":2},"end":{"line":148,"column":23}},"114":{"start":{"line":151,"column":0},"end":{"line":151,"column":19}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":0},"end":{"line":4,"column":0}},{"start":{"line":4,"column":0},"end":{"line":4,"column":0}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"9":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"10":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"12":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":52},"end":{"line":138,"column":55}},{"start":{"line":138,"column":58},"end":{"line":138,"column":61}}]},"13":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":52},"end":{"line":146,"column":55}},{"start":{"line":146,"column":58},"end":{"line":146,"column":61}}]}},"code":["/** Deferred-sum model, suitable for small ( ~ 256 ) ranges. */","// See http://cbloom.com/src/defsum.zip","//     http://cbloom.com/papers/context.pdf","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./RangeCoder','./Stream','./Util'],function(RangeCoder,Stream,Util){","","var LOG_PROB_TOTAL = 8;","var PROB_TOTAL = 1 << LOG_PROB_TOTAL;","var MAX_ESCAPE_COUNT = 40;","","var DefSumModel = function(coder, size, isDecoder) {","  var i;","  console.assert(size < 300); // not meant for sparse","  var ESCAPE = this.numSyms = size;","  this.coder = coder;","  this.prob = Util.makeU16Buffer(size+2); /* size + ESC + 1 */","  this.escape = Util.makeU16Buffer(size+1);  /* size + 1*/","  this.update = Util.makeU16Buffer(size+1); /* size + ESC */","  this.prob[ESCAPE+1] = PROB_TOTAL;","  for (i=0; i<=this.numSyms; i++) {","    this.escape[i] = i;","  }","  this.updateCount = 0;","  this.updateThresh = PROB_TOTAL - Math.floor(PROB_TOTAL / 2);","  if (!isDecoder) { return; }","  // extra tables for fast decoding","  this.probToSym = Util.makeU16Buffer(PROB_TOTAL);","  this.escProbToSym = Util.makeU16Buffer(this.numSyms);","  for (i=0; i<PROB_TOTAL; i++) {","    this.probToSym[i] = ESCAPE;","  }","  for (i=0; i<this.numSyms; i++) {","    this.escProbToSym[i] = i;","  }","};","DefSumModel.factory = function(coder, isDecoder) {","  return function(size) { return new DefSumModel(coder, size, isDecoder); };","};","DefSumModel.prototype._update = function(symbol, isDecoder) {","  if (symbol === this.numSyms) {","    // some special cases for the escape character","    if (this.update[symbol] >= MAX_ESCAPE_COUNT) { return; } // hard limit","    // don't let an escape character trigger an update, because then the","    // escaped character might find itself unescaped after the tables have","    // been updated!","    if (this.updateCount >= (this.updateThresh - 1)) { return; }","  }","  this.update[symbol]++;","  this.updateCount++;","  // is it time to transfer the updated probabilities?","  if (this.updateCount < this.updateThresh) {","    return; //defer update","  }","  var cumProb, cumEscProb, odd, i, j, k;","  this.escape[0] = this.prob[0] = cumProb = cumEscProb = odd = 0;","  for (i=0; i < this.numSyms+1; i++) {","    var newProb = ((this.prob[i+1]-this.prob[i]) >>> 1) + this.update[i];","    if (newProb) {","      // live 'un","      this.prob[i] = cumProb;","      cumProb += newProb;","      if (newProb & 1) { odd++; }","      this.escape[i] = cumEscProb;","    } else {","      // this symbol will escape","      this.prob[i] = cumProb;","      this.escape[i] = cumEscProb;","      cumEscProb++;","    }","  }","  this.prob[i] = cumProb;","  console.assert(cumProb === PROB_TOTAL);","  /* how many updates will be required after current probs are halved? */","  this.updateThresh = PROB_TOTAL - Math.floor((cumProb-odd) / 2);","  /* reset the update table */","  for (i=0; i < (this.numSyms + 1); i++) {","    this.update[i] = 0;","  }","  this.update[this.numSyms] = 1; // ensure that escape never goes away","  this.updateCount = 1;","  /* compute decode table, if this is a decoder */","  if (!isDecoder) { return; }","  for (i=0, j=0, k=0; i<(this.numSyms+1); i++) {","    var probLimit = this.prob[i+1];","    for (; j<probLimit; j++) {","      this.probToSym[j] = i;","    }","    var escProbLimit = this.escape[i+1];","    for (; k<escProbLimit; k++) {","      this.escProbToSym[k] = i;","    }","  }","};","DefSumModel.prototype.encode = function(symbol) {","  var lt_f = this.prob[symbol];","  var sy_f = this.prob[symbol+1] - lt_f;","  console.assert(this.prob[this.numSyms+1] === PROB_TOTAL);","  if (sy_f) {","    this.coder.encodeShift(sy_f, lt_f, LOG_PROB_TOTAL);","    return this._update(symbol);","  }","  // escape!","  console.assert(symbol !== this.numSyms); // catch infinite recursion","  this.encode(this.numSyms); // guaranteed non-zero probability","  // code symbol as literal, taking advantage of reduced escape range.","  lt_f = this.escape[symbol];","  sy_f = this.escape[symbol+1] - lt_f;","  var tot_f = this.escape[this.numSyms];","  this.coder.encodeFreq(sy_f, lt_f, tot_f);","  return this._update(symbol);","};","DefSumModel.prototype.decode = function() {","  var prob = this.coder.decodeCulShift(LOG_PROB_TOTAL);","  var symbol = this.probToSym[prob];","  var lt_f = this.prob[symbol];","  var sy_f = this.prob[symbol+1] - lt_f;","  this.coder.decodeUpdate(sy_f, lt_f, PROB_TOTAL);","  this._update(symbol, true);","  if (symbol !== this.numSyms) {","    return symbol;","  }","  // escape!","  var tot_f = this.escape[this.numSyms];","  prob = this.coder.decodeCulFreq(tot_f);","  symbol = this.escProbToSym[prob];","  lt_f = this.escape[symbol];","  sy_f = this.escape[symbol+1] - lt_f;","  this.coder.decodeUpdate(sy_f, lt_f, tot_f);","  this._update(symbol, true);","  return symbol;","};","","DefSumModel.MAGIC='dfsm';","/** Simple order-0 compressor, as self-test. */","DefSumModel.compressFile = Util.compressFileHelper(DefSumModel.MAGIC, function(inStream, outStream, fileSize, props, finalByte) {","  var range = new RangeCoder(outStream);","  range.encodeStart(finalByte, 1);","  var model = new DefSumModel(range, (fileSize<0) ? 257 : 256);","  Util.compressWithModel(inStream, fileSize, model);","  range.encodeFinish();","},true);","/** Simple order-0 decompresser, as self-test. */","DefSumModel.decompressFile = Util.decompressFileHelper(DefSumModel.MAGIC, function(inStream, outStream, fileSize) {","  var range = new RangeCoder(inStream);","  range.decodeStart(true/*already read the final byte*/);","  var model = new DefSumModel(range, (fileSize<0) ? 257 : 256, true);","  Util.decompressWithModel(outStream, fileSize, model);","  range.decodeFinish();","});","","return DefSumModel;","});",""],"l":{"4":1,"5":1,"7":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"36":1,"37":0,"39":1,"40":0,"42":0,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"71":0,"72":0,"74":0,"76":0,"77":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"90":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"110":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"133":1,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/RangeCoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/RangeCoder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":1,"126":0,"127":1,"128":1,"129":1,"130":1,"131":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":10},"end":{"line":7,"column":20}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":38}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":24},"end":{"line":38,"column":51}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":39},"end":{"line":65,"column":63}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":38},"end":{"line":79,"column":66}}},"6":{"name":"(anonymous_6)","line":90,"loc":{"start":{"line":90,"column":39},"end":{"line":90,"column":67}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":37},"end":{"line":102,"column":49}}},"8":{"name":"(anonymous_8)","line":106,"loc":{"start":{"line":106,"column":38},"end":{"line":106,"column":50}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":39},"end":{"line":110,"column":51}}},"10":{"name":"(anonymous_10)","line":116,"loc":{"start":{"line":116,"column":40},"end":{"line":116,"column":51}}},"11":{"name":"(anonymous_11)","line":146,"loc":{"start":{"line":146,"column":39},"end":{"line":146,"column":65}}},"12":{"name":"(anonymous_12)","line":157,"loc":{"start":{"line":157,"column":24},"end":{"line":157,"column":50}}},"13":{"name":"(anonymous_13)","line":173,"loc":{"start":{"line":173,"column":41},"end":{"line":173,"column":57}}},"14":{"name":"(anonymous_14)","line":179,"loc":{"start":{"line":179,"column":42},"end":{"line":179,"column":58}}},"15":{"name":"(anonymous_15)","line":192,"loc":{"start":{"line":192,"column":40},"end":{"line":192,"column":68}}},"16":{"name":"(anonymous_16)","line":203,"loc":{"start":{"line":203,"column":37},"end":{"line":203,"column":48}}},"17":{"name":"(anonymous_17)","line":209,"loc":{"start":{"line":209,"column":38},"end":{"line":209,"column":49}}},"18":{"name":"(anonymous_18)","line":215,"loc":{"start":{"line":215,"column":39},"end":{"line":215,"column":50}}},"19":{"name":"(anonymous_19)","line":222,"loc":{"start":{"line":222,"column":40},"end":{"line":222,"column":51}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":79}},"2":{"start":{"line":6,"column":36},"end":{"line":6,"column":77}},"3":{"start":{"line":7,"column":0},"end":{"line":238,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":45}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":37}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":45}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":41}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":45}},"10":{"start":{"line":27,"column":4},"end":{"line":34,"column":6}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":21}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":31}},"13":{"start":{"line":30,"column":8},"end":{"line":30,"column":24}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":22}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"16":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"17":{"start":{"line":38,"column":4},"end":{"line":60,"column":6}},"18":{"start":{"line":39,"column":8},"end":{"line":59,"column":9}},"19":{"start":{"line":40,"column":12},"end":{"line":55,"column":13}},"20":{"start":{"line":41,"column":16},"end":{"line":41,"column":50}},"21":{"start":{"line":42,"column":16},"end":{"line":43,"column":49}},"22":{"start":{"line":43,"column":20},"end":{"line":43,"column":49}},"23":{"start":{"line":44,"column":16},"end":{"line":44,"column":59}},"24":{"start":{"line":45,"column":19},"end":{"line":55,"column":13}},"25":{"start":{"line":46,"column":16},"end":{"line":46,"column":52}},"26":{"start":{"line":47,"column":16},"end":{"line":48,"column":49}},"27":{"start":{"line":48,"column":20},"end":{"line":48,"column":49}},"28":{"start":{"line":49,"column":16},"end":{"line":49,"column":59}},"29":{"start":{"line":51,"column":16},"end":{"line":51,"column":26}},"30":{"start":{"line":52,"column":16},"end":{"line":54,"column":55}},"31":{"start":{"line":53,"column":20},"end":{"line":54,"column":55}},"32":{"start":{"line":56,"column":12},"end":{"line":56,"column":45}},"33":{"start":{"line":57,"column":12},"end":{"line":57,"column":61}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":27}},"35":{"start":{"line":65,"column":4},"end":{"line":71,"column":6}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":21}},"37":{"start":{"line":67,"column":8},"end":{"line":67,"column":31}},"38":{"start":{"line":68,"column":8},"end":{"line":68,"column":24}},"39":{"start":{"line":69,"column":8},"end":{"line":69,"column":22}},"40":{"start":{"line":70,"column":8},"end":{"line":70,"column":36}},"41":{"start":{"line":79,"column":4},"end":{"line":89,"column":6}},"42":{"start":{"line":80,"column":8},"end":{"line":80,"column":41}},"43":{"start":{"line":81,"column":8},"end":{"line":81,"column":43}},"44":{"start":{"line":82,"column":8},"end":{"line":82,"column":27}},"45":{"start":{"line":83,"column":8},"end":{"line":83,"column":24}},"46":{"start":{"line":84,"column":8},"end":{"line":88,"column":9}},"47":{"start":{"line":85,"column":12},"end":{"line":85,"column":34}},"48":{"start":{"line":87,"column":12},"end":{"line":87,"column":30}},"49":{"start":{"line":90,"column":4},"end":{"line":100,"column":6}},"50":{"start":{"line":91,"column":8},"end":{"line":91,"column":41}},"51":{"start":{"line":92,"column":8},"end":{"line":92,"column":37}},"52":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"53":{"start":{"line":94,"column":8},"end":{"line":94,"column":24}},"54":{"start":{"line":95,"column":8},"end":{"line":99,"column":9}},"55":{"start":{"line":96,"column":12},"end":{"line":96,"column":30}},"56":{"start":{"line":98,"column":12},"end":{"line":98,"column":34}},"57":{"start":{"line":102,"column":4},"end":{"line":104,"column":6}},"58":{"start":{"line":103,"column":8},"end":{"line":103,"column":38}},"59":{"start":{"line":106,"column":4},"end":{"line":108,"column":6}},"60":{"start":{"line":107,"column":8},"end":{"line":107,"column":34}},"61":{"start":{"line":110,"column":4},"end":{"line":112,"column":6}},"62":{"start":{"line":111,"column":8},"end":{"line":111,"column":35}},"63":{"start":{"line":116,"column":4},"end":{"line":140,"column":6}},"64":{"start":{"line":117,"column":8},"end":{"line":117,"column":39}},"65":{"start":{"line":118,"column":8},"end":{"line":118,"column":42}},"66":{"start":{"line":119,"column":8},"end":{"line":119,"column":28}},"67":{"start":{"line":120,"column":8},"end":{"line":120,"column":42}},"68":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"69":{"start":{"line":122,"column":12},"end":{"line":122,"column":18}},"70":{"start":{"line":124,"column":8},"end":{"line":132,"column":9}},"71":{"start":{"line":125,"column":12},"end":{"line":125,"column":52}},"72":{"start":{"line":126,"column":12},"end":{"line":127,"column":45}},"73":{"start":{"line":127,"column":16},"end":{"line":127,"column":45}},"74":{"start":{"line":129,"column":12},"end":{"line":129,"column":48}},"75":{"start":{"line":130,"column":12},"end":{"line":131,"column":45}},"76":{"start":{"line":131,"column":16},"end":{"line":131,"column":45}},"77":{"start":{"line":133,"column":8},"end":{"line":133,"column":43}},"78":{"start":{"line":136,"column":8},"end":{"line":136,"column":63}},"79":{"start":{"line":137,"column":8},"end":{"line":137,"column":63}},"80":{"start":{"line":138,"column":8},"end":{"line":138,"column":63}},"81":{"start":{"line":139,"column":8},"end":{"line":139,"column":30}},"82":{"start":{"line":146,"column":4},"end":{"line":155,"column":6}},"83":{"start":{"line":147,"column":8},"end":{"line":147,"column":61}},"84":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"85":{"start":{"line":149,"column":12},"end":{"line":149,"column":21}},"86":{"start":{"line":151,"column":8},"end":{"line":151,"column":45}},"87":{"start":{"line":152,"column":8},"end":{"line":152,"column":52}},"88":{"start":{"line":153,"column":8},"end":{"line":153,"column":37}},"89":{"start":{"line":154,"column":8},"end":{"line":154,"column":17}},"90":{"start":{"line":157,"column":4},"end":{"line":166,"column":6}},"91":{"start":{"line":158,"column":8},"end":{"line":165,"column":9}},"92":{"start":{"line":159,"column":12},"end":{"line":159,"column":72}},"93":{"start":{"line":161,"column":12},"end":{"line":161,"column":47}},"94":{"start":{"line":162,"column":12},"end":{"line":162,"column":51}},"95":{"start":{"line":163,"column":12},"end":{"line":163,"column":34}},"96":{"start":{"line":164,"column":12},"end":{"line":164,"column":45}},"97":{"start":{"line":173,"column":4},"end":{"line":178,"column":6}},"98":{"start":{"line":174,"column":8},"end":{"line":174,"column":41}},"99":{"start":{"line":175,"column":8},"end":{"line":175,"column":47}},"100":{"start":{"line":176,"column":8},"end":{"line":176,"column":47}},"101":{"start":{"line":177,"column":8},"end":{"line":177,"column":46}},"102":{"start":{"line":179,"column":4},"end":{"line":185,"column":6}},"103":{"start":{"line":180,"column":8},"end":{"line":180,"column":41}},"104":{"start":{"line":181,"column":8},"end":{"line":181,"column":41}},"105":{"start":{"line":182,"column":8},"end":{"line":182,"column":47}},"106":{"start":{"line":184,"column":8},"end":{"line":184,"column":52}},"107":{"start":{"line":192,"column":4},"end":{"line":200,"column":6}},"108":{"start":{"line":193,"column":8},"end":{"line":193,"column":35}},"109":{"start":{"line":194,"column":8},"end":{"line":194,"column":24}},"110":{"start":{"line":195,"column":8},"end":{"line":199,"column":9}},"111":{"start":{"line":196,"column":12},"end":{"line":196,"column":44}},"112":{"start":{"line":198,"column":12},"end":{"line":198,"column":30}},"113":{"start":{"line":203,"column":4},"end":{"line":207,"column":6}},"114":{"start":{"line":204,"column":8},"end":{"line":204,"column":41}},"115":{"start":{"line":205,"column":8},"end":{"line":205,"column":40}},"116":{"start":{"line":206,"column":8},"end":{"line":206,"column":19}},"117":{"start":{"line":209,"column":4},"end":{"line":213,"column":6}},"118":{"start":{"line":210,"column":8},"end":{"line":210,"column":41}},"119":{"start":{"line":211,"column":8},"end":{"line":211,"column":40}},"120":{"start":{"line":212,"column":8},"end":{"line":212,"column":19}},"121":{"start":{"line":215,"column":4},"end":{"line":219,"column":6}},"122":{"start":{"line":216,"column":8},"end":{"line":216,"column":42}},"123":{"start":{"line":217,"column":8},"end":{"line":217,"column":41}},"124":{"start":{"line":218,"column":8},"end":{"line":218,"column":19}},"125":{"start":{"line":222,"column":4},"end":{"line":225,"column":6}},"126":{"start":{"line":224,"column":8},"end":{"line":224,"column":41}},"127":{"start":{"line":230,"column":4},"end":{"line":230,"column":67}},"128":{"start":{"line":231,"column":4},"end":{"line":231,"column":66}},"129":{"start":{"line":234,"column":4},"end":{"line":234,"column":69}},"130":{"start":{"line":235,"column":4},"end":{"line":235,"column":68}},"131":{"start":{"line":237,"column":4},"end":{"line":237,"column":22}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":0},"end":{"line":6,"column":0}},{"start":{"line":6,"column":0},"end":{"line":6,"column":0}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":19},"end":{"line":45,"column":19}},{"start":{"line":45,"column":19},"end":{"line":45,"column":19}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":16}},{"start":{"line":52,"column":16},"end":{"line":52,"column":16}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"7":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":30},"end":{"line":103,"column":31}},{"start":{"line":103,"column":32},"end":{"line":103,"column":33}}]},"8":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"9":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"10":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":34},"end":{"line":147,"column":35}},{"start":{"line":147,"column":38},"end":{"line":147,"column":60}}]},"11":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"12":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":34}},{"start":{"line":148,"column":38},"end":{"line":148,"column":43}}]},"13":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":31},"end":{"line":177,"column":38}},{"start":{"line":177,"column":41},"end":{"line":177,"column":44}}]},"14":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":32},"end":{"line":184,"column":44}},{"start":{"line":184,"column":47},"end":{"line":184,"column":50}}]},"15":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]}},"code":["/* Range Coder.  Inspired by rangecod.c from rngcod13.zip from"," *    http://www.compressconsult.com/rangecoder/"," * This JavaScript version is:"," *    Copyright (c) 2013 C. Scott Ananian."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define([],function(){","","    // Uses 32-bit integer math.  Hopefully the JavaScript runtime figures","    // that out. ;)","    // see https://github.com/kripken/emscripten/wiki/LLVM-Types-in-JavaScript","    // for some hints on doing 32-bit unsigned match in JavaScript.","    // One key is the use of \">>>0\" to change a signed result to unsigned.","    var CODE_BITS = 32;","    var Top_value = Math.pow(2, CODE_BITS-1);","    var SHIFT_BITS = (CODE_BITS - 9);","    var EXTRA_BITS = ((CODE_BITS-2) % 8 + 1);","    var Bottom_value = (Top_value >>> 8);","","    var MAX_INT = Math.pow(2, CODE_BITS) - 1;","","    /* it is highly recommended that the total frequency count is less  */","    /* than 1 << 19 to minimize rounding effects.                       */","    /* the total frequency count MUST be less than 1<<23                */","","","    var RangeCoder = function(stream) {","        this.low = 0; /* low end of interval */","        this.range = Top_value; /* length of interval */","        this.buffer = 0; /* buffer for input/output */","        this.help = 0; /* bytes_to_follow / intermediate value */","        this.bytecount = 0; /* counter for output bytes */","        this.stream = stream;","    };","","    /* Do the normalization before we need a defined state, instead of","     * after messing it up.  This simplifies starting and ending. */","    var enc_normalize = function(rc, outputStream) {","        while (rc.range <= Bottom_value) { /* do we need renormalization? */","            if (rc.low < (0xFF << SHIFT_BITS)) {//no carry possible, so output","                outputStream.writeByte(rc.buffer);","                for (; rc.help; rc.help--)","                    outputStream.writeByte(0xFF);","                rc.buffer = (rc.low >>> SHIFT_BITS) & 0xFF;","            } else if (rc.low & Top_value) { /* carry now, no future carry */","                outputStream.writeByte(rc.buffer+1);","                for (; rc.help; rc.help--)","                    outputStream.writeByte(0x00);","                rc.buffer = (rc.low >>> SHIFT_BITS) & 0xFF;","            } else {","                rc.help++;","                if (rc.help > MAX_INT)","                    throw new Error(\"Too many bytes outstanding, \"+","                                    \"file too large!\");","            }","            rc.range = (rc.range << 8) >>> 0;/*ensure result remains positive*/","            rc.low = ((rc.low << 8) & (Top_value - 1)) >>> 0; /* unsigned */","            rc.bytecount++;","        }","    };","","    /* Start the encoder                                         */","    /* c is written as the first byte in the datastream.","     * one could do w/o, but then you have an additional if per output byte */","    RangeCoder.prototype.encodeStart = function(c, initlength) {","        this.low = 0;","        this.range = Top_value;","        this.buffer = c;","        this.help = 0;","        this.bytecount = initlength;","    };","","   /* Encode a symbol using frequencies                         */","    /* rc is the range coder to be used                          */","    /* sy_f is the interval length (frequency of the symbol)     */","    /* lt_f is the lower end (frequency sum of < symbols)        */","    /* tot_f is the total interval length (total frequency sum)  */","    /* or (faster): tot_f = (code_value)1<<shift                             */","    RangeCoder.prototype.encodeFreq = function(sy_f, lt_f, tot_f) {","        enc_normalize(this, this.stream);","        var r = (this.range / tot_f) >>> 0; // note coercion to integer","        var tmp = r * lt_f;","        this.low += tmp;","        if ((lt_f + sy_f) < tot_f) {","            this.range = r * sy_f;","        } else {","            this.range -= tmp;","        }","    };","    RangeCoder.prototype.encodeShift = function(sy_f, lt_f, shift) {","        enc_normalize(this, this.stream);","        var r = this.range >>> shift;","        var tmp = r * lt_f;","        this.low += tmp;","        if ((lt_f + sy_f) >>> shift) {","            this.range -= tmp;","        } else {","            this.range = r * sy_f;","        }","    };","    /* Encode a bit w/o modelling. */","    RangeCoder.prototype.encodeBit = function(b) {","        this.encodeShift(1, b?1:0, 1);","    };","    /* Encode a byte w/o modelling. */","    RangeCoder.prototype.encodeByte = function(b) {","        this.encodeShift(1, b, 8);","    };","    /* Encode a short w/o modelling. */","    RangeCoder.prototype.encodeShort = function(s) {","        this.encodeShift(1, s, 16);","    };","","    /* Finish encoding                                           */","    /* returns number of bytes written                           */","    RangeCoder.prototype.encodeFinish = function() {","        var outputStream = this.stream;","        enc_normalize(this, outputStream);","        this.bytecount += 5;","        var tmp = this.low >>> SHIFT_BITS;","        if ((this.low & (Bottom_value-1)) >= ((this.bytecount&0xFFFFFF)>>>1)) {","            tmp++;","        }","        if (tmp > 0xFF) { /* we have a carry */","            outputStream.writeByte(this.buffer + 1);","            for (; this.help; this.help--)","                outputStream.writeByte(0x00);","        } else { /* no carry */","            outputStream.writeByte(this.buffer);","            for (; this.help; this.help--)","                outputStream.writeByte(0xFF);","        }","        outputStream.writeByte(tmp & 0xFF);","        // XXX: i'm pretty sure these could be three arbitrary bytes","        //      they are consumed by the decoder at the end","        outputStream.writeByte((this.bytecount >>> 16) & 0xFF);","        outputStream.writeByte((this.bytecount >>>  8) & 0xFF);","        outputStream.writeByte((this.bytecount       ) & 0xFF);","        return this.bytecount;","    };","","    /* Start the decoder; you need to provide the *second* byte from the","     * datastream. (The first byte was provided to startEncoding and is","     * ignored by the decoder.)","     */","    RangeCoder.prototype.decodeStart = function(skipInitialRead) {","        var c = skipInitialRead ? 0 : this.stream.readByte();","        if (typeof(c) !== 'number' || c < 0) {","            return c; // EOF","        }","        this.buffer = this.stream.readByte();","        this.low = this.buffer >>> (8 - EXTRA_BITS);","        this.range = 1 << EXTRA_BITS;","        return c;","    };","","    var dec_normalize = function(rc, inputStream) {","        while (rc.range <= Bottom_value) {","            rc.low = (rc.low << 8) | ((rc.buffer << EXTRA_BITS) & 0xFF);","            /* rc.low could be negative here; don't fix it quite yet */","            rc.buffer = inputStream.readByte();","            rc.low |= rc.buffer >>> (8-EXTRA_BITS);","            rc.low = rc.low >>> 0; /* fix it now */","            rc.range = (rc.range << 8) >>> 0; /* ensure stays positive */","        }","    };","","    /* Calculate cumulative frequency for next symbol. Does NO update!*/","    /* rc is the range coder to be used                          */","    /* tot_f is the total frequency                              */","    /* or: totf is (code_value)1<<shift                                      */","    /* returns the <= cumulative frequency                         */","    RangeCoder.prototype.decodeCulFreq = function(tot_f) {","        dec_normalize(this, this.stream);","        this.help = (this.range / tot_f) >>> 0; // note coercion to integer","        var tmp = (this.low / this.help) >>> 0; // again","        return (tmp >= tot_f ? tot_f-1 : tmp);","    };","    RangeCoder.prototype.decodeCulShift = function(shift) {","        dec_normalize(this, this.stream);","        this.help = this.range >>> shift;","        var tmp = (this.low / this.help) >>> 0; // coercion to unsigned","        // shift is less than 31, so shift below will remain positive","        return ((tmp>>>shift) ? (1<<shift)-1 : tmp);","    };","","    /* Update decoding state                                     */","    /* rc is the range coder to be used                          */","    /* sy_f is the interval length (frequency of the symbol)     */","    /* lt_f is the lower end (frequency sum of < symbols)        */","    /* tot_f is the total interval length (total frequency sum)  */","    RangeCoder.prototype.decodeUpdate = function(sy_f, lt_f, tot_f) {","        var tmp = this.help * lt_f; // should not overflow!","        this.low -= tmp;","        if (lt_f + sy_f < tot_f) {","            this.range = (this.help * sy_f);","        } else {","            this.range -= tmp;","        }","    };","","    /* Decode a bit w/o modelling. */","    RangeCoder.prototype.decodeBit = function() {","        var tmp = this.decodeCulShift(1);","        this.decodeUpdate(1, tmp, 1<<1);","        return tmp;","    };","    /* decode a byte w/o modelling */","    RangeCoder.prototype.decodeByte = function() {","        var tmp = this.decodeCulShift(8);","        this.decodeUpdate(1, tmp, 1<<8);","        return tmp;","    };","    /* decode a short w/o modelling */","    RangeCoder.prototype.decodeShort = function() {","        var tmp = this.decodeCulShift(16);","        this.decodeUpdate(1, tmp, 1<<16);","        return tmp;","    };","","    /* Finish decoding */","    RangeCoder.prototype.decodeFinish = function() {","        /* normalize to use up all bytes */","        dec_normalize(this, this.stream);","    };","","    /** Utility functions */","","    // bitstream interface","    RangeCoder.prototype.writeBit = RangeCoder.prototype.encodeBit;","    RangeCoder.prototype.readBit = RangeCoder.prototype.decodeBit;","","    // stream interface","    RangeCoder.prototype.writeByte = RangeCoder.prototype.encodeByte;","    RangeCoder.prototype.readByte = RangeCoder.prototype.decodeByte;","","    return RangeCoder;","});",""],"l":{"6":1,"7":1,"14":1,"15":1,"16":1,"17":1,"18":1,"20":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"98":0,"102":1,"103":0,"106":1,"107":0,"110":1,"111":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"127":0,"129":0,"130":0,"131":0,"133":0,"136":0,"137":0,"138":0,"139":0,"146":1,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"157":1,"158":0,"159":0,"161":0,"162":0,"163":0,"164":0,"173":1,"174":0,"175":0,"176":0,"177":0,"179":1,"180":0,"181":0,"182":0,"184":0,"192":1,"193":0,"194":0,"195":0,"196":0,"198":0,"203":1,"204":0,"205":0,"206":0,"209":1,"210":0,"211":0,"212":0,"215":1,"216":0,"217":0,"218":0,"222":1,"224":0,"230":1,"231":1,"234":1,"235":1,"237":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/FenwickModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/FenwickModel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":1,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":44},"end":{"line":3,"column":76}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":19},"end":{"line":13,"column":62}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":23},"end":{"line":33,"column":60}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":26}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":42}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":32},"end":{"line":47,"column":49}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":33},"end":{"line":88,"column":52}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":32},"end":{"line":129,"column":43}}},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":34},"end":{"line":137,"column":45}}},"10":{"name":"(anonymous_10)","line":166,"loc":{"start":{"line":166,"column":34},"end":{"line":166,"column":45}}},"11":{"name":"(anonymous_11)","line":176,"loc":{"start":{"line":176,"column":72},"end":{"line":176,"column":130}}},"12":{"name":"(anonymous_12)","line":185,"loc":{"start":{"line":185,"column":76},"end":{"line":185,"column":116}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":194,"column":3}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}},"9":{"start":{"line":13,"column":0},"end":{"line":32,"column":2}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":28}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":51}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":55}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":67}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":35}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":10}},"18":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"19":{"start":{"line":25,"column":8},"end":{"line":26,"column":48}},"20":{"start":{"line":28,"column":4},"end":{"line":29,"column":57}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":20}},"22":{"start":{"line":33,"column":0},"end":{"line":37,"column":2}},"23":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":66}},"25":{"start":{"line":38,"column":0},"end":{"line":46,"column":2}},"26":{"start":{"line":39,"column":4},"end":{"line":40,"column":67}},"27":{"start":{"line":41,"column":4},"end":{"line":41,"column":10}},"28":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"29":{"start":{"line":43,"column":8},"end":{"line":43,"column":40}},"30":{"start":{"line":45,"column":4},"end":{"line":45,"column":20}},"31":{"start":{"line":47,"column":0},"end":{"line":87,"column":2}},"32":{"start":{"line":48,"column":4},"end":{"line":48,"column":34}},"33":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"34":{"start":{"line":50,"column":4},"end":{"line":50,"column":43}},"35":{"start":{"line":51,"column":4},"end":{"line":51,"column":47}},"36":{"start":{"line":53,"column":4},"end":{"line":62,"column":5}},"37":{"start":{"line":54,"column":8},"end":{"line":54,"column":36}},"38":{"start":{"line":55,"column":8},"end":{"line":55,"column":24}},"39":{"start":{"line":56,"column":8},"end":{"line":56,"column":33}},"40":{"start":{"line":57,"column":8},"end":{"line":57,"column":26}},"41":{"start":{"line":58,"column":11},"end":{"line":62,"column":5}},"42":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"43":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"44":{"start":{"line":65,"column":4},"end":{"line":76,"column":5}},"45":{"start":{"line":66,"column":8},"end":{"line":66,"column":30}},"46":{"start":{"line":67,"column":8},"end":{"line":67,"column":31}},"47":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"48":{"start":{"line":71,"column":12},"end":{"line":71,"column":40}},"49":{"start":{"line":74,"column":8},"end":{"line":74,"column":31}},"50":{"start":{"line":75,"column":8},"end":{"line":75,"column":19}},"51":{"start":{"line":77,"column":4},"end":{"line":77,"column":29}},"52":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"53":{"start":{"line":79,"column":4},"end":{"line":79,"column":35}},"54":{"start":{"line":80,"column":4},"end":{"line":80,"column":35}},"55":{"start":{"line":81,"column":4},"end":{"line":81,"column":35}},"56":{"start":{"line":82,"column":4},"end":{"line":82,"column":45}},"57":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"58":{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},"59":{"start":{"line":88,"column":0},"end":{"line":128,"column":2}},"60":{"start":{"line":89,"column":4},"end":{"line":89,"column":43}},"61":{"start":{"line":90,"column":4},"end":{"line":90,"column":47}},"62":{"start":{"line":91,"column":4},"end":{"line":95,"column":5}},"63":{"start":{"line":92,"column":8},"end":{"line":92,"column":24}},"64":{"start":{"line":93,"column":8},"end":{"line":93,"column":35}},"65":{"start":{"line":94,"column":8},"end":{"line":94,"column":26}},"66":{"start":{"line":96,"column":4},"end":{"line":96,"column":48}},"67":{"start":{"line":97,"column":4},"end":{"line":97,"column":47}},"68":{"start":{"line":99,"column":4},"end":{"line":99,"column":24}},"69":{"start":{"line":100,"column":4},"end":{"line":109,"column":5}},"70":{"start":{"line":101,"column":8},"end":{"line":101,"column":31}},"71":{"start":{"line":103,"column":8},"end":{"line":103,"column":57}},"72":{"start":{"line":104,"column":8},"end":{"line":104,"column":15}},"73":{"start":{"line":105,"column":8},"end":{"line":108,"column":9}},"74":{"start":{"line":106,"column":12},"end":{"line":106,"column":29}},"75":{"start":{"line":107,"column":12},"end":{"line":107,"column":16}},"76":{"start":{"line":110,"column":4},"end":{"line":110,"column":34}},"77":{"start":{"line":111,"column":4},"end":{"line":111,"column":47}},"78":{"start":{"line":112,"column":4},"end":{"line":112,"column":27}},"79":{"start":{"line":113,"column":4},"end":{"line":113,"column":47}},"80":{"start":{"line":115,"column":4},"end":{"line":122,"column":5}},"81":{"start":{"line":117,"column":8},"end":{"line":117,"column":31}},"82":{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},"83":{"start":{"line":119,"column":12},"end":{"line":119,"column":35}},"84":{"start":{"line":120,"column":12},"end":{"line":120,"column":26}},"85":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"86":{"start":{"line":125,"column":8},"end":{"line":125,"column":24}},"87":{"start":{"line":127,"column":4},"end":{"line":127,"column":18}},"88":{"start":{"line":129,"column":0},"end":{"line":136,"column":2}},"89":{"start":{"line":130,"column":4},"end":{"line":130,"column":37}},"90":{"start":{"line":131,"column":4},"end":{"line":134,"column":5}},"91":{"start":{"line":133,"column":8},"end":{"line":133,"column":36}},"92":{"start":{"line":135,"column":4},"end":{"line":135,"column":18}},"93":{"start":{"line":137,"column":0},"end":{"line":165,"column":2}},"94":{"start":{"line":138,"column":4},"end":{"line":138,"column":33}},"95":{"start":{"line":140,"column":4},"end":{"line":154,"column":5}},"96":{"start":{"line":141,"column":8},"end":{"line":141,"column":43}},"97":{"start":{"line":142,"column":8},"end":{"line":146,"column":9}},"98":{"start":{"line":144,"column":12},"end":{"line":144,"column":29}},"99":{"start":{"line":145,"column":12},"end":{"line":145,"column":21}},"100":{"start":{"line":147,"column":8},"end":{"line":147,"column":41}},"101":{"start":{"line":148,"column":8},"end":{"line":152,"column":9}},"102":{"start":{"line":150,"column":12},"end":{"line":150,"column":36}},"103":{"start":{"line":151,"column":12},"end":{"line":151,"column":29}},"104":{"start":{"line":153,"column":8},"end":{"line":153,"column":43}},"105":{"start":{"line":156,"column":4},"end":{"line":156,"column":39}},"106":{"start":{"line":157,"column":4},"end":{"line":157,"column":37}},"107":{"start":{"line":160,"column":4},"end":{"line":161,"column":53}},"108":{"start":{"line":160,"column":20},"end":{"line":160,"column":29}},"109":{"start":{"line":161,"column":9},"end":{"line":161,"column":53}},"110":{"start":{"line":161,"column":27},"end":{"line":161,"column":51}},"111":{"start":{"line":162,"column":4},"end":{"line":162,"column":39}},"112":{"start":{"line":164,"column":4},"end":{"line":164,"column":20}},"113":{"start":{"line":166,"column":0},"end":{"line":172,"column":2}},"114":{"start":{"line":167,"column":4},"end":{"line":167,"column":10}},"115":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"116":{"start":{"line":170,"column":8},"end":{"line":170,"column":59}},"117":{"start":{"line":174,"column":0},"end":{"line":174,"column":28}},"118":{"start":{"line":176,"column":0},"end":{"line":182,"column":9}},"119":{"start":{"line":177,"column":4},"end":{"line":177,"column":42}},"120":{"start":{"line":178,"column":4},"end":{"line":178,"column":36}},"121":{"start":{"line":179,"column":4},"end":{"line":179,"column":66}},"122":{"start":{"line":180,"column":4},"end":{"line":180,"column":54}},"123":{"start":{"line":181,"column":4},"end":{"line":181,"column":25}},"124":{"start":{"line":185,"column":0},"end":{"line":191,"column":3}},"125":{"start":{"line":186,"column":4},"end":{"line":186,"column":41}},"126":{"start":{"line":187,"column":4},"end":{"line":187,"column":59}},"127":{"start":{"line":188,"column":4},"end":{"line":188,"column":66}},"128":{"start":{"line":189,"column":4},"end":{"line":189,"column":57}},"129":{"start":{"line":190,"column":4},"end":{"line":190,"column":25}},"130":{"start":{"line":193,"column":0},"end":{"line":193,"column":20}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":22},"end":{"line":17,"column":32}},{"start":{"line":17,"column":37},"end":{"line":17,"column":54}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":21},"end":{"line":18,"column":30}},{"start":{"line":18,"column":35},"end":{"line":18,"column":51}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":11}},{"start":{"line":58,"column":11},"end":{"line":58,"column":11}}]},"6":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":15},"end":{"line":58,"column":42}},{"start":{"line":59,"column":15},"end":{"line":59,"column":62}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"9":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"10":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"12":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":35}},{"start":{"line":116,"column":8},"end":{"line":116,"column":55}}]},"13":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"14":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"15":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"16":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"17":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"18":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":9},"end":{"line":161,"column":9}},{"start":{"line":161,"column":9},"end":{"line":161,"column":9}}]},"19":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":55},"end":{"line":179,"column":58}},{"start":{"line":179,"column":61},"end":{"line":179,"column":64}}]},"20":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":55},"end":{"line":188,"column":58}},{"start":{"line":188,"column":61},"end":{"line":188,"column":64}}]}},"code":["/** Range coding model based on Fenwick trees for O(ln N) query/update. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./RangeCoder','./Stream','./Util'],function(RangeCoder,Stream,Util){","","/** We store two probabilities in a U32, so max prob is going to be 0xFFFF */","var DEFAULT_MAX_PROB = 0xFF00;","var DEFAULT_INCREMENT= 0x0100;","","var ESC_MASK = 0x0000FFFF, ESC_SHIFT = 0;","var SYM_MASK = 0xFFFF0000, SYM_SHIFT = 16;","var SCALE_MASK=0xFFFEFFFE;","","var FenwickModel = function(coder, size, max_prob, increment) {","    this.coder = coder;","    this.numSyms = size + 1; // save space for an escape symbol","    this.tree = Util.makeU32Buffer(this.numSyms*2);","    this.increment = (+increment) || DEFAULT_INCREMENT;","    this.max_prob = (+max_prob) || DEFAULT_MAX_PROB;","    // sanity-check to prevent overflow.","    console.assert((this.max_prob + (this.increment-1)) <= 0xFFFF);","    console.assert(size <= 0xFFFF);","    // record escape probability as 1.","    var i;","    for (i=0; i<size; i++) {","        this.tree[this.numSyms + i] = // escape prob=1, sym prob = 0","            (1 << ESC_SHIFT) | (0 << SYM_SHIFT);","    }","    this.tree[this.numSyms + i] = // escape prob = 0, sym prob = 1","        (0 << ESC_SHIFT) | (this.increment << SYM_SHIFT);","    this._sumTree();","    // probability sums are in this.tree[1].  this.tree[0] is unused.","};","FenwickModel.factory = function(coder, max_prob, increment) {","    return function(size) {","        return new FenwickModel(coder, size, max_prob, increment);","    };","};","FenwickModel.prototype.clone = function() {","    var newModel = new FenwickModel(this.coder, this.size,","                                    this.max_prob, this.increment);","    var i;","    for (i=1; i<this.tree.length; i++) {","        newModel.tree[i] = this.tree[i];","    }","    return newModel;","};","FenwickModel.prototype.encode = function(symbol) {","    var i = this.numSyms + symbol;","    var sy_f = this.tree[i];","    var mask = SYM_MASK, shift = SYM_SHIFT;","    var update = (this.increment << SYM_SHIFT);","","    if ((sy_f & SYM_MASK) === 0) { // escape!","        this.encode(this.numSyms-1);","        mask = ESC_MASK;","        update -= (1<<ESC_SHIFT); // not going to escape no mo'","        shift = ESC_SHIFT;","    } else if (symbol === (this.numSyms-1) &&","               ((this.tree[1] & ESC_MASK) >>> ESC_SHIFT) === 1) {","        // this is the last escape, zero it out","        update = -this.tree[i];","    }","    // sum up the proper lt_f","    var lt_f = 0;","    while (i > 1) {","        var isRight = (i & 1);","        var parent = (i >>> 1);","        // if we're the right child, we need to","        // add the prob from the left child","        if (isRight) {","            lt_f += this.tree[2*parent];","        }","        // update sums","        this.tree[i] += update; // increase sym / decrease esc","        i = parent;","    }","    var tot_f = this.tree[1];","    this.tree[1] += update; // update prob in root","    sy_f = (sy_f & mask) >>> shift;","    lt_f = (lt_f & mask) >>> shift;","    tot_f =(tot_f& mask) >>> shift;","    this.coder.encodeFreq(sy_f, lt_f, tot_f);","    // rescale?","    if ((( this.tree[1] & SYM_MASK ) >>> SYM_SHIFT) >= this.max_prob) {","        this._rescale();","    }","};","FenwickModel.prototype._decode = function(isEscape) {","    var mask = SYM_MASK, shift = SYM_SHIFT;","    var update = (this.increment << SYM_SHIFT);","    if (isEscape) {","        mask = ESC_MASK;","        update -= (1 << ESC_SHIFT);","        shift = ESC_SHIFT;","    }","    var tot_f = (this.tree[1] & mask) >>> shift;","    var prob = this.coder.decodeCulFreq(tot_f);","    // travel down the tree looking for this","    var i = 1, lt_f = 0;","    while (i < this.numSyms) {","        this.tree[i] += update;","        // look at probability in left child.","        var leftProb = (this.tree[2*i] & mask) >>> shift;","        i *= 2;","        if ((prob-lt_f) >= leftProb) {","            lt_f += leftProb;","            i++; // take the right child.","        }","    }","    var symbol = i - this.numSyms;","    var sy_f = (this.tree[i] & mask) >>> shift;","    this.tree[i] += update;","    this.coder.decodeUpdate(sy_f, lt_f, tot_f);","    // was this the last escape?","    if (symbol === (this.numSyms-1) &&","        ((this.tree[1] & ESC_MASK) >>> ESC_SHIFT) === 1) {","        update = -this.tree[i]; // zero it out","        while (i >= 1) {","            this.tree[i] += update;","            i = (i >>> 1); // parent","        }","    }","    // rescale?","    if ((( this.tree[1] & SYM_MASK ) >>> SYM_SHIFT) >= this.max_prob) {","        this._rescale();","    }","    return symbol;","};","FenwickModel.prototype.decode = function() {","    var symbol = this._decode(false); // not escape","    if (symbol === (this.numSyms-1)) {","        // this was an escape!","        symbol = this._decode(true); // an escape!","    }","    return symbol;","};","FenwickModel.prototype._rescale = function() {","    var i, prob, noEscape = true;","    // scale symbols (possible causing them to escape)","    for (i=0; i < this.numSyms-1; i++) {","        prob = this.tree[this.numSyms + i];","        if ((prob & ESC_MASK) !== 0) {","            // this symbol escapes","            noEscape = false;","            continue;","        }","        prob = (prob & SCALE_MASK) >>> 1;","        if (prob === 0) {","            // this symbol newly escapes","            prob = (1 << ESC_SHIFT);","            noEscape = false;","        }","        this.tree[this.numSyms + i] = prob;","    }","    // scale the escape symbol","    prob = this.tree[this.numSyms + i];","    prob = (prob & SCALE_MASK) >>> 1;","    // prob should be zero if there are no escaping symbols, otherwise","    // it must be at least 1.","    if (noEscape) { prob = 0; }","    else if (prob === 0) { prob = (1 << SYM_SHIFT); }","    this.tree[this.numSyms + i] = prob;","    // sum it all up afresh","    this._sumTree();","};","FenwickModel.prototype._sumTree = function() {","    var i;","    // sum it all. (we know we won't overflow)","    for (i=this.numSyms - 1; i > 0; i--) {","        this.tree[i] = this.tree[2*i] + this.tree[2*i + 1];","    }","};","","FenwickModel.MAGIC = 'fenw';","/** Simple order-0 compressor, as self-test. */","FenwickModel.compressFile = Util.compressFileHelper(FenwickModel.MAGIC, function(inStream, outStream, fileSize, props, finalByte) {","    var range = new RangeCoder(outStream);","    range.encodeStart(finalByte, 1);","    var model = new FenwickModel(range, (fileSize<0) ? 257 : 256);","    Util.compressWithModel(inStream, fileSize, model);","    range.encodeFinish();","}, true);","","/** Simple order-0 decompresser, as self-test. */","FenwickModel.decompressFile = Util.decompressFileHelper(FenwickModel.MAGIC, function(inStream, outStream, fileSize) {","    var range = new RangeCoder(inStream);","    range.decodeStart(true/*already read the final byte*/);","    var model = new FenwickModel(range, (fileSize<0) ? 257 : 256);","    Util.decompressWithModel(outStream, fileSize, model);","    range.decodeFinish();","});","","return FenwickModel;","});",""],"l":{"2":1,"3":1,"6":1,"7":1,"9":1,"10":1,"11":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"23":0,"24":0,"25":0,"28":0,"30":0,"33":1,"34":0,"35":0,"38":1,"39":0,"41":0,"42":0,"43":0,"45":0,"47":1,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"64":0,"65":0,"66":0,"67":0,"70":0,"71":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"85":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"107":0,"110":0,"111":0,"112":0,"113":0,"115":0,"117":0,"118":0,"119":0,"120":0,"124":0,"125":0,"127":0,"129":1,"130":0,"131":0,"133":0,"135":0,"137":1,"138":0,"140":0,"141":0,"142":0,"144":0,"145":0,"147":0,"148":0,"150":0,"151":0,"153":0,"156":0,"157":0,"160":0,"161":0,"162":0,"164":0,"166":1,"167":0,"169":0,"170":0,"174":1,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"193":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/MTFModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/MTFModel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":44},"end":{"line":7,"column":76}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":34}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":72}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":70}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":26}}},"6":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":27},"end":{"line":36,"column":38}}},"7":{"name":"(anonymous_7)","line":51,"loc":{"start":{"line":51,"column":29},"end":{"line":51,"column":59}}},"8":{"name":"(anonymous_8)","line":84,"loc":{"start":{"line":84,"column":30},"end":{"line":84,"column":41}}},"9":{"name":"(anonymous_9)","line":114,"loc":{"start":{"line":114,"column":28},"end":{"line":114,"column":39}}},"10":{"name":"(anonymous_10)","line":153,"loc":{"start":{"line":153,"column":28},"end":{"line":153,"column":45}}},"11":{"name":"(anonymous_11)","line":190,"loc":{"start":{"line":190,"column":64},"end":{"line":190,"column":122}}},"12":{"name":"(anonymous_12)","line":199,"loc":{"start":{"line":199,"column":68},"end":{"line":199,"column":108}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":79}},"2":{"start":{"line":6,"column":36},"end":{"line":6,"column":77}},"3":{"start":{"line":7,"column":0},"end":{"line":208,"column":3}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"7":{"start":{"line":12,"column":36},"end":{"line":12,"column":49}},"8":{"start":{"line":14,"column":0},"end":{"line":30,"column":2}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":55}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":52}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":67}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":42}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":20}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":46}},"19":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"20":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":33}},"22":{"start":{"line":31,"column":0},"end":{"line":35,"column":2}},"23":{"start":{"line":32,"column":4},"end":{"line":34,"column":6}},"24":{"start":{"line":33,"column":8},"end":{"line":33,"column":76}},"25":{"start":{"line":36,"column":0},"end":{"line":50,"column":2}},"26":{"start":{"line":37,"column":4},"end":{"line":38,"column":67}},"27":{"start":{"line":39,"column":4},"end":{"line":39,"column":10}},"28":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"29":{"start":{"line":41,"column":8},"end":{"line":41,"column":38}},"30":{"start":{"line":42,"column":8},"end":{"line":42,"column":40}},"31":{"start":{"line":44,"column":4},"end":{"line":44,"column":36}},"32":{"start":{"line":45,"column":4},"end":{"line":45,"column":38}},"33":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"34":{"start":{"line":47,"column":8},"end":{"line":47,"column":55}},"35":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}},"36":{"start":{"line":51,"column":0},"end":{"line":83,"column":2}},"37":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"38":{"start":{"line":54,"column":4},"end":{"line":57,"column":5}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":36}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":45}},"41":{"start":{"line":58,"column":4},"end":{"line":80,"column":5}},"42":{"start":{"line":59,"column":8},"end":{"line":59,"column":29}},"43":{"start":{"line":60,"column":8},"end":{"line":60,"column":45}},"44":{"start":{"line":62,"column":8},"end":{"line":63,"column":54}},"45":{"start":{"line":64,"column":8},"end":{"line":68,"column":9}},"46":{"start":{"line":66,"column":12},"end":{"line":66,"column":47}},"47":{"start":{"line":67,"column":12},"end":{"line":67,"column":62}},"48":{"start":{"line":67,"column":35},"end":{"line":67,"column":60}},"49":{"start":{"line":70,"column":8},"end":{"line":70,"column":41}},"50":{"start":{"line":71,"column":8},"end":{"line":71,"column":33}},"51":{"start":{"line":72,"column":8},"end":{"line":72,"column":33}},"52":{"start":{"line":73,"column":8},"end":{"line":73,"column":32}},"53":{"start":{"line":74,"column":8},"end":{"line":74,"column":43}},"54":{"start":{"line":75,"column":8},"end":{"line":79,"column":9}},"55":{"start":{"line":76,"column":12},"end":{"line":76,"column":41}},"56":{"start":{"line":78,"column":12},"end":{"line":78,"column":47}},"57":{"start":{"line":81,"column":4},"end":{"line":81,"column":52}},"58":{"start":{"line":81,"column":34},"end":{"line":81,"column":50}},"59":{"start":{"line":82,"column":4},"end":{"line":82,"column":11}},"60":{"start":{"line":84,"column":0},"end":{"line":113,"column":2}},"61":{"start":{"line":85,"column":4},"end":{"line":85,"column":22}},"62":{"start":{"line":86,"column":4},"end":{"line":86,"column":24}},"63":{"start":{"line":87,"column":4},"end":{"line":87,"column":56}},"64":{"start":{"line":87,"column":27},"end":{"line":87,"column":54}},"65":{"start":{"line":88,"column":4},"end":{"line":101,"column":5}},"66":{"start":{"line":89,"column":8},"end":{"line":89,"column":30}},"67":{"start":{"line":90,"column":8},"end":{"line":90,"column":49}},"68":{"start":{"line":91,"column":8},"end":{"line":91,"column":20}},"69":{"start":{"line":92,"column":8},"end":{"line":100,"column":9}},"70":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"71":{"start":{"line":94,"column":16},"end":{"line":94,"column":33}},"72":{"start":{"line":96,"column":12},"end":{"line":96,"column":30}},"73":{"start":{"line":97,"column":12},"end":{"line":97,"column":35}},"74":{"start":{"line":98,"column":12},"end":{"line":98,"column":26}},"75":{"start":{"line":99,"column":12},"end":{"line":99,"column":63}},"76":{"start":{"line":99,"column":35},"end":{"line":99,"column":61}},"77":{"start":{"line":102,"column":4},"end":{"line":102,"column":25}},"78":{"start":{"line":103,"column":4},"end":{"line":103,"column":22}},"79":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"80":{"start":{"line":105,"column":8},"end":{"line":105,"column":43}},"81":{"start":{"line":108,"column":4},"end":{"line":112,"column":5}},"82":{"start":{"line":111,"column":8},"end":{"line":111,"column":70}},"83":{"start":{"line":114,"column":0},"end":{"line":152,"column":2}},"84":{"start":{"line":115,"column":4},"end":{"line":115,"column":41}},"85":{"start":{"line":116,"column":4},"end":{"line":116,"column":47}},"86":{"start":{"line":119,"column":4},"end":{"line":119,"column":10}},"87":{"start":{"line":120,"column":4},"end":{"line":123,"column":5}},"88":{"start":{"line":121,"column":8},"end":{"line":122,"column":18}},"89":{"start":{"line":122,"column":12},"end":{"line":122,"column":18}},"90":{"start":{"line":124,"column":4},"end":{"line":124,"column":25}},"91":{"start":{"line":125,"column":4},"end":{"line":125,"column":29}},"92":{"start":{"line":126,"column":4},"end":{"line":126,"column":28}},"93":{"start":{"line":127,"column":4},"end":{"line":127,"column":39}},"94":{"start":{"line":128,"column":4},"end":{"line":128,"column":47}},"95":{"start":{"line":129,"column":4},"end":{"line":129,"column":34}},"96":{"start":{"line":130,"column":4},"end":{"line":150,"column":5}},"97":{"start":{"line":133,"column":8},"end":{"line":133,"column":17}},"98":{"start":{"line":134,"column":8},"end":{"line":134,"column":29}},"99":{"start":{"line":135,"column":8},"end":{"line":147,"column":9}},"100":{"start":{"line":138,"column":12},"end":{"line":138,"column":39}},"101":{"start":{"line":139,"column":12},"end":{"line":139,"column":49}},"102":{"start":{"line":140,"column":12},"end":{"line":140,"column":66}},"103":{"start":{"line":140,"column":56},"end":{"line":140,"column":64}},"104":{"start":{"line":141,"column":12},"end":{"line":141,"column":60}},"105":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"106":{"start":{"line":143,"column":16},"end":{"line":143,"column":25}},"107":{"start":{"line":146,"column":12},"end":{"line":146,"column":60}},"108":{"start":{"line":148,"column":8},"end":{"line":148,"column":51}},"109":{"start":{"line":149,"column":8},"end":{"line":149,"column":44}},"110":{"start":{"line":151,"column":4},"end":{"line":151,"column":18}},"111":{"start":{"line":153,"column":0},"end":{"line":186,"column":2}},"112":{"start":{"line":155,"column":4},"end":{"line":155,"column":29}},"113":{"start":{"line":156,"column":4},"end":{"line":165,"column":5}},"114":{"start":{"line":157,"column":8},"end":{"line":164,"column":9}},"115":{"start":{"line":159,"column":12},"end":{"line":159,"column":32}},"116":{"start":{"line":160,"column":12},"end":{"line":160,"column":43}},"117":{"start":{"line":161,"column":12},"end":{"line":161,"column":45}},"118":{"start":{"line":162,"column":12},"end":{"line":162,"column":53}},"119":{"start":{"line":163,"column":12},"end":{"line":163,"column":49}},"120":{"start":{"line":167,"column":4},"end":{"line":167,"column":44}},"121":{"start":{"line":168,"column":4},"end":{"line":168,"column":30}},"122":{"start":{"line":170,"column":4},"end":{"line":170,"column":13}},"123":{"start":{"line":171,"column":4},"end":{"line":171,"column":18}},"124":{"start":{"line":172,"column":4},"end":{"line":172,"column":25}},"125":{"start":{"line":173,"column":4},"end":{"line":182,"column":5}},"126":{"start":{"line":176,"column":8},"end":{"line":176,"column":35}},"127":{"start":{"line":177,"column":8},"end":{"line":177,"column":31}},"128":{"start":{"line":178,"column":8},"end":{"line":178,"column":62}},"129":{"start":{"line":178,"column":52},"end":{"line":178,"column":60}},"130":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"131":{"start":{"line":180,"column":12},"end":{"line":180,"column":19}},"132":{"start":{"line":183,"column":4},"end":{"line":183,"column":45}},"133":{"start":{"line":185,"column":4},"end":{"line":185,"column":47}},"134":{"start":{"line":188,"column":0},"end":{"line":188,"column":24}},"135":{"start":{"line":190,"column":0},"end":{"line":196,"column":9}},"136":{"start":{"line":191,"column":2},"end":{"line":191,"column":40}},"137":{"start":{"line":192,"column":2},"end":{"line":192,"column":34}},"138":{"start":{"line":193,"column":2},"end":{"line":193,"column":60}},"139":{"start":{"line":194,"column":2},"end":{"line":194,"column":52}},"140":{"start":{"line":195,"column":2},"end":{"line":195,"column":23}},"141":{"start":{"line":199,"column":0},"end":{"line":205,"column":3}},"142":{"start":{"line":200,"column":2},"end":{"line":200,"column":39}},"143":{"start":{"line":201,"column":2},"end":{"line":201,"column":61}},"144":{"start":{"line":202,"column":2},"end":{"line":202,"column":60}},"145":{"start":{"line":203,"column":2},"end":{"line":203,"column":55}},"146":{"start":{"line":204,"column":2},"end":{"line":204,"column":23}},"147":{"start":{"line":207,"column":0},"end":{"line":207,"column":16}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":0},"end":{"line":6,"column":0}},{"start":{"line":6,"column":0},"end":{"line":6,"column":0}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":22},"end":{"line":16,"column":32}},{"start":{"line":16,"column":37},"end":{"line":16,"column":54}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":21},"end":{"line":17,"column":30}},{"start":{"line":17,"column":35},"end":{"line":17,"column":51}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"8":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":35}},{"start":{"line":64,"column":39},"end":{"line":64,"column":68}}]},"9":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"11":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"12":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"14":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":93,"column":12}},{"start":{"line":93,"column":12},"end":{"line":93,"column":12}}]},"15":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":12}},{"start":{"line":99,"column":12},"end":{"line":99,"column":12}}]},"16":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"17":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"18":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":16}},{"start":{"line":108,"column":20},"end":{"line":108,"column":48}}]},"19":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"20":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"21":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"22":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":140,"column":12}},{"start":{"line":140,"column":12},"end":{"line":140,"column":12}}]},"23":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":22},"end":{"line":142,"column":37}},{"start":{"line":142,"column":41},"end":{"line":142,"column":58}}]},"24":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":8}},{"start":{"line":157,"column":8},"end":{"line":157,"column":8}}]},"25":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"26":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"27":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":18},"end":{"line":179,"column":33}},{"start":{"line":179,"column":37},"end":{"line":179,"column":53}}]},"28":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":49},"end":{"line":193,"column":52}},{"start":{"line":193,"column":55},"end":{"line":193,"column":58}}]},"29":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":49},"end":{"line":202,"column":52}},{"start":{"line":202,"column":55},"end":{"line":202,"column":58}}]}},"code":["/** Simple range coding model w/ escape, suitable for sparse symbol sets."," *  Uses a move-to-front list, which is simple and relatively performant,"," *  but slows down a lot if you want to try to model escapes more precisely"," *  (which is why this feature is disabled by default)."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./RangeCoder','./Stream','./Util'],function(RangeCoder,Stream,Util){","","var DEFAULT_MAX_PROB = 0xFF00;","var DEFAULT_INCREMENT= 0x0100;","","var NUMERIC_SORT = function(a, b) { return a - b; };","","var MTFModel = function(coder, size, max_prob, increment, betterEscape) {","    this.coder = coder;","    this.increment = (+increment) || DEFAULT_INCREMENT;","    this.max_prob = (+max_prob) || DEFAULT_MAX_PROB;","    console.assert((this.max_prob + (this.increment-1)) <= 0xFFFF);","    this.sym = Util.makeU16Buffer(size+1);","    this.prob= Util.makeU16Buffer(size+2);","    this.sym[0] = size; // escape code","    this.prob[0]= 0;","    this.seenSyms = 1;","    // total probability always found in this.prob[this.seenSyms]","    this.prob[this.seenSyms] = this.increment;","    this.numSyms = size;","    if (betterEscape) {","        this.sortedSeen = [size];","    }","};","MTFModel.factory = function(coder, max_prob, increment, betterEscape) {","    return function(size) {","        return new MTFModel(coder, size, max_prob, increment, betterEscape);","    };","};","MTFModel.prototype.clone = function() {","    var newModel = new MTFModel(this.coder, this.numSyms, this.max_prob,","                                this.increment, !!this.sortedSeen);","    var i;","    for (i=0; i<this.seenSyms; i++) {","        newModel.sym[i] = this.sym[i];","        newModel.prob[i] = this.prob[i];","    }","    newModel.prob[i] = this.prob[i]; // total probability","    newModel.seenSyms = this.seenSyms;","    if (this.sortedSeen) {","        newModel.sortedSeen = this.sortedSeen.slice(0);","    }","    return newModel;","};","MTFModel.prototype._update = function(symbol, index, sy_f) {","    var j, tot_f;","    // move this symbol to the end","    for (j=index; j<this.seenSyms-1; j++) {","        this.sym[j] = this.sym[j+1];","        this.prob[j] = this.prob[j+1] - sy_f;","    }","    if (index < this.seenSyms) {","        this.sym[j] = symbol;","        this.prob[j] = this.prob[j+1] - sy_f;","        // increase frequency for this symbol, and total freq at same time","        this.prob[this.seenSyms] = tot_f =","            this.prob[this.seenSyms] + this.increment;","        if (symbol === this.numSyms && this.seenSyms >= this.numSyms) {","            // this is the last time we'll see an escape! remove it.","            tot_f = this.prob[--this.seenSyms];","            if (this.sortedSeen) { this.sortedSeen.length--; }","        }","    } else { // add to the end","        tot_f = this.prob[this.seenSyms];","        this.sym[index] = symbol;","        this.prob[index] = tot_f;","        tot_f += this.increment;","        this.prob[++this.seenSyms] = tot_f;","        if (this.sortedSeen) {","            this.sortedSeen.push(symbol);","            // hopefully sort is very fast on a mostly-sorted array","            this.sortedSeen.sort(NUMERIC_SORT);","        }","    }","    if (tot_f >= this.max_prob) { this._rescale(); }","    return;","};","MTFModel.prototype._rescale = function() {","    var i, j, total=0;","    var noEscape = true;","    if (this.sortedSeen) { this.sortedSeen.length = 0; }","    for(i=0, j=0; i<this.seenSyms; i++) {","        var sym = this.sym[i];","        var sy_f = this.prob[i+1] - this.prob[i];","        sy_f >>>= 1;","        if (sy_f > 0) {","            if (sym === this.numSyms) {","                noEscape = false;","            }","            this.sym[j] = sym;","            this.prob[j++] = total;","            total += sy_f;","            if (this.sortedSeen) { this.sortedSeen.push(sym); }","        }","    }","    this.prob[j] = total;","    this.seenSyms = j;","    if (this.sortedSeen) {","        this.sortedSeen.sort(NUMERIC_SORT);","    }","    // don't allow escape to go to zero prob if we still need it","    if (noEscape && this.seenSyms < this.numSyms) {","        // NOTE this adds this.increment to escape freq; the FenwickModel","        //      just adds one.","        this._update(this.numSyms/*escape*/, this.seenSyms/*at end*/);","    }","};","MTFModel.prototype.decode = function() {","    var tot_f = this.prob[this.seenSyms];","    var prob = this.coder.decodeCulFreq(tot_f);","    // we're expecting to find the probability near the \"most recent\" side","    // of our array","    var i;","    for (i=this.seenSyms-1; i>=0; i--) {","        if (this.prob[i] <= prob /*&& prob < this.prob[i+1]*/)","            break;","    }","    console.assert(i>=0);","    var symbol = this.sym[i];","    var lt_f = this.prob[i];","    var sy_f = this.prob[i + 1] - lt_f;","    this.coder.decodeUpdate(sy_f, lt_f, tot_f);","    this._update(symbol, i, sy_f);","    if (symbol === this.numSyms) {","        /* this is an escape */","        /* decode the literal */","        sy_f = 1;","        tot_f = this.numSyms;","        if (this.sortedSeen) {","            // do a slower, but more precise decoding of the literal","            // by excluding the already-seen symbols.","            var seen = this.sortedSeen;","            tot_f = this.numSyms - this.seenSyms;","            if (seen[seen.length-1] === this.numSyms) { tot_f++; }","            symbol = lt_f = this.coder.decodeCulFreq(tot_f);","            for (i=0; i < seen.length && seen[i] <= symbol ; i++) {","                symbol++;","            }","        } else {","            symbol = lt_f = this.coder.decodeCulFreq(tot_f);","        }","        this.coder.decodeUpdate(sy_f, lt_f, tot_f);","        this._update(symbol, this.seenSyms);","    }","    return symbol;","};","MTFModel.prototype.encode = function(symbol) {","    // look for symbol, from most-recent to oldest","    var i, sy_f, lt_f, tot_f;","    for (i=this.seenSyms-1; i>=0; i--) {","        if (symbol === this.sym[i]) {","            // ok, found it.","            lt_f = this.prob[i];","            sy_f = this.prob[i + 1] - lt_f;","            tot_f = this.prob[this.seenSyms];","            this.coder.encodeFreq(sy_f, lt_f, tot_f);","            return this._update(symbol, i, sy_f);","        }","    }","    // couldn't find this symbol.  encode as escape.","    console.assert(symbol !== this.numSyms); // catch infinite recursion","    this.encode(this.numSyms); // guaranteed to be found in the table.","    // code symbol as literal","    sy_f = 1;","    lt_f = symbol;","    tot_f = this.numSyms;","    if (this.sortedSeen) {","        // do a slower, but more precise encoding of the literal","        // by excluding the already-seen symbols.","        var seen = this.sortedSeen;","        tot_f -= this.seenSyms;","        if (seen[seen.length-1] === this.numSyms) { tot_f++; }","        for (i=0; i < seen.length && seen[i] < symbol; i++) {","            lt_f--;","        }","    }","    this.coder.encodeFreq(sy_f, lt_f, tot_f);","    // now add symbol to the end.","    return this._update(symbol, this.seenSyms);","};","","MTFModel.MAGIC = 'mtfm';","/** Simple order-0 compressor, as self-test. */","MTFModel.compressFile = Util.compressFileHelper(MTFModel.MAGIC, function(inStream, outStream, fileSize, props, finalByte) {","  var range = new RangeCoder(outStream);","  range.encodeStart(finalByte, 1);","  var model = new MTFModel(range, (fileSize<0) ? 257 : 256);","  Util.compressWithModel(inStream, fileSize, model);","  range.encodeFinish();","}, true);","","/** Simple order-0 decompresser, as self-test. */","MTFModel.decompressFile = Util.decompressFileHelper(MTFModel.MAGIC, function(inStream, outStream, fileSize) {","  var range = new RangeCoder(inStream);","  range.decodeStart(true/*we already read the 'free' byte*/);","  var model = new MTFModel(range, (fileSize<0) ? 257 : 256);","  Util.decompressWithModel(outStream, fileSize, model);","  range.decodeFinish();","});","","return MTFModel;","});",""],"l":{"6":1,"7":1,"9":1,"10":1,"12":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"31":1,"32":0,"33":0,"36":1,"37":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"49":0,"51":1,"52":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"62":0,"64":0,"66":0,"67":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"78":0,"81":0,"82":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"102":0,"103":0,"104":0,"105":0,"108":0,"111":0,"114":1,"115":0,"116":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"133":0,"134":0,"135":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"146":0,"148":0,"149":0,"151":0,"153":1,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"162":0,"163":0,"167":0,"168":0,"170":0,"171":0,"172":0,"173":0,"176":0,"177":0,"178":0,"179":0,"180":0,"183":0,"185":0,"188":1,"190":1,"191":0,"192":0,"193":0,"194":0,"195":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"207":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/NoModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/NoModel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":57}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":14},"end":{"line":8,"column":40}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":38}}},"4":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":9},"end":{"line":13,"column":24}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":27},"end":{"line":15,"column":44}}},"6":{"name":"(anonymous_6)","line":22,"loc":{"start":{"line":22,"column":27},"end":{"line":22,"column":38}}},"7":{"name":"(anonymous_7)","line":33,"loc":{"start":{"line":33,"column":62},"end":{"line":33,"column":109}}},"8":{"name":"(anonymous_8)","line":39,"loc":{"start":{"line":39,"column":66},"end":{"line":39,"column":106}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":79}},"2":{"start":{"line":5,"column":36},"end":{"line":5,"column":77}},"3":{"start":{"line":6,"column":0},"end":{"line":46,"column":3}},"4":{"start":{"line":8,"column":0},"end":{"line":11,"column":2}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":29}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}},"7":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":65}},"9":{"start":{"line":13,"column":26},"end":{"line":13,"column":62}},"10":{"start":{"line":15,"column":0},"end":{"line":21,"column":2}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":8}},"12":{"start":{"line":17,"column":2},"end":{"line":20,"column":3}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":31}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":31}},"15":{"start":{"line":22,"column":0},"end":{"line":29,"column":2}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}},"17":{"start":{"line":24,"column":2},"end":{"line":27,"column":3}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":12}},"19":{"start":{"line":26,"column":4},"end":{"line":26,"column":38}},"20":{"start":{"line":26,"column":34},"end":{"line":26,"column":38}},"21":{"start":{"line":28,"column":2},"end":{"line":28,"column":11}},"22":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}},"23":{"start":{"line":33,"column":0},"end":{"line":38,"column":3}},"24":{"start":{"line":34,"column":4},"end":{"line":34,"column":45}},"25":{"start":{"line":35,"column":4},"end":{"line":35,"column":65}},"26":{"start":{"line":36,"column":4},"end":{"line":36,"column":54}},"27":{"start":{"line":37,"column":4},"end":{"line":37,"column":22}},"28":{"start":{"line":39,"column":0},"end":{"line":43,"column":3}},"29":{"start":{"line":40,"column":4},"end":{"line":40,"column":44}},"30":{"start":{"line":41,"column":4},"end":{"line":41,"column":65}},"31":{"start":{"line":42,"column":4},"end":{"line":42,"column":57}},"32":{"start":{"line":45,"column":0},"end":{"line":45,"column":15}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":5,"column":0}},{"start":{"line":5,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":54},"end":{"line":35,"column":57}},{"start":{"line":35,"column":60},"end":{"line":35,"column":63}}]},"4":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":54},"end":{"line":41,"column":57}},{"start":{"line":41,"column":60},"end":{"line":41,"column":63}}]}},"code":["/** Simple \"lack of model\" -- just encode the bits directly."," *  Useful especially with sparse spaces or Huffman coders where there's"," *  no obvious prediction to be made that will pay for itself."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./BitStream','./Util'],function(BitStream,Util) {","","var NoModel = function(bitstream, size) {","  this.bitstream = bitstream;","  this.bits = Util.fls(size-1);","};","NoModel.factory = function(bitstream) {","  return function(size) { return new NoModel(bitstream, size); };","};","NoModel.prototype.encode = function(symbol) {","  var i;","  for (i=this.bits-1; i>=0; i--) {","    var b = (symbol >>> i) & 1;","    this.bitstream.writeBit(b);","  }","};","NoModel.prototype.decode = function() {","  var i, r = 0;","  for (i=this.bits-1; i>=0; i--) {","    r <<= 1;","    if (this.bitstream.readBit()) r++;","  }","  return r;","};","","/** Brain-dead self-test. */","NoModel.MAGIC = 'nomo';","NoModel.compressFile = Util.compressFileHelper(NoModel.MAGIC, function(inStream, outStream, fileSize, props) {","    var bitstream = new BitStream(outStream);","    var model = new NoModel(bitstream, (fileSize<0) ? 257 : 256);","    Util.compressWithModel(inStream, fileSize, model);","    bitstream.flush();","});","NoModel.decompressFile = Util.decompressFileHelper(NoModel.MAGIC, function(inStream, outStream, fileSize) {","    var bitstream = new BitStream(inStream);","    var model = new NoModel(bitstream, (fileSize<0) ? 257 : 256);","    Util.decompressWithModel(outStream, fileSize, model);","});","","return NoModel;","});",""],"l":{"5":1,"6":1,"8":1,"9":0,"10":0,"12":1,"13":0,"15":1,"16":0,"17":0,"18":0,"19":0,"22":1,"23":0,"24":0,"25":0,"26":0,"28":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"39":1,"40":0,"41":0,"42":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/BWTC.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/BWTC.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":130},"end":{"line":4,"column":232}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":60},"end":{"line":12,"column":108}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":24},"end":{"line":25,"column":35}}},"4":{"name":"(anonymous_4)","line":109,"loc":{"start":{"line":109,"column":30},"end":{"line":109,"column":41}}},"5":{"name":"(anonymous_5)","line":141,"loc":{"start":{"line":141,"column":64},"end":{"line":141,"column":94}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":79}},"2":{"start":{"line":3,"column":36},"end":{"line":3,"column":77}},"3":{"start":{"line":4,"column":0},"end":{"line":234,"column":3}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":25}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":29}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":29}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":31}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":24}},"9":{"start":{"line":12,"column":4},"end":{"line":139,"column":13}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":45}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":42}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":26}},"13":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"14":{"start":{"line":18,"column":12},"end":{"line":18,"column":30}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":38}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":36}},"17":{"start":{"line":22,"column":8},"end":{"line":22,"column":28}},"18":{"start":{"line":24,"column":8},"end":{"line":24,"column":49}},"19":{"start":{"line":25,"column":8},"end":{"line":33,"column":10}},"20":{"start":{"line":26,"column":12},"end":{"line":26,"column":20}},"21":{"start":{"line":27,"column":12},"end":{"line":31,"column":13}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":42}},"23":{"start":{"line":29,"column":16},"end":{"line":29,"column":38}},"24":{"start":{"line":29,"column":30},"end":{"line":29,"column":36}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":34}},"26":{"start":{"line":32,"column":12},"end":{"line":32,"column":23}},"27":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"28":{"start":{"line":35,"column":8},"end":{"line":35,"column":46}},"29":{"start":{"line":36,"column":8},"end":{"line":36,"column":39}},"30":{"start":{"line":37,"column":8},"end":{"line":37,"column":55}},"31":{"start":{"line":38,"column":8},"end":{"line":40,"column":61}},"32":{"start":{"line":41,"column":8},"end":{"line":41,"column":37}},"33":{"start":{"line":42,"column":8},"end":{"line":135,"column":42}},"34":{"start":{"line":43,"column":12},"end":{"line":43,"column":33}},"35":{"start":{"line":44,"column":12},"end":{"line":44,"column":40}},"36":{"start":{"line":44,"column":32},"end":{"line":44,"column":38}},"37":{"start":{"line":47,"column":12},"end":{"line":54,"column":13}},"38":{"start":{"line":48,"column":16},"end":{"line":48,"column":44}},"39":{"start":{"line":49,"column":16},"end":{"line":49,"column":26}},"40":{"start":{"line":51,"column":16},"end":{"line":51,"column":44}},"41":{"start":{"line":52,"column":16},"end":{"line":52,"column":40}},"42":{"start":{"line":53,"column":16},"end":{"line":53,"column":46}},"43":{"start":{"line":55,"column":12},"end":{"line":55,"column":57}},"44":{"start":{"line":56,"column":12},"end":{"line":56,"column":34}},"45":{"start":{"line":58,"column":12},"end":{"line":58,"column":50}},"46":{"start":{"line":59,"column":12},"end":{"line":62,"column":13}},"47":{"start":{"line":60,"column":16},"end":{"line":60,"column":25}},"48":{"start":{"line":61,"column":16},"end":{"line":61,"column":35}},"49":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"50":{"start":{"line":64,"column":16},"end":{"line":64,"column":61}},"51":{"start":{"line":66,"column":12},"end":{"line":66,"column":27}},"52":{"start":{"line":67,"column":12},"end":{"line":79,"column":13}},"53":{"start":{"line":68,"column":16},"end":{"line":68,"column":35}},"54":{"start":{"line":69,"column":16},"end":{"line":69,"column":48}},"55":{"start":{"line":70,"column":16},"end":{"line":78,"column":17}},"56":{"start":{"line":72,"column":23},"end":{"line":78,"column":17}},"57":{"start":{"line":73,"column":20},"end":{"line":73,"column":50}},"58":{"start":{"line":75,"column":20},"end":{"line":75,"column":39}},"59":{"start":{"line":76,"column":20},"end":{"line":76,"column":57}},"60":{"start":{"line":77,"column":20},"end":{"line":77,"column":48}},"61":{"start":{"line":81,"column":12},"end":{"line":81,"column":33}},"62":{"start":{"line":82,"column":12},"end":{"line":86,"column":13}},"63":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"64":{"start":{"line":84,"column":20},"end":{"line":84,"column":42}},"65":{"start":{"line":87,"column":12},"end":{"line":87,"column":27}},"66":{"start":{"line":89,"column":12},"end":{"line":103,"column":13}},"67":{"start":{"line":90,"column":16},"end":{"line":90,"column":25}},"68":{"start":{"line":91,"column":16},"end":{"line":95,"column":17}},"69":{"start":{"line":92,"column":20},"end":{"line":94,"column":21}},"70":{"start":{"line":93,"column":24},"end":{"line":93,"column":30}},"71":{"start":{"line":96,"column":16},"end":{"line":96,"column":47}},"72":{"start":{"line":97,"column":16},"end":{"line":97,"column":25}},"73":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"74":{"start":{"line":100,"column":20},"end":{"line":100,"column":34}},"75":{"start":{"line":102,"column":16},"end":{"line":102,"column":25}},"76":{"start":{"line":105,"column":12},"end":{"line":106,"column":66}},"77":{"start":{"line":107,"column":12},"end":{"line":107,"column":75}},"78":{"start":{"line":107,"column":24},"end":{"line":107,"column":73}},"79":{"start":{"line":108,"column":12},"end":{"line":108,"column":30}},"80":{"start":{"line":109,"column":12},"end":{"line":121,"column":14}},"81":{"start":{"line":111,"column":16},"end":{"line":120,"column":17}},"82":{"start":{"line":112,"column":20},"end":{"line":118,"column":21}},"83":{"start":{"line":113,"column":24},"end":{"line":113,"column":40}},"84":{"start":{"line":114,"column":24},"end":{"line":114,"column":37}},"85":{"start":{"line":116,"column":24},"end":{"line":116,"column":40}},"86":{"start":{"line":117,"column":24},"end":{"line":117,"column":37}},"87":{"start":{"line":119,"column":20},"end":{"line":119,"column":37}},"88":{"start":{"line":122,"column":12},"end":{"line":132,"column":13}},"89":{"start":{"line":123,"column":16},"end":{"line":123,"column":25}},"90":{"start":{"line":124,"column":16},"end":{"line":131,"column":17}},"91":{"start":{"line":125,"column":20},"end":{"line":125,"column":32}},"92":{"start":{"line":127,"column":20},"end":{"line":127,"column":34}},"93":{"start":{"line":128,"column":20},"end":{"line":128,"column":38}},"94":{"start":{"line":130,"column":20},"end":{"line":130,"column":34}},"95":{"start":{"line":133,"column":12},"end":{"line":133,"column":26}},"96":{"start":{"line":137,"column":8},"end":{"line":137,"column":36}},"97":{"start":{"line":138,"column":8},"end":{"line":138,"column":31}},"98":{"start":{"line":141,"column":4},"end":{"line":231,"column":7}},"99":{"start":{"line":142,"column":8},"end":{"line":142,"column":44}},"100":{"start":{"line":143,"column":8},"end":{"line":143,"column":67}},"101":{"start":{"line":144,"column":8},"end":{"line":144,"column":45}},"102":{"start":{"line":145,"column":8},"end":{"line":145,"column":57}},"103":{"start":{"line":146,"column":8},"end":{"line":146,"column":36}},"104":{"start":{"line":147,"column":8},"end":{"line":147,"column":28}},"105":{"start":{"line":149,"column":8},"end":{"line":149,"column":49}},"106":{"start":{"line":150,"column":8},"end":{"line":150,"column":45}},"107":{"start":{"line":151,"column":8},"end":{"line":151,"column":46}},"108":{"start":{"line":152,"column":8},"end":{"line":152,"column":39}},"109":{"start":{"line":153,"column":8},"end":{"line":153,"column":55}},"110":{"start":{"line":154,"column":8},"end":{"line":156,"column":61}},"111":{"start":{"line":157,"column":8},"end":{"line":157,"column":31}},"112":{"start":{"line":158,"column":8},"end":{"line":229,"column":9}},"113":{"start":{"line":159,"column":12},"end":{"line":159,"column":58}},"114":{"start":{"line":160,"column":12},"end":{"line":160,"column":55}},"115":{"start":{"line":161,"column":12},"end":{"line":169,"column":13}},"116":{"start":{"line":162,"column":16},"end":{"line":162,"column":35}},"117":{"start":{"line":163,"column":16},"end":{"line":163,"column":26}},"118":{"start":{"line":164,"column":19},"end":{"line":169,"column":13}},"119":{"start":{"line":165,"column":16},"end":{"line":165,"column":43}},"120":{"start":{"line":166,"column":16},"end":{"line":166,"column":46}},"121":{"start":{"line":167,"column":19},"end":{"line":169,"column":13}},"122":{"start":{"line":168,"column":16},"end":{"line":168,"column":22}},"123":{"start":{"line":171,"column":12},"end":{"line":171,"column":41}},"124":{"start":{"line":173,"column":12},"end":{"line":173,"column":50}},"125":{"start":{"line":174,"column":12},"end":{"line":174,"column":27}},"126":{"start":{"line":175,"column":12},"end":{"line":188,"column":13}},"127":{"start":{"line":176,"column":16},"end":{"line":176,"column":35}},"128":{"start":{"line":177,"column":16},"end":{"line":177,"column":48}},"129":{"start":{"line":178,"column":16},"end":{"line":187,"column":17}},"130":{"start":{"line":180,"column":20},"end":{"line":180,"column":55}},"131":{"start":{"line":181,"column":23},"end":{"line":187,"column":17}},"132":{"start":{"line":182,"column":20},"end":{"line":182,"column":53}},"133":{"start":{"line":184,"column":20},"end":{"line":184,"column":53}},"134":{"start":{"line":185,"column":20},"end":{"line":185,"column":50}},"135":{"start":{"line":186,"column":20},"end":{"line":186,"column":52}},"136":{"start":{"line":190,"column":12},"end":{"line":190,"column":33}},"137":{"start":{"line":191,"column":12},"end":{"line":195,"column":13}},"138":{"start":{"line":192,"column":16},"end":{"line":194,"column":17}},"139":{"start":{"line":193,"column":20},"end":{"line":193,"column":42}},"140":{"start":{"line":196,"column":12},"end":{"line":196,"column":27}},"141":{"start":{"line":198,"column":12},"end":{"line":199,"column":66}},"142":{"start":{"line":200,"column":12},"end":{"line":200,"column":80}},"143":{"start":{"line":200,"column":24},"end":{"line":200,"column":79}},"144":{"start":{"line":201,"column":12},"end":{"line":201,"column":24}},"145":{"start":{"line":202,"column":12},"end":{"line":214,"column":13}},"146":{"start":{"line":203,"column":16},"end":{"line":203,"column":35}},"147":{"start":{"line":204,"column":16},"end":{"line":213,"column":17}},"148":{"start":{"line":205,"column":20},"end":{"line":205,"column":57}},"149":{"start":{"line":205,"column":44},"end":{"line":205,"column":55}},"150":{"start":{"line":206,"column":20},"end":{"line":206,"column":29}},"151":{"start":{"line":207,"column":23},"end":{"line":213,"column":17}},"152":{"start":{"line":208,"column":20},"end":{"line":208,"column":69}},"153":{"start":{"line":208,"column":44},"end":{"line":208,"column":55}},"154":{"start":{"line":208,"column":56},"end":{"line":208,"column":67}},"155":{"start":{"line":209,"column":20},"end":{"line":209,"column":29}},"156":{"start":{"line":211,"column":20},"end":{"line":211,"column":28}},"157":{"start":{"line":212,"column":20},"end":{"line":212,"column":33}},"158":{"start":{"line":216,"column":12},"end":{"line":224,"column":13}},"159":{"start":{"line":217,"column":16},"end":{"line":217,"column":25}},"160":{"start":{"line":218,"column":16},"end":{"line":218,"column":32}},"161":{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},"162":{"start":{"line":221,"column":20},"end":{"line":221,"column":34}},"163":{"start":{"line":223,"column":16},"end":{"line":223,"column":25}},"164":{"start":{"line":226,"column":12},"end":{"line":226,"column":57}},"165":{"start":{"line":228,"column":12},"end":{"line":228,"column":39}},"166":{"start":{"line":230,"column":8},"end":{"line":230,"column":31}},"167":{"start":{"line":233,"column":4},"end":{"line":233,"column":16}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":36}},{"start":{"line":17,"column":40},"end":{"line":17,"column":50}},{"start":{"line":17,"column":54},"end":{"line":17,"column":64}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":16},"end":{"line":29,"column":16}},{"start":{"line":29,"column":16},"end":{"line":29,"column":16}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":12}},{"start":{"line":44,"column":12},"end":{"line":44,"column":12}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":16}},{"start":{"line":70,"column":16},"end":{"line":70,"column":16}}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":20},"end":{"line":70,"column":41}},{"start":{"line":70,"column":45},"end":{"line":70,"column":73}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":23},"end":{"line":72,"column":23}},{"start":{"line":72,"column":23},"end":{"line":72,"column":23}}]},"10":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":34},"end":{"line":76,"column":35}},{"start":{"line":76,"column":38},"end":{"line":76,"column":56}}]},"11":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":51},"end":{"line":76,"column":52}},{"start":{"line":76,"column":55},"end":{"line":76,"column":56}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":16}},{"start":{"line":83,"column":16},"end":{"line":83,"column":16}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":20},"end":{"line":92,"column":20}},{"start":{"line":92,"column":20},"end":{"line":92,"column":20}}]},"14":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"15":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":20},"end":{"line":112,"column":20}},{"start":{"line":112,"column":20},"end":{"line":112,"column":20}}]},"16":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":16},"end":{"line":124,"column":16}},{"start":{"line":124,"column":16},"end":{"line":124,"column":16}}]},"17":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":23},"end":{"line":145,"column":37}},{"start":{"line":145,"column":41},"end":{"line":145,"column":55}}]},"18":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"19":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":19},"end":{"line":164,"column":19}},{"start":{"line":164,"column":19},"end":{"line":164,"column":19}}]},"20":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":19},"end":{"line":167,"column":19}},{"start":{"line":167,"column":19},"end":{"line":167,"column":19}}]},"21":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":16},"end":{"line":178,"column":16}},{"start":{"line":178,"column":16},"end":{"line":178,"column":16}}]},"22":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":20},"end":{"line":178,"column":41}},{"start":{"line":178,"column":45},"end":{"line":178,"column":73}}]},"23":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":23},"end":{"line":181,"column":23}},{"start":{"line":181,"column":23},"end":{"line":181,"column":23}}]},"24":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":43},"end":{"line":186,"column":47}},{"start":{"line":186,"column":50},"end":{"line":186,"column":51}}]},"25":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":16},"end":{"line":192,"column":16}},{"start":{"line":192,"column":16},"end":{"line":192,"column":16}}]},"26":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":12}},{"start":{"line":200,"column":12},"end":{"line":200,"column":12}}]},"27":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":16},"end":{"line":204,"column":16}},{"start":{"line":204,"column":16},"end":{"line":204,"column":16}}]},"28":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":23},"end":{"line":207,"column":23}},{"start":{"line":207,"column":23},"end":{"line":207,"column":23}}]}},"code":["/* A simple bzip-like BWT compressor with a range encoder; written as a"," * self-test of the BWT package. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./freeze','./BWT','./DefSumModel','./FenwickModel','./LogDistanceModel','./NoModel','./RangeCoder','./Stream','./Util'], function(freeze, BWT, DefSumModel, FenwickModel, LogDistanceModel, NoModel, RangeCoder, Stream, Util) {","    var EOF = Stream.EOF;","","    var F_PROB_MAX  = 0xFF00;","    var F_PROB_INCR = 0x0100;","","    BWTC = Object.create(null);","    BWTC.MAGIC = \"bwtc\";","    BWTC.compressFile = Util.compressFileHelper(BWTC.MAGIC, function(input, output, size, props, finalByte) {","        var encoder = new RangeCoder(output);","        encoder.encodeStart(finalByte, 1);","","        var blockSize = 9;","        if (typeof(props)==='number' && props >= 1 && props <= 9) {","            blockSize = props;","        }","        encoder.encodeByte(blockSize);","        var fast = (blockSize <= 5);","        blockSize *= 100000;","","        var block = Util.makeU8Buffer(blockSize);","        var readBlock = function() {","            var pos;","            for (pos=0; pos < blockSize; ) {","                var ch = input.readByte();","                if (ch < 0) { break; }","                block[pos++] = ch;","            }","            return pos;","        };","        var U = Util.makeU8Buffer(blockSize);","        var A = Util.makeS32Buffer(blockSize);","        var M = Util.makeU8Buffer(256); // move to front array","        var bitModelFactory = NoModel.factory(encoder);","        var lenModel = new LogDistanceModel(blockSize, 0,","                                            bitModelFactory,","                                            bitModelFactory);","        var length, b, c, pidx, i, j;","        do {","            length = readBlock();","            if (length === 0) { break; }","            // indicate that there's another block comin'","            // and encode the length of the block if necessary","            if (length === block.length) {","                encoder.encodeFreq(1, 0, 3); // \"full size block\"","                b = block;","            } else {","                encoder.encodeFreq(1, 1, 3); // \"short block\"","                lenModel.encode(length);","                b = block.subarray(0, length);","            }","            pidx = BWT.bwtransform(b, U, A, length, 256);","            lenModel.encode(pidx); // starting index","            // encode the alphabet subset used","            var useTree = Util.makeU16Buffer(512);","            for (i=0; i<length; i++) {","                c = U[i];","                useTree[256+c] = 1;","            }","            for (i=255; i>0; i--) { // sum all the way up the tree","                useTree[i] = useTree[2*i] + useTree[2*i + 1];","            }","            useTree[0] = 1; // sentinel","            for (i=1; i<512; i++) {","                var parent = i>>>1;","                var full = 1 << (9-Util.fls(i));","                if (useTree[parent] === 0 || useTree[parent] === (full*2)) {","                    /* already known full/empty */","                } else if (i >= 256) {","                    encoder.encodeBit(useTree[i]); // leaf node","                } else {","                    var v = useTree[i];","                    v = (v===0) ? 0 : (v===full) ? 2 : 1;","                    encoder.encodeFreq(1, v, 3);","                }","            }","            // remap symbols to this subset","            var alphabetSize = 0;","            for (i=0; i<256; i++) {","                if (useTree[256+i]) { // symbol in use","                    M[alphabetSize++] = i;","                }","            }","            useTree = null;","            // MTF encoding of U","            for (i=0; i<length; i++) {","                c = U[i];","                for (j=0; j<alphabetSize; j++) {","                    if (M[j] === c) {","                        break;","                    }","                }","                console.assert(j<alphabetSize);","                U[i] = j;","                // move to front","                for (; j>0; j--) {","                    M[j] = M[j-1];","                }","                M[0] = c;","            }","            // RLE/range encoding","            var model = new FenwickModel(encoder, alphabetSize+1,","                                         F_PROB_MAX, F_PROB_INCR);","            if (fast) { model = new DefSumModel(encoder, alphabetSize+1); }","            var runLength = 0;","            var emitLastRun = function() {","                // binary encode runs of zeros","                while (runLength !== 0) {","                    if (runLength&1) {","                        model.encode(0); // RUNA","                        runLength-=1;","                    } else {","                        model.encode(1); // RUNB","                        runLength-=2;","                    }","                    runLength >>>= 1;","                }","            };","            for (i=0; i<length; i++) {","                c = U[i];","                if (c === 0) {","                    runLength++;","                } else {","                    emitLastRun();","                    model.encode(c+1);","                    // reset for next","                    runLength = 0;","                }","            }","            emitLastRun();","            // done with this block!","        } while (length === block.length);","","        encoder.encodeFreq(1, 2, 3); // \"no more blocks\"","        encoder.encodeFinish();","    }, true);","","    BWTC.decompressFile = Util.decompressFileHelper(BWTC.MAGIC, function(input, output, size) {","        var decoder = new RangeCoder(input);","        decoder.decodeStart(true/* already read the extra byte */);","        var blockSize = decoder.decodeByte();","        console.assert(blockSize >= 1 && blockSize <= 9);","        var fast = (blockSize <= 5);","        blockSize *= 100000;","","        var block = Util.makeU8Buffer(blockSize);","        var U = Util.makeU8Buffer(blockSize);","        var A = Util.makeS32Buffer(blockSize);","        var M = Util.makeU8Buffer(256); // move to front array","        var bitModelFactory = NoModel.factory(decoder);","        var lenModel = new LogDistanceModel(blockSize, 0,","                                            bitModelFactory,","                                            bitModelFactory);","        var b, length, i, j, c;","        while (true) {","            var blockIndicator = decoder.decodeCulFreq(3);","            decoder.decodeUpdate(1, blockIndicator, 3);","            if (blockIndicator === 0) { // full-length block","                length = blockSize;","                b = block;","            } else if (blockIndicator === 1) { // short block","                length = lenModel.decode();","                b = block.subarray(0, length);","            } else if (blockIndicator === 2) { // all done, no more blocks","                break;","            }","            // read starting index for unBWT","            var pidx = lenModel.decode();","            // decode the alphabet subset used","            var useTree = Util.makeU16Buffer(512);","            useTree[0] = 1; // sentinel","            for (i=1; i<512; i++) {","                var parent = i>>>1;","                var full = 1 << (9-Util.fls(i));","                if (useTree[parent] === 0 || useTree[parent] === (full*2)) {","                    /* already known full/empty */","                    useTree[i] = useTree[parent] >>> 1;","                } else if (i >= 256) {","                    useTree[i] = decoder.decodeBit(); // leaf node","                } else {","                    var v = decoder.decodeCulFreq(3);","                    decoder.decodeUpdate(1, v, 3);","                    useTree[i] = (v===2) ? full : v;","                }","            }","            // remap symbols to this subset","            var alphabetSize = 0;","            for (i=0; i<256; i++) {","                if (useTree[256+i]) { // symbol in use","                    M[alphabetSize++] = i;","                }","            }","            useTree = null;","            // RLE/range decoding","            var model = new FenwickModel(decoder, alphabetSize+1,","                                         F_PROB_MAX, F_PROB_INCR);","            if (fast) { model = new DefSumModel(decoder, alphabetSize+1, true);}","            var val = 1; // repeat count","            for (i=0; i<length; ) {","                c = model.decode();","                if (c===0) {","                    for (j=0; j<val; j++) { b[i++] = 0; }","                    val *= 2;","                } else if (c===1) {","                    for (j=0; j<val; j++) { b[i++] = 0; b[i++] = 0; }","                    val *= 2;","                } else {","                    val = 1;","                    b[i++] = c-1;","                }","            }","            // MTF decode","            for (i=0; i<length; i++) {","                j = b[i];","                b[i] = c = M[j];","                // move to front","                for (; j>0; j--) {","                    M[j] = M[j-1];","                }","                M[0] = c;","            }","            // unBWT","            BWT.unbwtransform(block, U, A, length, pidx);","            // emit!","            output.write(U, 0, length);","        }","        decoder.decodeFinish();","    });","","    return BWTC;","});",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":0,"14":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"41":0,"42":0,"43":0,"44":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"75":0,"76":0,"77":0,"81":0,"82":0,"83":0,"84":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"96":0,"97":0,"99":0,"100":0,"102":0,"105":0,"107":0,"108":0,"109":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"119":0,"122":0,"123":0,"124":0,"125":0,"127":0,"128":0,"130":0,"133":0,"137":0,"138":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"171":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"180":0,"181":0,"182":0,"184":0,"185":0,"186":0,"190":0,"191":0,"192":0,"193":0,"196":0,"198":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"211":0,"212":0,"216":0,"217":0,"218":0,"220":0,"221":0,"223":0,"226":0,"228":0,"230":0,"233":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/LogDistanceModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/LogDistanceModel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":18},"end":{"line":3,"column":32}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":27},"end":{"line":9,"column":60}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":40},"end":{"line":24,"column":59}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":40},"end":{"line":37,"column":51}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":46,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":21,"column":6}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":14}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":36}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":45}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":78}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":32}},"10":{"start":{"line":17,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":32}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":71}},"13":{"start":{"line":24,"column":4},"end":{"line":36,"column":6}},"14":{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":69}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":19}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":44}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":55}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":67}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":58}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":52}},"23":{"start":{"line":37,"column":4},"end":{"line":44,"column":6}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":74}},"25":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"26":{"start":{"line":40,"column":12},"end":{"line":40,"column":30}},"27":{"start":{"line":42,"column":8},"end":{"line":42,"column":59}},"28":{"start":{"line":43,"column":8},"end":{"line":43,"column":44}},"29":{"start":{"line":45,"column":4},"end":{"line":45,"column":28}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":27},"end":{"line":12,"column":39}},{"start":{"line":12,"column":43},"end":{"line":12,"column":44}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]}},"code":["/** Simple (log n)(n) distance model. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./Util'],function(Util){","","    // lengthBitsModelFactory will be called with arguments 2, 4, 8, 16, etc","    // and must return an appropriate model or coder.","    var LogDistanceModel = function(size, extraStates,","                                    lgDistanceModelFactory,","                                    lengthBitsModelFactory) {","        var i;","        var bits = Util.fls(size-1);","        this.extraStates = +extraStates || 0;","        this.lgDistanceModel = lgDistanceModelFactory(1 + bits + extraStates);","        // this.distanceModel[n] used for distances which are n-bits long,","        // but only n-1 bits are encoded: the top bit is known to be one.","        this.distanceModel = [];","        for (i=2 ; i <= bits; i++) {","            var numBits = i - 1;","            this.distanceModel[i] = lengthBitsModelFactory(1<<numBits);","        }","    };","    /* you can give this model arguments between 0 and (size-1), or else","       a negative argument which is one of the 'extra states'. */","    LogDistanceModel.prototype.encode = function(distance) {","        if (distance < 2) { // small distance or an 'extra state'","            this.lgDistanceModel.encode(distance + this.extraStates);","            return;","        }","        var lgDistance = Util.fls(distance);","        console.assert(distance & (1<<(lgDistance-1))); // top bit is set","        console.assert(lgDistance >= 2);","        this.lgDistanceModel.encode(lgDistance + this.extraStates);","        // now encode the rest of the bits.","        var rest = distance & ((1 << (lgDistance-1)) - 1);","        this.distanceModel[lgDistance].encode(rest);","    };","    LogDistanceModel.prototype.decode = function() {","        var lgDistance = this.lgDistanceModel.decode() - this.extraStates;","        if (lgDistance < 2) {","            return lgDistance; // this is a small distance or an 'extra state'","        }","        var rest = this.distanceModel[lgDistance].decode();","        return (1 << (lgDistance-1)) + rest;","    };","    return LogDistanceModel;","});",""],"l":{"2":1,"3":1,"7":1,"10":0,"11":0,"12":0,"13":0,"16":0,"17":0,"18":0,"19":0,"24":1,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":1,"38":0,"39":0,"40":0,"42":0,"43":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Bzip2.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Bzip2.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":1,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":1,"357":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":1,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":1,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":1,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":1,"526":1,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":1,"557":1,"558":1,"559":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":38,"loc":{"start":{"line":38,"column":94},"end":{"line":38,"column":166}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":10},"end":{"line":53,"column":33}}},"3":{"name":"(anonymous_3)","line":82,"loc":{"start":{"line":82,"column":13},"end":{"line":82,"column":41}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":13},"end":{"line":90,"column":49}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":31},"end":{"line":95,"column":42}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":33},"end":{"line":105,"column":69}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":35},"end":{"line":125,"column":46}}},"8":{"name":"(anonymous_8)","line":405,"loc":{"start":{"line":405,"column":32},"end":{"line":405,"column":60}}},"9":{"name":"(anonymous_9)","line":454,"loc":{"start":{"line":454,"column":16},"end":{"line":454,"column":53}}},"10":{"name":"(anonymous_10)","line":482,"loc":{"start":{"line":482,"column":21},"end":{"line":482,"column":50}}},"11":{"name":"(anonymous_11)","line":508,"loc":{"start":{"line":508,"column":15},"end":{"line":508,"column":54}}},"12":{"name":"(anonymous_12)","line":513,"loc":{"start":{"line":513,"column":25},"end":{"line":513,"column":36}}},"13":{"name":"(anonymous_13)","line":517,"loc":{"start":{"line":517,"column":21},"end":{"line":517,"column":32}}},"14":{"name":"(anonymous_14)","line":523,"loc":{"start":{"line":523,"column":27},"end":{"line":523,"column":38}}},"15":{"name":"(anonymous_15)","line":551,"loc":{"start":{"line":551,"column":20},"end":{"line":551,"column":49}}},"16":{"name":"(anonymous_16)","line":569,"loc":{"start":{"line":569,"column":18},"end":{"line":569,"column":32}}},"17":{"name":"(anonymous_17)","line":570,"loc":{"start":{"line":570,"column":34},"end":{"line":570,"column":46}}},"18":{"name":"(anonymous_18)","line":581,"loc":{"start":{"line":581,"column":43},"end":{"line":581,"column":54}}},"19":{"name":"(anonymous_19)","line":588,"loc":{"start":{"line":588,"column":14},"end":{"line":588,"column":28}}},"20":{"name":"(anonymous_20)","line":602,"loc":{"start":{"line":602,"column":31},"end":{"line":602,"column":63}}},"21":{"name":"(anonymous_21)","line":610,"loc":{"start":{"line":610,"column":31},"end":{"line":610,"column":51}}},"22":{"name":"(anonymous_22)","line":631,"loc":{"start":{"line":631,"column":33},"end":{"line":631,"column":61}}},"23":{"name":"(anonymous_23)","line":636,"loc":{"start":{"line":636,"column":16},"end":{"line":636,"column":55}}},"24":{"name":"(anonymous_24)","line":671,"loc":{"start":{"line":671,"column":22},"end":{"line":671,"column":57}}},"25":{"name":"(anonymous_25)","line":685,"loc":{"start":{"line":685,"column":28},"end":{"line":686,"column":62}}},"26":{"name":"(anonymous_26)","line":710,"loc":{"start":{"line":710,"column":16},"end":{"line":710,"column":33}}},"27":{"name":"(anonymous_27)","line":735,"loc":{"start":{"line":735,"column":20},"end":{"line":735,"column":55}}},"28":{"name":"(anonymous_28)","line":779,"loc":{"start":{"line":779,"column":13},"end":{"line":779,"column":25}}},"29":{"name":"(anonymous_29)","line":783,"loc":{"start":{"line":783,"column":20},"end":{"line":783,"column":31}}},"30":{"name":"(anonymous_30)","line":879,"loc":{"start":{"line":879,"column":21},"end":{"line":879,"column":58}}}},"statementMap":{"1":{"start":{"line":37,"column":0},"end":{"line":37,"column":79}},"2":{"start":{"line":37,"column":36},"end":{"line":37,"column":77}},"3":{"start":{"line":38,"column":0},"end":{"line":936,"column":3}},"4":{"start":{"line":40,"column":0},"end":{"line":40,"column":26}},"5":{"start":{"line":41,"column":0},"end":{"line":41,"column":22}},"6":{"start":{"line":42,"column":0},"end":{"line":42,"column":20}},"7":{"start":{"line":43,"column":0},"end":{"line":43,"column":20}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":19}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":19}},"10":{"start":{"line":46,"column":0},"end":{"line":46,"column":20}},"11":{"start":{"line":48,"column":0},"end":{"line":48,"column":29}},"12":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}},"13":{"start":{"line":51,"column":0},"end":{"line":51,"column":21}},"14":{"start":{"line":53,"column":0},"end":{"line":60,"column":2}},"15":{"start":{"line":54,"column":2},"end":{"line":54,"column":28}},"16":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":26}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":17}},"19":{"start":{"line":59,"column":2},"end":{"line":59,"column":13}},"20":{"start":{"line":62,"column":0},"end":{"line":72,"column":2}},"21":{"start":{"line":73,"column":0},"end":{"line":73,"column":23}},"22":{"start":{"line":74,"column":0},"end":{"line":74,"column":63}},"23":{"start":{"line":75,"column":0},"end":{"line":75,"column":59}},"24":{"start":{"line":76,"column":0},"end":{"line":76,"column":66}},"25":{"start":{"line":77,"column":0},"end":{"line":77,"column":67}},"26":{"start":{"line":78,"column":0},"end":{"line":78,"column":56}},"27":{"start":{"line":79,"column":0},"end":{"line":79,"column":59}},"28":{"start":{"line":80,"column":0},"end":{"line":80,"column":86}},"29":{"start":{"line":82,"column":0},"end":{"line":88,"column":2}},"30":{"start":{"line":83,"column":2},"end":{"line":83,"column":53}},"31":{"start":{"line":84,"column":2},"end":{"line":84,"column":43}},"32":{"start":{"line":84,"column":19},"end":{"line":84,"column":41}},"33":{"start":{"line":85,"column":2},"end":{"line":85,"column":29}},"34":{"start":{"line":86,"column":2},"end":{"line":86,"column":23}},"35":{"start":{"line":87,"column":2},"end":{"line":87,"column":10}},"36":{"start":{"line":90,"column":0},"end":{"line":94,"column":2}},"37":{"start":{"line":91,"column":2},"end":{"line":91,"column":58}},"38":{"start":{"line":93,"column":2},"end":{"line":93,"column":48}},"39":{"start":{"line":95,"column":0},"end":{"line":103,"column":2}},"40":{"start":{"line":96,"column":2},"end":{"line":96,"column":42}},"41":{"start":{"line":97,"column":2},"end":{"line":100,"column":3}},"42":{"start":{"line":98,"column":4},"end":{"line":98,"column":25}},"43":{"start":{"line":99,"column":4},"end":{"line":99,"column":17}},"44":{"start":{"line":101,"column":2},"end":{"line":101,"column":30}},"45":{"start":{"line":102,"column":2},"end":{"line":102,"column":14}},"46":{"start":{"line":105,"column":0},"end":{"line":124,"column":2}},"47":{"start":{"line":107,"column":2},"end":{"line":107,"column":33}},"48":{"start":{"line":108,"column":2},"end":{"line":110,"column":43}},"49":{"start":{"line":110,"column":4},"end":{"line":110,"column":43}},"50":{"start":{"line":112,"column":2},"end":{"line":112,"column":28}},"51":{"start":{"line":113,"column":2},"end":{"line":114,"column":52}},"52":{"start":{"line":114,"column":4},"end":{"line":114,"column":52}},"53":{"start":{"line":116,"column":2},"end":{"line":116,"column":43}},"54":{"start":{"line":120,"column":2},"end":{"line":120,"column":33}},"55":{"start":{"line":121,"column":2},"end":{"line":121,"column":22}},"56":{"start":{"line":122,"column":2},"end":{"line":122,"column":35}},"57":{"start":{"line":123,"column":2},"end":{"line":123,"column":21}},"58":{"start":{"line":125,"column":0},"end":{"line":398,"column":2}},"59":{"start":{"line":126,"column":2},"end":{"line":126,"column":14}},"60":{"start":{"line":127,"column":2},"end":{"line":127,"column":27}},"61":{"start":{"line":131,"column":2},"end":{"line":131,"column":30}},"62":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"63":{"start":{"line":133,"column":4},"end":{"line":133,"column":17}},"64":{"start":{"line":135,"column":2},"end":{"line":136,"column":30}},"65":{"start":{"line":136,"column":4},"end":{"line":136,"column":30}},"66":{"start":{"line":137,"column":2},"end":{"line":137,"column":44}},"67":{"start":{"line":138,"column":2},"end":{"line":139,"column":75}},"68":{"start":{"line":143,"column":2},"end":{"line":144,"column":31}},"69":{"start":{"line":144,"column":4},"end":{"line":144,"column":31}},"70":{"start":{"line":145,"column":2},"end":{"line":145,"column":40}},"71":{"start":{"line":146,"column":2},"end":{"line":147,"column":61}},"72":{"start":{"line":147,"column":4},"end":{"line":147,"column":61}},"73":{"start":{"line":153,"column":2},"end":{"line":153,"column":30}},"74":{"start":{"line":154,"column":2},"end":{"line":154,"column":55}},"75":{"start":{"line":155,"column":2},"end":{"line":163,"column":3}},"76":{"start":{"line":156,"column":4},"end":{"line":162,"column":5}},"77":{"start":{"line":157,"column":6},"end":{"line":157,"column":21}},"78":{"start":{"line":158,"column":6},"end":{"line":158,"column":30}},"79":{"start":{"line":159,"column":6},"end":{"line":161,"column":40}},"80":{"start":{"line":160,"column":8},"end":{"line":161,"column":40}},"81":{"start":{"line":161,"column":10},"end":{"line":161,"column":40}},"82":{"start":{"line":166,"column":2},"end":{"line":166,"column":38}},"83":{"start":{"line":167,"column":2},"end":{"line":168,"column":27}},"84":{"start":{"line":168,"column":4},"end":{"line":168,"column":27}},"85":{"start":{"line":173,"column":2},"end":{"line":173,"column":39}},"86":{"start":{"line":174,"column":2},"end":{"line":175,"column":27}},"87":{"start":{"line":175,"column":4},"end":{"line":175,"column":27}},"88":{"start":{"line":177,"column":2},"end":{"line":177,"column":41}},"89":{"start":{"line":178,"column":2},"end":{"line":179,"column":21}},"90":{"start":{"line":179,"column":4},"end":{"line":179,"column":21}},"91":{"start":{"line":181,"column":2},"end":{"line":181,"column":48}},"92":{"start":{"line":183,"column":2},"end":{"line":189,"column":3}},"93":{"start":{"line":185,"column":4},"end":{"line":186,"column":50}},"94":{"start":{"line":186,"column":6},"end":{"line":186,"column":50}},"95":{"start":{"line":186,"column":27},"end":{"line":186,"column":50}},"96":{"start":{"line":188,"column":4},"end":{"line":188,"column":37}},"97":{"start":{"line":193,"column":2},"end":{"line":193,"column":30}},"98":{"start":{"line":194,"column":2},"end":{"line":194,"column":28}},"99":{"start":{"line":195,"column":2},"end":{"line":275,"column":3}},"100":{"start":{"line":196,"column":4},"end":{"line":196,"column":94}},"101":{"start":{"line":200,"column":4},"end":{"line":200,"column":27}},"102":{"start":{"line":201,"column":4},"end":{"line":214,"column":5}},"103":{"start":{"line":202,"column":6},"end":{"line":212,"column":7}},"104":{"start":{"line":203,"column":8},"end":{"line":203,"column":66}},"105":{"start":{"line":203,"column":43},"end":{"line":203,"column":66}},"106":{"start":{"line":206,"column":8},"end":{"line":207,"column":16}},"107":{"start":{"line":207,"column":10},"end":{"line":207,"column":16}},"108":{"start":{"line":208,"column":8},"end":{"line":211,"column":14}},"109":{"start":{"line":209,"column":10},"end":{"line":209,"column":14}},"110":{"start":{"line":211,"column":10},"end":{"line":211,"column":14}},"111":{"start":{"line":213,"column":6},"end":{"line":213,"column":20}},"112":{"start":{"line":217,"column":4},"end":{"line":217,"column":24}},"113":{"start":{"line":218,"column":4},"end":{"line":218,"column":32}},"114":{"start":{"line":219,"column":4},"end":{"line":224,"column":5}},"115":{"start":{"line":220,"column":6},"end":{"line":223,"column":27}},"116":{"start":{"line":221,"column":8},"end":{"line":221,"column":27}},"117":{"start":{"line":222,"column":11},"end":{"line":223,"column":27}},"118":{"start":{"line":223,"column":8},"end":{"line":223,"column":27}},"119":{"start":{"line":236,"column":4},"end":{"line":236,"column":18}},"120":{"start":{"line":237,"column":4},"end":{"line":237,"column":26}},"121":{"start":{"line":238,"column":4},"end":{"line":238,"column":55}},"122":{"start":{"line":239,"column":4},"end":{"line":239,"column":62}},"123":{"start":{"line":240,"column":4},"end":{"line":240,"column":61}},"124":{"start":{"line":241,"column":4},"end":{"line":241,"column":29}},"125":{"start":{"line":242,"column":4},"end":{"line":242,"column":29}},"126":{"start":{"line":244,"column":4},"end":{"line":244,"column":15}},"127":{"start":{"line":245,"column":4},"end":{"line":250,"column":5}},"128":{"start":{"line":246,"column":6},"end":{"line":246,"column":38}},"129":{"start":{"line":247,"column":6},"end":{"line":249,"column":37}},"130":{"start":{"line":248,"column":8},"end":{"line":249,"column":37}},"131":{"start":{"line":249,"column":10},"end":{"line":249,"column":37}},"132":{"start":{"line":252,"column":4},"end":{"line":253,"column":24}},"133":{"start":{"line":253,"column":6},"end":{"line":253,"column":24}},"134":{"start":{"line":258,"column":4},"end":{"line":258,"column":15}},"135":{"start":{"line":259,"column":4},"end":{"line":271,"column":5}},"136":{"start":{"line":260,"column":6},"end":{"line":260,"column":20}},"137":{"start":{"line":267,"column":6},"end":{"line":267,"column":33}},"138":{"start":{"line":268,"column":6},"end":{"line":268,"column":15}},"139":{"start":{"line":269,"column":6},"end":{"line":269,"column":19}},"140":{"start":{"line":270,"column":6},"end":{"line":270,"column":36}},"141":{"start":{"line":272,"column":4},"end":{"line":272,"column":50}},"142":{"start":{"line":273,"column":4},"end":{"line":273,"column":51}},"143":{"start":{"line":274,"column":4},"end":{"line":274,"column":30}},"144":{"start":{"line":281,"column":2},"end":{"line":281,"column":42}},"145":{"start":{"line":282,"column":2},"end":{"line":283,"column":21}},"146":{"start":{"line":283,"column":4},"end":{"line":283,"column":21}},"147":{"start":{"line":285,"column":2},"end":{"line":285,"column":50}},"148":{"start":{"line":286,"column":2},"end":{"line":286,"column":59}},"149":{"start":{"line":287,"column":2},"end":{"line":287,"column":15}},"150":{"start":{"line":288,"column":2},"end":{"line":361,"column":3}},"151":{"start":{"line":290,"column":4},"end":{"line":294,"column":5}},"152":{"start":{"line":291,"column":6},"end":{"line":291,"column":32}},"153":{"start":{"line":292,"column":6},"end":{"line":292,"column":61}},"154":{"start":{"line":292,"column":36},"end":{"line":292,"column":59}},"155":{"start":{"line":293,"column":6},"end":{"line":293,"column":47}},"156":{"start":{"line":296,"column":4},"end":{"line":296,"column":24}},"157":{"start":{"line":297,"column":4},"end":{"line":297,"column":27}},"158":{"start":{"line":298,"column":4},"end":{"line":303,"column":5}},"159":{"start":{"line":299,"column":6},"end":{"line":299,"column":58}},"160":{"start":{"line":299,"column":33},"end":{"line":299,"column":56}},"161":{"start":{"line":300,"column":6},"end":{"line":301,"column":14}},"162":{"start":{"line":301,"column":8},"end":{"line":301,"column":14}},"163":{"start":{"line":302,"column":6},"end":{"line":302,"column":40}},"164":{"start":{"line":305,"column":4},"end":{"line":305,"column":26}},"165":{"start":{"line":306,"column":4},"end":{"line":306,"column":62}},"166":{"start":{"line":306,"column":37},"end":{"line":306,"column":60}},"167":{"start":{"line":307,"column":4},"end":{"line":307,"column":38}},"168":{"start":{"line":312,"column":4},"end":{"line":331,"column":5}},"169":{"start":{"line":314,"column":6},"end":{"line":317,"column":7}},"170":{"start":{"line":315,"column":8},"end":{"line":315,"column":19}},"171":{"start":{"line":316,"column":8},"end":{"line":316,"column":14}},"172":{"start":{"line":325,"column":6},"end":{"line":328,"column":24}},"173":{"start":{"line":326,"column":8},"end":{"line":326,"column":20}},"174":{"start":{"line":328,"column":8},"end":{"line":328,"column":24}},"175":{"start":{"line":329,"column":6},"end":{"line":329,"column":19}},"176":{"start":{"line":330,"column":6},"end":{"line":330,"column":15}},"177":{"start":{"line":336,"column":4},"end":{"line":343,"column":5}},"178":{"start":{"line":337,"column":6},"end":{"line":337,"column":17}},"179":{"start":{"line":338,"column":6},"end":{"line":338,"column":68}},"180":{"start":{"line":338,"column":43},"end":{"line":338,"column":66}},"181":{"start":{"line":339,"column":6},"end":{"line":339,"column":35}},"182":{"start":{"line":340,"column":6},"end":{"line":340,"column":25}},"183":{"start":{"line":341,"column":6},"end":{"line":342,"column":31}},"184":{"start":{"line":342,"column":8},"end":{"line":342,"column":31}},"185":{"start":{"line":345,"column":4},"end":{"line":346,"column":12}},"186":{"start":{"line":346,"column":6},"end":{"line":346,"column":12}},"187":{"start":{"line":354,"column":4},"end":{"line":354,"column":63}},"188":{"start":{"line":354,"column":38},"end":{"line":354,"column":61}},"189":{"start":{"line":355,"column":4},"end":{"line":355,"column":20}},"190":{"start":{"line":356,"column":4},"end":{"line":356,"column":27}},"191":{"start":{"line":357,"column":4},"end":{"line":357,"column":23}},"192":{"start":{"line":359,"column":4},"end":{"line":359,"column":20}},"193":{"start":{"line":360,"column":4},"end":{"line":360,"column":27}},"194":{"start":{"line":368,"column":2},"end":{"line":368,"column":78}},"195":{"start":{"line":368,"column":53},"end":{"line":368,"column":76}},"196":{"start":{"line":370,"column":2},"end":{"line":370,"column":8}},"197":{"start":{"line":371,"column":2},"end":{"line":375,"column":3}},"198":{"start":{"line":372,"column":4},"end":{"line":372,"column":25}},"199":{"start":{"line":373,"column":4},"end":{"line":373,"column":21}},"200":{"start":{"line":374,"column":4},"end":{"line":374,"column":10}},"201":{"start":{"line":377,"column":2},"end":{"line":381,"column":3}},"202":{"start":{"line":378,"column":4},"end":{"line":378,"column":24}},"203":{"start":{"line":379,"column":4},"end":{"line":379,"column":36}},"204":{"start":{"line":380,"column":4},"end":{"line":380,"column":20}},"205":{"start":{"line":385,"column":2},"end":{"line":385,"column":36}},"206":{"start":{"line":386,"column":2},"end":{"line":391,"column":3}},"207":{"start":{"line":387,"column":4},"end":{"line":387,"column":28}},"208":{"start":{"line":388,"column":4},"end":{"line":388,"column":27}},"209":{"start":{"line":389,"column":4},"end":{"line":389,"column":14}},"210":{"start":{"line":390,"column":4},"end":{"line":390,"column":13}},"211":{"start":{"line":392,"column":2},"end":{"line":392,"column":22}},"212":{"start":{"line":393,"column":2},"end":{"line":393,"column":30}},"213":{"start":{"line":394,"column":2},"end":{"line":394,"column":30}},"214":{"start":{"line":395,"column":2},"end":{"line":395,"column":22}},"215":{"start":{"line":397,"column":2},"end":{"line":397,"column":14}},"216":{"start":{"line":405,"column":0},"end":{"line":448,"column":2}},"217":{"start":{"line":406,"column":4},"end":{"line":406,"column":34}},"218":{"start":{"line":411,"column":2},"end":{"line":411,"column":40}},"219":{"start":{"line":411,"column":29},"end":{"line":411,"column":38}},"220":{"start":{"line":413,"column":2},"end":{"line":413,"column":19}},"221":{"start":{"line":414,"column":2},"end":{"line":414,"column":73}},"222":{"start":{"line":415,"column":2},"end":{"line":415,"column":64}},"223":{"start":{"line":416,"column":2},"end":{"line":416,"column":26}},"224":{"start":{"line":418,"column":2},"end":{"line":439,"column":3}},"225":{"start":{"line":419,"column":4},"end":{"line":419,"column":16}},"226":{"start":{"line":420,"column":4},"end":{"line":420,"column":23}},"227":{"start":{"line":421,"column":4},"end":{"line":421,"column":20}},"228":{"start":{"line":422,"column":4},"end":{"line":422,"column":25}},"229":{"start":{"line":423,"column":4},"end":{"line":423,"column":14}},"230":{"start":{"line":424,"column":4},"end":{"line":431,"column":5}},"231":{"start":{"line":425,"column":6},"end":{"line":425,"column":23}},"232":{"start":{"line":426,"column":6},"end":{"line":426,"column":25}},"233":{"start":{"line":427,"column":6},"end":{"line":427,"column":19}},"234":{"start":{"line":429,"column":6},"end":{"line":429,"column":17}},"235":{"start":{"line":430,"column":6},"end":{"line":430,"column":24}},"236":{"start":{"line":432,"column":4},"end":{"line":432,"column":48}},"237":{"start":{"line":433,"column":4},"end":{"line":436,"column":5}},"238":{"start":{"line":434,"column":6},"end":{"line":434,"column":43}},"239":{"start":{"line":435,"column":6},"end":{"line":435,"column":24}},"240":{"start":{"line":437,"column":4},"end":{"line":438,"column":14}},"241":{"start":{"line":438,"column":6},"end":{"line":438,"column":14}},"242":{"start":{"line":440,"column":2},"end":{"line":440,"column":30}},"243":{"start":{"line":442,"column":2},"end":{"line":446,"column":3}},"244":{"start":{"line":443,"column":4},"end":{"line":445,"column":62}},"245":{"start":{"line":447,"column":2},"end":{"line":447,"column":25}},"246":{"start":{"line":451,"column":0},"end":{"line":451,"column":17}},"247":{"start":{"line":454,"column":0},"end":{"line":481,"column":2}},"248":{"start":{"line":456,"column":2},"end":{"line":456,"column":50}},"249":{"start":{"line":457,"column":2},"end":{"line":457,"column":50}},"250":{"start":{"line":458,"column":2},"end":{"line":458,"column":30}},"251":{"start":{"line":460,"column":2},"end":{"line":460,"column":49}},"252":{"start":{"line":461,"column":2},"end":{"line":479,"column":3}},"253":{"start":{"line":462,"column":4},"end":{"line":462,"column":57}},"254":{"start":{"line":462,"column":51},"end":{"line":462,"column":57}},"255":{"start":{"line":463,"column":4},"end":{"line":478,"column":5}},"256":{"start":{"line":464,"column":6},"end":{"line":464,"column":24}},"257":{"start":{"line":466,"column":6},"end":{"line":466,"column":51}},"258":{"start":{"line":467,"column":6},"end":{"line":471,"column":7}},"259":{"start":{"line":468,"column":8},"end":{"line":470,"column":62}},"260":{"start":{"line":472,"column":6},"end":{"line":477,"column":19}},"261":{"start":{"line":476,"column":8},"end":{"line":476,"column":52}},"262":{"start":{"line":477,"column":13},"end":{"line":477,"column":19}},"263":{"start":{"line":480,"column":2},"end":{"line":480,"column":18}},"264":{"start":{"line":482,"column":0},"end":{"line":503,"column":2}},"265":{"start":{"line":484,"column":2},"end":{"line":484,"column":50}},"266":{"start":{"line":485,"column":2},"end":{"line":485,"column":50}},"267":{"start":{"line":486,"column":2},"end":{"line":486,"column":30}},"268":{"start":{"line":487,"column":2},"end":{"line":487,"column":49}},"269":{"start":{"line":488,"column":2},"end":{"line":488,"column":25}},"270":{"start":{"line":490,"column":2},"end":{"line":490,"column":40}},"271":{"start":{"line":491,"column":2},"end":{"line":501,"column":3}},"272":{"start":{"line":493,"column":4},"end":{"line":493,"column":30}},"273":{"start":{"line":496,"column":4},"end":{"line":496,"column":23}},"274":{"start":{"line":499,"column":4},"end":{"line":499,"column":22}},"275":{"start":{"line":502,"column":2},"end":{"line":502,"column":18}},"276":{"start":{"line":508,"column":0},"end":{"line":548,"column":2}},"277":{"start":{"line":510,"column":2},"end":{"line":510,"column":33}},"278":{"start":{"line":511,"column":2},"end":{"line":511,"column":55}},"279":{"start":{"line":512,"column":2},"end":{"line":512,"column":22}},"280":{"start":{"line":513,"column":2},"end":{"line":516,"column":4}},"281":{"start":{"line":514,"column":4},"end":{"line":514,"column":15}},"282":{"start":{"line":515,"column":4},"end":{"line":515,"column":36}},"283":{"start":{"line":517,"column":2},"end":{"line":517,"column":53}},"284":{"start":{"line":517,"column":34},"end":{"line":517,"column":50}},"285":{"start":{"line":518,"column":2},"end":{"line":520,"column":3}},"286":{"start":{"line":519,"column":4},"end":{"line":519,"column":74}},"287":{"start":{"line":521,"column":2},"end":{"line":521,"column":34}},"288":{"start":{"line":522,"column":2},"end":{"line":522,"column":23}},"289":{"start":{"line":523,"column":2},"end":{"line":523,"column":54}},"290":{"start":{"line":523,"column":40},"end":{"line":523,"column":51}},"291":{"start":{"line":525,"column":2},"end":{"line":525,"column":49}},"292":{"start":{"line":526,"column":2},"end":{"line":526,"column":30}},"293":{"start":{"line":527,"column":2},"end":{"line":547,"column":3}},"294":{"start":{"line":528,"column":4},"end":{"line":528,"column":57}},"295":{"start":{"line":528,"column":51},"end":{"line":528,"column":57}},"296":{"start":{"line":530,"column":4},"end":{"line":530,"column":39}},"297":{"start":{"line":532,"column":4},"end":{"line":546,"column":5}},"298":{"start":{"line":533,"column":6},"end":{"line":533,"column":35}},"299":{"start":{"line":534,"column":6},"end":{"line":534,"column":24}},"300":{"start":{"line":535,"column":6},"end":{"line":535,"column":51}},"301":{"start":{"line":537,"column":6},"end":{"line":537,"column":39}},"302":{"start":{"line":538,"column":6},"end":{"line":545,"column":19}},"303":{"start":{"line":542,"column":8},"end":{"line":542,"column":52}},"304":{"start":{"line":543,"column":8},"end":{"line":544,"column":78}},"305":{"start":{"line":545,"column":13},"end":{"line":545,"column":19}},"306":{"start":{"line":551,"column":0},"end":{"line":579,"column":2}},"307":{"start":{"line":565,"column":2},"end":{"line":565,"column":25}},"308":{"start":{"line":566,"column":2},"end":{"line":568,"column":3}},"309":{"start":{"line":567,"column":4},"end":{"line":567,"column":39}},"310":{"start":{"line":569,"column":2},"end":{"line":569,"column":49}},"311":{"start":{"line":569,"column":34},"end":{"line":569,"column":45}},"312":{"start":{"line":570,"column":2},"end":{"line":570,"column":65}},"313":{"start":{"line":570,"column":48},"end":{"line":570,"column":61}},"314":{"start":{"line":572,"column":2},"end":{"line":572,"column":76}},"315":{"start":{"line":574,"column":2},"end":{"line":574,"column":53}},"316":{"start":{"line":575,"column":2},"end":{"line":578,"column":3}},"317":{"start":{"line":576,"column":4},"end":{"line":576,"column":36}},"318":{"start":{"line":577,"column":4},"end":{"line":577,"column":42}},"319":{"start":{"line":581,"column":0},"end":{"line":600,"column":2}},"320":{"start":{"line":582,"column":2},"end":{"line":582,"column":45}},"321":{"start":{"line":584,"column":2},"end":{"line":584,"column":21}},"322":{"start":{"line":585,"column":2},"end":{"line":587,"column":3}},"323":{"start":{"line":586,"column":4},"end":{"line":586,"column":47}},"324":{"start":{"line":588,"column":2},"end":{"line":588,"column":45}},"325":{"start":{"line":588,"column":30},"end":{"line":588,"column":41}},"326":{"start":{"line":590,"column":2},"end":{"line":590,"column":47}},"327":{"start":{"line":591,"column":2},"end":{"line":591,"column":28}},"328":{"start":{"line":592,"column":2},"end":{"line":599,"column":3}},"329":{"start":{"line":593,"column":4},"end":{"line":593,"column":33}},"330":{"start":{"line":594,"column":4},"end":{"line":594,"column":32}},"331":{"start":{"line":595,"column":4},"end":{"line":595,"column":38}},"332":{"start":{"line":596,"column":4},"end":{"line":596,"column":32}},"333":{"start":{"line":597,"column":4},"end":{"line":597,"column":28}},"334":{"start":{"line":598,"column":4},"end":{"line":598,"column":21}},"335":{"start":{"line":602,"column":0},"end":{"line":608,"column":2}},"336":{"start":{"line":603,"column":2},"end":{"line":603,"column":18}},"337":{"start":{"line":604,"column":2},"end":{"line":606,"column":3}},"338":{"start":{"line":605,"column":4},"end":{"line":605,"column":46}},"339":{"start":{"line":607,"column":2},"end":{"line":607,"column":14}},"340":{"start":{"line":610,"column":0},"end":{"line":629,"column":2}},"341":{"start":{"line":612,"column":2},"end":{"line":612,"column":45}},"342":{"start":{"line":613,"column":2},"end":{"line":613,"column":40}},"343":{"start":{"line":614,"column":2},"end":{"line":628,"column":3}},"344":{"start":{"line":615,"column":4},"end":{"line":615,"column":41}},"345":{"start":{"line":616,"column":4},"end":{"line":616,"column":21}},"346":{"start":{"line":617,"column":4},"end":{"line":617,"column":69}},"347":{"start":{"line":618,"column":4},"end":{"line":622,"column":5}},"348":{"start":{"line":619,"column":6},"end":{"line":619,"column":16}},"349":{"start":{"line":619,"column":17},"end":{"line":619,"column":52}},"350":{"start":{"line":621,"column":6},"end":{"line":621,"column":16}},"351":{"start":{"line":621,"column":17},"end":{"line":621,"column":52}},"352":{"start":{"line":623,"column":4},"end":{"line":625,"column":5}},"353":{"start":{"line":624,"column":6},"end":{"line":624,"column":36}},"354":{"start":{"line":626,"column":4},"end":{"line":626,"column":26}},"355":{"start":{"line":627,"column":4},"end":{"line":627,"column":31}},"356":{"start":{"line":631,"column":0},"end":{"line":633,"column":2}},"357":{"start":{"line":632,"column":2},"end":{"line":632,"column":67}},"358":{"start":{"line":636,"column":0},"end":{"line":667,"column":2}},"359":{"start":{"line":637,"column":2},"end":{"line":637,"column":14}},"360":{"start":{"line":638,"column":2},"end":{"line":638,"column":20}},"361":{"start":{"line":639,"column":2},"end":{"line":639,"column":20}},"362":{"start":{"line":640,"column":2},"end":{"line":665,"column":3}},"363":{"start":{"line":641,"column":4},"end":{"line":644,"column":5}},"364":{"start":{"line":642,"column":6},"end":{"line":642,"column":23}},"365":{"start":{"line":643,"column":6},"end":{"line":643,"column":35}},"366":{"start":{"line":643,"column":27},"end":{"line":643,"column":33}},"367":{"start":{"line":645,"column":4},"end":{"line":645,"column":33}},"368":{"start":{"line":646,"column":4},"end":{"line":648,"column":5}},"369":{"start":{"line":647,"column":6},"end":{"line":647,"column":12}},"370":{"start":{"line":649,"column":4},"end":{"line":649,"column":22}},"371":{"start":{"line":650,"column":4},"end":{"line":663,"column":5}},"372":{"start":{"line":651,"column":6},"end":{"line":651,"column":20}},"373":{"start":{"line":652,"column":6},"end":{"line":652,"column":20}},"374":{"start":{"line":654,"column":6},"end":{"line":654,"column":18}},"375":{"start":{"line":655,"column":6},"end":{"line":662,"column":7}},"376":{"start":{"line":656,"column":8},"end":{"line":661,"column":9}},"377":{"start":{"line":657,"column":10},"end":{"line":657,"column":25}},"378":{"start":{"line":658,"column":10},"end":{"line":658,"column":19}},"379":{"start":{"line":660,"column":10},"end":{"line":660,"column":24}},"380":{"start":{"line":664,"column":4},"end":{"line":664,"column":22}},"381":{"start":{"line":666,"column":2},"end":{"line":666,"column":13}},"382":{"start":{"line":671,"column":0},"end":{"line":684,"column":2}},"383":{"start":{"line":672,"column":2},"end":{"line":672,"column":14}},"384":{"start":{"line":673,"column":2},"end":{"line":683,"column":3}},"385":{"start":{"line":674,"column":4},"end":{"line":674,"column":59}},"386":{"start":{"line":675,"column":4},"end":{"line":675,"column":65}},"387":{"start":{"line":676,"column":4},"end":{"line":681,"column":5}},"388":{"start":{"line":677,"column":6},"end":{"line":677,"column":58}},"389":{"start":{"line":678,"column":6},"end":{"line":680,"column":7}},"390":{"start":{"line":679,"column":8},"end":{"line":679,"column":17}},"391":{"start":{"line":679,"column":18},"end":{"line":679,"column":39}},"392":{"start":{"line":682,"column":4},"end":{"line":682,"column":26}},"393":{"start":{"line":685,"column":0},"end":{"line":733,"column":2}},"394":{"start":{"line":691,"column":2},"end":{"line":691,"column":32}},"395":{"start":{"line":692,"column":2},"end":{"line":732,"column":3}},"396":{"start":{"line":693,"column":4},"end":{"line":693,"column":46}},"397":{"start":{"line":695,"column":4},"end":{"line":695,"column":59}},"398":{"start":{"line":695,"column":38},"end":{"line":695,"column":57}},"399":{"start":{"line":696,"column":4},"end":{"line":698,"column":5}},"400":{"start":{"line":697,"column":6},"end":{"line":697,"column":34}},"401":{"start":{"line":699,"column":4},"end":{"line":699,"column":71}},"402":{"start":{"line":701,"column":4},"end":{"line":701,"column":20}},"403":{"start":{"line":702,"column":4},"end":{"line":707,"column":5}},"404":{"start":{"line":703,"column":6},"end":{"line":703,"column":47}},"405":{"start":{"line":703,"column":36},"end":{"line":703,"column":45}},"406":{"start":{"line":704,"column":6},"end":{"line":704,"column":31}},"407":{"start":{"line":705,"column":6},"end":{"line":705,"column":59}},"408":{"start":{"line":706,"column":6},"end":{"line":706,"column":80}},"409":{"start":{"line":710,"column":4},"end":{"line":710,"column":64}},"410":{"start":{"line":710,"column":35},"end":{"line":710,"column":60}},"411":{"start":{"line":712,"column":4},"end":{"line":714,"column":5}},"412":{"start":{"line":713,"column":6},"end":{"line":713,"column":49}},"413":{"start":{"line":715,"column":4},"end":{"line":715,"column":22}},"414":{"start":{"line":717,"column":4},"end":{"line":717,"column":21}},"415":{"start":{"line":718,"column":4},"end":{"line":721,"column":5}},"416":{"start":{"line":719,"column":6},"end":{"line":719,"column":23}},"417":{"start":{"line":720,"column":6},"end":{"line":720,"column":50}},"418":{"start":{"line":720,"column":39},"end":{"line":720,"column":48}},"419":{"start":{"line":722,"column":4},"end":{"line":727,"column":5}},"420":{"start":{"line":723,"column":6},"end":{"line":723,"column":31}},"421":{"start":{"line":724,"column":6},"end":{"line":726,"column":7}},"422":{"start":{"line":725,"column":8},"end":{"line":725,"column":24}},"423":{"start":{"line":729,"column":4},"end":{"line":731,"column":5}},"424":{"start":{"line":730,"column":6},"end":{"line":730,"column":59}},"425":{"start":{"line":735,"column":0},"end":{"line":876,"column":2}},"426":{"start":{"line":736,"column":2},"end":{"line":736,"column":17}},"427":{"start":{"line":738,"column":2},"end":{"line":738,"column":36}},"428":{"start":{"line":739,"column":2},"end":{"line":739,"column":53}},"429":{"start":{"line":740,"column":2},"end":{"line":740,"column":24}},"430":{"start":{"line":741,"column":2},"end":{"line":741,"column":32}},"431":{"start":{"line":743,"column":2},"end":{"line":743,"column":30}},"432":{"start":{"line":744,"column":2},"end":{"line":748,"column":3}},"433":{"start":{"line":745,"column":4},"end":{"line":745,"column":17}},"434":{"start":{"line":746,"column":4},"end":{"line":746,"column":19}},"435":{"start":{"line":747,"column":4},"end":{"line":747,"column":26}},"436":{"start":{"line":749,"column":2},"end":{"line":751,"column":3}},"437":{"start":{"line":750,"column":4},"end":{"line":750,"column":37}},"438":{"start":{"line":752,"column":2},"end":{"line":758,"column":3}},"439":{"start":{"line":753,"column":4},"end":{"line":757,"column":5}},"440":{"start":{"line":754,"column":6},"end":{"line":756,"column":7}},"441":{"start":{"line":755,"column":8},"end":{"line":755,"column":45}},"442":{"start":{"line":759,"column":2},"end":{"line":759,"column":23}},"443":{"start":{"line":760,"column":2},"end":{"line":764,"column":3}},"444":{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},"445":{"start":{"line":762,"column":6},"end":{"line":762,"column":21}},"446":{"start":{"line":769,"column":2},"end":{"line":769,"column":39}},"447":{"start":{"line":770,"column":2},"end":{"line":770,"column":36}},"448":{"start":{"line":771,"column":2},"end":{"line":771,"column":16}},"449":{"start":{"line":772,"column":2},"end":{"line":772,"column":48}},"450":{"start":{"line":772,"column":34},"end":{"line":772,"column":46}},"451":{"start":{"line":773,"column":2},"end":{"line":773,"column":42}},"452":{"start":{"line":774,"column":2},"end":{"line":776,"column":3}},"453":{"start":{"line":775,"column":4},"end":{"line":775,"column":32}},"454":{"start":{"line":775,"column":19},"end":{"line":775,"column":30}},"455":{"start":{"line":777,"column":2},"end":{"line":777,"column":14}},"456":{"start":{"line":777,"column":15},"end":{"line":777,"column":30}},"457":{"start":{"line":778,"column":2},"end":{"line":778,"column":29}},"458":{"start":{"line":779,"column":2},"end":{"line":782,"column":4}},"459":{"start":{"line":780,"column":4},"end":{"line":780,"column":17}},"460":{"start":{"line":781,"column":4},"end":{"line":781,"column":14}},"461":{"start":{"line":783,"column":2},"end":{"line":794,"column":4}},"462":{"start":{"line":784,"column":4},"end":{"line":793,"column":5}},"463":{"start":{"line":785,"column":6},"end":{"line":791,"column":7}},"464":{"start":{"line":786,"column":8},"end":{"line":786,"column":16}},"465":{"start":{"line":787,"column":8},"end":{"line":787,"column":23}},"466":{"start":{"line":789,"column":8},"end":{"line":789,"column":16}},"467":{"start":{"line":790,"column":8},"end":{"line":790,"column":23}},"468":{"start":{"line":792,"column":6},"end":{"line":792,"column":23}},"469":{"start":{"line":795,"column":2},"end":{"line":812,"column":3}},"470":{"start":{"line":796,"column":4},"end":{"line":796,"column":13}},"471":{"start":{"line":798,"column":4},"end":{"line":800,"column":5}},"472":{"start":{"line":799,"column":6},"end":{"line":799,"column":30}},"473":{"start":{"line":799,"column":22},"end":{"line":799,"column":28}},"474":{"start":{"line":801,"column":4},"end":{"line":801,"column":37}},"475":{"start":{"line":803,"column":4},"end":{"line":803,"column":14}},"476":{"start":{"line":805,"column":4},"end":{"line":811,"column":5}},"477":{"start":{"line":806,"column":6},"end":{"line":806,"column":18}},"478":{"start":{"line":808,"column":6},"end":{"line":808,"column":20}},"479":{"start":{"line":809,"column":6},"end":{"line":809,"column":16}},"480":{"start":{"line":810,"column":6},"end":{"line":810,"column":20}},"481":{"start":{"line":813,"column":2},"end":{"line":813,"column":16}},"482":{"start":{"line":814,"column":2},"end":{"line":814,"column":19}},"483":{"start":{"line":815,"column":2},"end":{"line":815,"column":25}},"484":{"start":{"line":823,"column":2},"end":{"line":823,"column":18}},"485":{"start":{"line":824,"column":2},"end":{"line":824,"column":19}},"486":{"start":{"line":826,"column":2},"end":{"line":830,"column":28}},"487":{"start":{"line":826,"column":21},"end":{"line":826,"column":38}},"488":{"start":{"line":827,"column":7},"end":{"line":830,"column":28}},"489":{"start":{"line":827,"column":26},"end":{"line":827,"column":43}},"490":{"start":{"line":828,"column":7},"end":{"line":830,"column":28}},"491":{"start":{"line":828,"column":25},"end":{"line":828,"column":42}},"492":{"start":{"line":829,"column":7},"end":{"line":830,"column":28}},"493":{"start":{"line":829,"column":25},"end":{"line":829,"column":42}},"494":{"start":{"line":830,"column":9},"end":{"line":830,"column":26}},"495":{"start":{"line":835,"column":2},"end":{"line":835,"column":53}},"496":{"start":{"line":836,"column":2},"end":{"line":836,"column":48}},"497":{"start":{"line":836,"column":34},"end":{"line":836,"column":46}},"498":{"start":{"line":837,"column":2},"end":{"line":837,"column":53}},"499":{"start":{"line":838,"column":2},"end":{"line":838,"column":14}},"500":{"start":{"line":841,"column":2},"end":{"line":841,"column":65}},"501":{"start":{"line":842,"column":2},"end":{"line":842,"column":74}},"502":{"start":{"line":843,"column":2},"end":{"line":843,"column":40}},"503":{"start":{"line":846,"column":2},"end":{"line":846,"column":77}},"504":{"start":{"line":847,"column":2},"end":{"line":847,"column":40}},"505":{"start":{"line":849,"column":2},"end":{"line":849,"column":44}},"506":{"start":{"line":850,"column":2},"end":{"line":850,"column":47}},"507":{"start":{"line":850,"column":36},"end":{"line":850,"column":45}},"508":{"start":{"line":851,"column":2},"end":{"line":862,"column":3}},"509":{"start":{"line":852,"column":4},"end":{"line":852,"column":25}},"510":{"start":{"line":854,"column":4},"end":{"line":854,"column":64}},"511":{"start":{"line":854,"column":38},"end":{"line":854,"column":62}},"512":{"start":{"line":854,"column":54},"end":{"line":854,"column":60}},"513":{"start":{"line":855,"column":4},"end":{"line":855,"column":36}},"514":{"start":{"line":856,"column":4},"end":{"line":856,"column":14}},"515":{"start":{"line":858,"column":4},"end":{"line":860,"column":5}},"516":{"start":{"line":859,"column":6},"end":{"line":859,"column":28}},"517":{"start":{"line":861,"column":4},"end":{"line":861,"column":26}},"518":{"start":{"line":864,"column":2},"end":{"line":867,"column":3}},"519":{"start":{"line":865,"column":4},"end":{"line":865,"column":30}},"520":{"start":{"line":866,"column":4},"end":{"line":866,"column":33}},"521":{"start":{"line":869,"column":2},"end":{"line":874,"column":3}},"522":{"start":{"line":870,"column":4},"end":{"line":870,"column":38}},"523":{"start":{"line":871,"column":4},"end":{"line":873,"column":5}},"524":{"start":{"line":872,"column":6},"end":{"line":872,"column":37}},"525":{"start":{"line":878,"column":0},"end":{"line":878,"column":32}},"526":{"start":{"line":879,"column":0},"end":{"line":929,"column":2}},"527":{"start":{"line":880,"column":2},"end":{"line":880,"column":46}},"528":{"start":{"line":881,"column":2},"end":{"line":881,"column":56}},"529":{"start":{"line":882,"column":2},"end":{"line":882,"column":38}},"530":{"start":{"line":884,"column":2},"end":{"line":884,"column":30}},"531":{"start":{"line":885,"column":2},"end":{"line":887,"column":3}},"532":{"start":{"line":886,"column":4},"end":{"line":886,"column":32}},"533":{"start":{"line":888,"column":2},"end":{"line":890,"column":3}},"534":{"start":{"line":889,"column":4},"end":{"line":889,"column":53}},"535":{"start":{"line":892,"column":2},"end":{"line":892,"column":47}},"536":{"start":{"line":900,"column":2},"end":{"line":900,"column":18}},"537":{"start":{"line":903,"column":2},"end":{"line":903,"column":41}},"538":{"start":{"line":904,"column":2},"end":{"line":904,"column":41}},"539":{"start":{"line":905,"column":2},"end":{"line":905,"column":41}},"540":{"start":{"line":906,"column":2},"end":{"line":906,"column":63}},"541":{"start":{"line":909,"column":2},"end":{"line":909,"column":43}},"542":{"start":{"line":910,"column":2},"end":{"line":910,"column":20}},"543":{"start":{"line":911,"column":2},"end":{"line":911,"column":13}},"544":{"start":{"line":913,"column":2},"end":{"line":922,"column":33}},"545":{"start":{"line":914,"column":4},"end":{"line":914,"column":26}},"546":{"start":{"line":915,"column":4},"end":{"line":915,"column":56}},"547":{"start":{"line":916,"column":4},"end":{"line":921,"column":5}},"548":{"start":{"line":917,"column":6},"end":{"line":917,"column":79}},"549":{"start":{"line":918,"column":6},"end":{"line":918,"column":39}},"550":{"start":{"line":919,"column":6},"end":{"line":919,"column":44}},"551":{"start":{"line":920,"column":6},"end":{"line":920,"column":46}},"552":{"start":{"line":925,"column":2},"end":{"line":925,"column":34}},"553":{"start":{"line":926,"column":2},"end":{"line":926,"column":37}},"554":{"start":{"line":927,"column":2},"end":{"line":927,"column":20}},"555":{"start":{"line":928,"column":2},"end":{"line":928,"column":18}},"556":{"start":{"line":931,"column":0},"end":{"line":931,"column":37}},"557":{"start":{"line":932,"column":0},"end":{"line":932,"column":43}},"558":{"start":{"line":933,"column":0},"end":{"line":933,"column":27}},"559":{"start":{"line":935,"column":0},"end":{"line":935,"column":13}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":0},"end":{"line":37,"column":0}},{"start":{"line":37,"column":0},"end":{"line":37,"column":0}}]},"2":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":33}},{"start":{"line":83,"column":37},"end":{"line":83,"column":52}}]},"3":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"4":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"5":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"6":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":39}},{"start":{"line":109,"column":6},"end":{"line":109,"column":59}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"8":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":15}},{"start":{"line":113,"column":19},"end":{"line":113,"column":28}}]},"9":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"11":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"12":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"13":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"14":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":8}},{"start":{"line":160,"column":8},"end":{"line":160,"column":8}}]},"15":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"16":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":29}},{"start":{"line":167,"column":33},"end":{"line":167,"column":56}}]},"17":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"18":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":6}},{"start":{"line":186,"column":6},"end":{"line":186,"column":6}}]},"19":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"20":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":12},"end":{"line":203,"column":17}},{"start":{"line":203,"column":21},"end":{"line":203,"column":41}}]},"21":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"22":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":8}},{"start":{"line":208,"column":8},"end":{"line":208,"column":8}}]},"23":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"24":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":11},"end":{"line":222,"column":11}},{"start":{"line":222,"column":11},"end":{"line":222,"column":11}}]},"25":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"26":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"27":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":6}},{"start":{"line":292,"column":6},"end":{"line":292,"column":6}}]},"28":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"29":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"30":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":4},"end":{"line":306,"column":4}},{"start":{"line":306,"column":4},"end":{"line":306,"column":4}}]},"31":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":13}},{"start":{"line":306,"column":17},"end":{"line":306,"column":33}}]},"32":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"33":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":31}},{"start":{"line":312,"column":35},"end":{"line":312,"column":58}}]},"34":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":6},"end":{"line":314,"column":6}},{"start":{"line":314,"column":6},"end":{"line":314,"column":6}}]},"35":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"36":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":336,"column":4}},{"start":{"line":336,"column":4},"end":{"line":336,"column":4}}]},"37":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":6},"end":{"line":338,"column":6}},{"start":{"line":338,"column":6},"end":{"line":338,"column":6}}]},"38":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":4}},{"start":{"line":345,"column":4},"end":{"line":345,"column":4}}]},"39":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"40":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":2},"end":{"line":368,"column":2}},{"start":{"line":368,"column":2},"end":{"line":368,"column":2}}]},"41":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":6},"end":{"line":368,"column":21}},{"start":{"line":368,"column":25},"end":{"line":368,"column":49}}]},"42":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"43":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"44":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"45":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":4},"end":{"line":437,"column":4}},{"start":{"line":437,"column":4},"end":{"line":437,"column":4}}]},"46":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]},"47":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":4},"end":{"line":462,"column":4}},{"start":{"line":462,"column":4},"end":{"line":462,"column":4}}]},"48":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":8},"end":{"line":462,"column":28}},{"start":{"line":462,"column":32},"end":{"line":462,"column":49}}]},"49":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":4},"end":{"line":463,"column":4}},{"start":{"line":463,"column":4},"end":{"line":463,"column":4}}]},"50":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":6},"end":{"line":467,"column":6}},{"start":{"line":467,"column":6},"end":{"line":467,"column":6}}]},"51":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":6},"end":{"line":472,"column":6}},{"start":{"line":472,"column":6},"end":{"line":472,"column":6}}]},"52":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":10},"end":{"line":472,"column":21}},{"start":{"line":473,"column":10},"end":{"line":473,"column":30}},{"start":{"line":474,"column":10},"end":{"line":474,"column":28}}]},"53":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":2},"end":{"line":491,"column":2}},{"start":{"line":491,"column":2},"end":{"line":491,"column":2}}]},"54":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":2},"end":{"line":518,"column":2}},{"start":{"line":518,"column":2},"end":{"line":518,"column":2}}]},"55":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":4},"end":{"line":528,"column":4}},{"start":{"line":528,"column":4},"end":{"line":528,"column":4}}]},"56":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":8},"end":{"line":528,"column":28}},{"start":{"line":528,"column":32},"end":{"line":528,"column":49}}]},"57":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":4},"end":{"line":532,"column":4}},{"start":{"line":532,"column":4},"end":{"line":532,"column":4}}]},"58":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":6},"end":{"line":538,"column":6}},{"start":{"line":538,"column":6},"end":{"line":538,"column":6}}]},"59":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":10},"end":{"line":538,"column":21}},{"start":{"line":539,"column":10},"end":{"line":539,"column":30}},{"start":{"line":540,"column":10},"end":{"line":540,"column":28}}]},"60":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":19},"end":{"line":617,"column":33}},{"start":{"line":617,"column":37},"end":{"line":617,"column":67}}]},"61":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"62":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":4},"end":{"line":641,"column":4}},{"start":{"line":641,"column":4},"end":{"line":641,"column":4}}]},"63":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":6},"end":{"line":643,"column":6}},{"start":{"line":643,"column":6},"end":{"line":643,"column":6}}]},"64":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":4},"end":{"line":646,"column":4}},{"start":{"line":646,"column":4},"end":{"line":646,"column":4}}]},"65":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"66":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":6},"end":{"line":655,"column":6}},{"start":{"line":655,"column":6},"end":{"line":655,"column":6}}]},"67":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":8},"end":{"line":656,"column":8}},{"start":{"line":656,"column":8},"end":{"line":656,"column":8}}]},"68":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":6},"end":{"line":678,"column":6}},{"start":{"line":678,"column":6},"end":{"line":678,"column":6}}]},"69":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":6},"end":{"line":703,"column":6}},{"start":{"line":703,"column":6},"end":{"line":703,"column":6}}]},"70":{"line":724,"type":"binary-expr","locations":[{"start":{"line":724,"column":16},"end":{"line":724,"column":28}},{"start":{"line":724,"column":32},"end":{"line":724,"column":46}}]},"71":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":4},"end":{"line":753,"column":4}},{"start":{"line":753,"column":4},"end":{"line":753,"column":4}}]},"72":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":761,"column":4}},{"start":{"line":761,"column":4},"end":{"line":761,"column":4}}]},"73":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":4},"end":{"line":775,"column":4}},{"start":{"line":775,"column":4},"end":{"line":775,"column":4}}]},"74":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":6},"end":{"line":785,"column":6}},{"start":{"line":785,"column":6},"end":{"line":785,"column":6}}]},"75":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":6},"end":{"line":799,"column":6}},{"start":{"line":799,"column":6},"end":{"line":799,"column":6}}]},"76":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":4},"end":{"line":805,"column":4}},{"start":{"line":805,"column":4},"end":{"line":805,"column":4}}]},"77":{"line":826,"type":"if","locations":[{"start":{"line":826,"column":2},"end":{"line":826,"column":2}},{"start":{"line":826,"column":2},"end":{"line":826,"column":2}}]},"78":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":7},"end":{"line":827,"column":7}},{"start":{"line":827,"column":7},"end":{"line":827,"column":7}}]},"79":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":7},"end":{"line":828,"column":7}},{"start":{"line":828,"column":7},"end":{"line":828,"column":7}}]},"80":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":7},"end":{"line":829,"column":7}},{"start":{"line":829,"column":7},"end":{"line":829,"column":7}}]},"81":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":17},"end":{"line":846,"column":44}},{"start":{"line":846,"column":48},"end":{"line":846,"column":75}}]},"82":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":38},"end":{"line":854,"column":38}},{"start":{"line":854,"column":38},"end":{"line":854,"column":38}}]},"83":{"line":871,"type":"binary-expr","locations":[{"start":{"line":871,"column":14},"end":{"line":871,"column":26}},{"start":{"line":871,"column":30},"end":{"line":871,"column":35}}]},"84":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":2},"end":{"line":885,"column":2}},{"start":{"line":885,"column":2},"end":{"line":885,"column":2}}]},"85":{"line":888,"type":"if","locations":[{"start":{"line":888,"column":2},"end":{"line":888,"column":2}},{"start":{"line":888,"column":2},"end":{"line":888,"column":2}}]},"86":{"line":888,"type":"binary-expr","locations":[{"start":{"line":888,"column":6},"end":{"line":888,"column":29}},{"start":{"line":888,"column":33},"end":{"line":888,"column":56}}]},"87":{"line":916,"type":"if","locations":[{"start":{"line":916,"column":4},"end":{"line":916,"column":4}},{"start":{"line":916,"column":4},"end":{"line":916,"column":4}}]}},"code":["/*","An implementation of Bzip2 de/compression, including the ability to","seek within bzip2 data.","","Copyright (C) 2013 C. Scott Ananian","Copyright (C) 2012 Eli Skeggs","Copyright (C) 2011 Kevin Kwok","","This library is free software; you can redistribute it and/or","modify it under the terms of the GNU Lesser General Public","License as published by the Free Software Foundation; either","version 2.1 of the License, or (at your option) any later version.","","This library is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU","Lesser General Public License for more details.","","You should have received a copy of the GNU Lesser General Public","License along with this library; if not, see","http://www.gnu.org/licenses/lgpl-2.1.html","","Adapted from node-bzip, copyright 2012 Eli Skeggs.","Adapted from bzip2.js, copyright 2011 Kevin Kwok (antimatter15@gmail.com).","","Based on micro-bunzip by Rob Landley (rob@landley.net).","","Based on bzip2 decompression code by Julian R Seward (jseward@acm.org),","which also acknowledges contributions by Mike Burrows, David Wheeler,","Peter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,","Robert Sedgewick, and Jon L. Bentley.","","BWT implementation based on work by Yuta Mori; see BWT.js for details.","","bzip2 compression code inspired by https://code.google.com/p/jbzip2","*/","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./freeze','./BitStream','./BWT','./CRC32','./HuffmanAllocator','./Stream','./Util'], function(freeze, BitStream, BWT, CRC32, HuffmanAllocator, Stream, Util) {","","var MAX_HUFCODE_BITS = 20;","var MAX_SYMBOLS = 258;","var SYMBOL_RUNA = 0;","var SYMBOL_RUNB = 1;","var MIN_GROUPS = 2;","var MAX_GROUPS = 6;","var GROUP_SIZE = 50;","","var WHOLEPI = 0x314159265359; // 48-bit integer","var SQRTPI =  0x177245385090; // 48-bit integer","","var EOF = Stream.EOF;","","var mtf = function(array, index) {","  var src = array[index], i;","  for (i = index; i > 0; i--) {","    array[i] = array[i-1];","  }","  array[0] = src;","  return src;","};","","var Err = {","  OK: 0,","  LAST_BLOCK: -1,","  NOT_BZIP_DATA: -2,","  UNEXPECTED_INPUT_EOF: -3,","  UNEXPECTED_OUTPUT_EOF: -4,","  DATA_ERROR: -5,","  OUT_OF_MEMORY: -6,","  OBSOLETE_INPUT: -7,","  END_OF_BLOCK: -8","};","var ErrorMessages = {};","ErrorMessages[Err.LAST_BLOCK] =            \"Bad file checksum\";","ErrorMessages[Err.NOT_BZIP_DATA] =         \"Not bzip data\";","ErrorMessages[Err.UNEXPECTED_INPUT_EOF] =  \"Unexpected input EOF\";","ErrorMessages[Err.UNEXPECTED_OUTPUT_EOF] = \"Unexpected output EOF\";","ErrorMessages[Err.DATA_ERROR] =            \"Data error\";","ErrorMessages[Err.OUT_OF_MEMORY] =         \"Out of memory\";","ErrorMessages[Err.OBSOLETE_INPUT] = \"Obsolete (pre 0.9.5) bzip format not supported.\";","","var _throw = function(status, optDetail) {","  var msg = ErrorMessages[status] || 'unknown error';","  if (optDetail) { msg += ': '+optDetail; }","  var e = new TypeError(msg);","  e.errorCode = status;","  throw e;","};","","var Bunzip = function(inputStream, outputStream) {","  this.writePos = this.writeCurrent = this.writeCount = 0;","","  this._start_bunzip(inputStream, outputStream);","};","Bunzip.prototype._init_block = function() {","  var moreBlocks = this._get_next_block();","  if ( !moreBlocks ) {","    this.writeCount = -1;","    return false; /* no more blocks */","  }","  this.blockCRC = new CRC32();","  return true;","};","/* XXX micro-bunzip uses (inputStream, inputBuffer, len) as arguments */","Bunzip.prototype._start_bunzip = function(inputStream, outputStream) {","  /* Ensure that file starts with \"BZh['1'-'9'].\" */","  var buf = Util.makeU8Buffer(4);","  if (inputStream.read(buf, 0, 4) !== 4 ||","      String.fromCharCode(buf[0], buf[1], buf[2]) !== 'BZh')","    _throw(Err.NOT_BZIP_DATA, 'bad magic');","","  var level = buf[3] - 0x30;","  if (level < 1 || level > 9)","    _throw(Err.NOT_BZIP_DATA, 'level out of range');","","  this.reader = new BitStream(inputStream);","","  /* Fourth byte (ascii '1'-'9'), indicates block size in units of 100k of","     uncompressed data.  Allocate intermediate buffer for block. */","  this.dbufSize = 100000 * level;","  this.nextoutput = 0;","  this.outputStream = outputStream;","  this.streamCRC = 0;","};","Bunzip.prototype._get_next_block = function() {","  var i, j, k;","  var reader = this.reader;","  // this is get_next_block() function from micro-bunzip:","  /* Read in header signature and CRC, then validate signature.","     (last block signature means CRC is for whole file, return now) */","  var h = reader.readBits(48);","  if (h === SQRTPI) { // last block","    return false; /* no more blocks */","  }","  if (h !== WHOLEPI)","    _throw(Err.NOT_BZIP_DATA);","  this.targetBlockCRC = reader.readBits(32);","  this.streamCRC = (this.targetBlockCRC ^","                    ((this.streamCRC << 1) | (this.streamCRC>>>31))) >>> 0;","  /* We can add support for blockRandomised if anybody complains.  There was","     some code for this in busybox 1.0.0-pre3, but nobody ever noticed that","     it didn't actually work. */","  if (reader.readBits(1))","    _throw(Err.OBSOLETE_INPUT);","  var origPointer = reader.readBits(24);","  if (origPointer > this.dbufSize)","    _throw(Err.DATA_ERROR, 'initial position out of bounds');","  /* mapping table: if some byte values are never used (encoding things","     like ASCII text), the compression code removes the gaps to have fewer","     symbols to deal with, and writes a sparse bitfield indicating which","     values were present.  We make a translation table to convert the symbols","     back to the corresponding bytes. */","  var t = reader.readBits(16);","  var symToByte = Util.makeU8Buffer(256), symTotal = 0;","  for (i = 0; i < 16; i++) {","    if (t & (1 << (0xF - i))) {","      var o = i * 16;","      k = reader.readBits(16);","      for (j = 0; j < 16; j++)","        if (k & (1 << (0xF - j)))","          symToByte[symTotal++] = o + j;","    }","  }","","  /* How many different Huffman coding groups does this block use? */","  var groupCount = reader.readBits(3);","  if (groupCount < MIN_GROUPS || groupCount > MAX_GROUPS)","    _throw(Err.DATA_ERROR);","  /* nSelectors: Every GROUP_SIZE many symbols we select a new Huffman coding","     group.  Read in the group selector list, which is stored as MTF encoded","     bit runs.  (MTF=Move To Front, as each value is used it's moved to the","     start of the list.) */","  var nSelectors = reader.readBits(15);","  if (nSelectors === 0)","    _throw(Err.DATA_ERROR);","","  var mtfSymbol = Util.makeU8Buffer(256);","  for (i = 0; i < groupCount; i++)","    mtfSymbol[i] = i;","","  var selectors = Util.makeU8Buffer(nSelectors); // was 32768...","","  for (i = 0; i < nSelectors; i++) {","    /* Get next value */","    for (j = 0; reader.readBits(1); j++)","      if (j >= groupCount) _throw(Err.DATA_ERROR);","    /* Decode MTF to get the next selector */","    selectors[i] = mtf(mtfSymbol, j);","  }","","  /* Read the Huffman coding tables for each group, which code for symTotal","     literal symbols, plus two run symbols (RUNA, RUNB) */","  var symCount = symTotal + 2;","  var groups = [], hufGroup;","  for (j = 0; j < groupCount; j++) {","    var length = Util.makeU8Buffer(symCount), temp = Util.makeU16Buffer(MAX_HUFCODE_BITS + 1);","    /* Read Huffman code lengths for each symbol.  They're stored in","       a way similar to MTF; record a starting value for the first symbol,","       and an offset from the previous value for every symbol after that. */","    t = reader.readBits(5); // lengths","    for (i = 0; i < symCount; i++) {","      for (;;) {","        if (t < 1 || t > MAX_HUFCODE_BITS) _throw(Err.DATA_ERROR);","        /* If first bit is 0, stop.  Else second bit indicates whether","           to increment or decrement the value. */","        if(!reader.readBits(1))","          break;","        if(!reader.readBits(1))","          t++;","        else","          t--;","      }","      length[i] = t;","    }","","    /* Find largest and smallest lengths in this group */","    var minLen,  maxLen;","    minLen = maxLen = length[0];","    for (i = 1; i < symCount; i++) {","      if (length[i] > maxLen)","        maxLen = length[i];","      else if (length[i] < minLen)","        minLen = length[i];","    }","","    /* Calculate permute[], base[], and limit[] tables from length[].","     *","     * permute[] is the lookup table for converting Huffman coded symbols","     * into decoded symbols.  base[] is the amount to subtract from the","     * value of a Huffman symbol of a given length when using permute[].","     *","     * limit[] indicates the largest numerical value a symbol with a given","     * number of bits can have.  This is how the Huffman codes can vary in","     * length: each code with a value>limit[length] needs another bit.","     */","    hufGroup = {};","    groups.push(hufGroup);","    hufGroup.permute = Util.makeU16Buffer(MAX_SYMBOLS);","    hufGroup.limit = Util.makeU32Buffer(MAX_HUFCODE_BITS + 2);","    hufGroup.base = Util.makeU32Buffer(MAX_HUFCODE_BITS + 1);","    hufGroup.minLen = minLen;","    hufGroup.maxLen = maxLen;","    /* Calculate permute[].  Concurrently, initialize temp[] and limit[]. */","    var pp = 0;","    for (i = minLen; i <= maxLen; i++) {","      temp[i] = hufGroup.limit[i] = 0;","      for (t = 0; t < symCount; t++)","        if (length[t] === i)","          hufGroup.permute[pp++] = t;","    }","    /* Count symbols coded for at each bit length */","    for (i = 0; i < symCount; i++)","      temp[length[i]]++;","    /* Calculate limit[] (the largest symbol-coding value at each bit","     * length, which is (previous limit<<1)+symbols at this level), and","     * base[] (number of symbols to ignore at each bit length, which is","     * limit minus the cumulative count of symbols coded for already). */","    pp = t = 0;","    for (i = minLen; i < maxLen; i++) {","      pp += temp[i];","      /* We read the largest possible symbol size and then unget bits","         after determining how many we need, and those extra bits could","         be set to anything.  (They're noise from future symbols.)  At","         each level we're really only interested in the first few bits,","         so here we set all the trailing to-be-ignored bits to 1 so they","         don't affect the value>limit[length] comparison. */","      hufGroup.limit[i] = pp - 1;","      pp <<= 1;","      t += temp[i];","      hufGroup.base[i + 1] = pp - t;","    }","    hufGroup.limit[maxLen + 1] = Number.MAX_VALUE; /* Sentinel value for reading next sym. */","    hufGroup.limit[maxLen] = pp + temp[maxLen] - 1;","    hufGroup.base[minLen] = 0;","  }","  /* We've finished reading and digesting the block header.  Now read this","     block's Huffman coded symbols from the file and undo the Huffman coding","     and run length encoding, saving the result into dbuf[dbufCount++]=uc */","","  /* Initialize symbol occurrence counters and symbol Move To Front table */","  var byteCount = Util.makeU32Buffer(256);","  for (i = 0; i < 256; i++)","    mtfSymbol[i] = i;","  /* Loop through compressed symbols. */","  var runPos = 0, dbufCount = 0, selector = 0, uc;","  var dbuf = this.dbuf = Util.makeU32Buffer(this.dbufSize);","  symCount = 0;","  for (;;) {","    /* Determine which Huffman coding group to use. */","    if (!(symCount--)) {","      symCount = GROUP_SIZE - 1;","      if (selector >= nSelectors) { _throw(Err.DATA_ERROR); }","      hufGroup = groups[selectors[selector++]];","    }","    /* Read next Huffman-coded symbol. */","    i = hufGroup.minLen;","    j = reader.readBits(i);","    for (;;i++) {","      if (i > hufGroup.maxLen) { _throw(Err.DATA_ERROR); }","      if (j <= hufGroup.limit[i])","        break;","      j = (j << 1) | reader.readBits(1);","    }","    /* Huffman decode value to get nextSym (with bounds checking) */","    j -= hufGroup.base[i];","    if (j < 0 || j >= MAX_SYMBOLS) { _throw(Err.DATA_ERROR); }","    var nextSym = hufGroup.permute[j];","    /* We have now decoded the symbol, which indicates either a new literal","       byte, or a repeated run of the most recent literal byte.  First,","       check if nextSym indicates a repeated run, and if so loop collecting","       how many times to repeat the last literal. */","    if (nextSym === SYMBOL_RUNA || nextSym === SYMBOL_RUNB) {","      /* If this is the start of a new run, zero out counter */","      if (!runPos){","        runPos = 1;","        t = 0;","      }","      /* Neat trick that saves 1 symbol: instead of or-ing 0 or 1 at","         each bit position, add 1 or 2 instead.  For example,","         1011 is 1<<0 + 1<<1 + 2<<2.  1010 is 2<<0 + 2<<1 + 1<<2.","         You can make any bit pattern that way using 1 less symbol than","         the basic or 0/1 method (except all bits 0, which would use no","         symbols, but a run of length 0 doesn't mean anything in this","         context).  Thus space is saved. */","      if (nextSym === SYMBOL_RUNA)","        t += runPos;","      else","        t += 2 * runPos;","      runPos <<= 1;","      continue;","    }","    /* When we hit the first non-run symbol after a run, we now know","       how many times to repeat the last literal, so append that many","       copies to our buffer of decoded symbols (dbuf) now.  (The last","       literal used is the one at the head of the mtfSymbol array.) */","    if (runPos){","      runPos = 0;","      if (dbufCount + t > this.dbufSize) { _throw(Err.DATA_ERROR); }","      uc = symToByte[mtfSymbol[0]];","      byteCount[uc] += t;","      while (t--)","        dbuf[dbufCount++] = uc;","    }","    /* Is this the terminating symbol? */","    if (nextSym > symTotal)","      break;","    /* At this point, nextSym indicates a new literal character.  Subtract","       one to get the position in the MTF array at which this literal is","       currently to be found.  (Note that the result can't be -1 or 0,","       because 0 and 1 are RUNA and RUNB.  But another instance of the","       first symbol in the MTF array, position 0, would have been handled","       as part of a run above.  Therefore 1 unused MTF position minus","       2 non-literal nextSym values equals -1.) */","    if (dbufCount >= this.dbufSize) { _throw(Err.DATA_ERROR); }","    i = nextSym - 1;","    uc = mtf(mtfSymbol, i);","    uc = symToByte[uc];","    /* We have our literal byte.  Save it into dbuf. */","    byteCount[uc]++;","    dbuf[dbufCount++] = uc;","  }","  /* At this point, we've read all the Huffman-coded symbols (and repeated","     runs) for this block from the input stream, and decoded them into the","     intermediate buffer.  There are dbufCount many decoded bytes in dbuf[].","     Now undo the Burrows-Wheeler transform on dbuf.","     See http://dogma.net/markn/articles/bwt/bwt.htm","  */","  if (origPointer < 0 || origPointer >= dbufCount) { _throw(Err.DATA_ERROR); }","  /* Turn byteCount into cumulative occurrence counts of 0 to n-1. */","  j = 0;","  for (i = 0; i < 256; i++) {","    k = j + byteCount[i];","    byteCount[i] = j;","    j = k;","  }","  /* Figure out what order dbuf would be in if we sorted it. */","  for (i = 0; i < dbufCount; i++) {","    uc = dbuf[i] & 0xff;","    dbuf[byteCount[uc]] |= (i << 8);","    byteCount[uc]++;","  }","  /* Decode first byte by hand to initialize \"previous\" byte.  Note that it","     doesn't get output, and if the first three characters are identical","     it doesn't qualify as a run (hence writeRunCountdown=5). */","  var pos = 0, current = 0, run = 0;","  if (dbufCount) {","    pos = dbuf[origPointer];","    current = (pos & 0xff);","    pos >>= 8;","    run = -1;","  }","  this.writePos = pos;","  this.writeCurrent = current;","  this.writeCount = dbufCount;","  this.writeRun = run;","","  return true; /* more blocks to come */","};","/* Undo burrows-wheeler transform on intermediate buffer to produce output.","   If start_bunzip was initialized with out_fd=-1, then up to len bytes of","   data are written to outbuf.  Return value is number of bytes written or","   error (all errors are negative numbers).  If out_fd!=-1, outbuf and len","   are ignored, data is written to out_fd and return is RETVAL_OK or error.","*/","Bunzip.prototype._read_bunzip = function(outputBuffer, len) {","    var copies, previous, outbyte;","    /* james@jamestaylor.org: writeCount goes to -1 when the buffer is fully","       decoded, which results in this returning RETVAL_LAST_BLOCK, also","       equal to -1... Confusing, I'm returning 0 here to indicate no","       bytes written into the buffer */","  if (this.writeCount < 0) { return 0; }","","  var gotcount = 0;","  var dbuf = this.dbuf, pos = this.writePos, current = this.writeCurrent;","  var dbufCount = this.writeCount, outputsize = this.outputsize;","  var run = this.writeRun;","","  while (dbufCount) {","    dbufCount--;","    previous = current;","    pos = dbuf[pos];","    current = pos & 0xff;","    pos >>= 8;","    if (run++ === 3){","      copies = current;","      outbyte = previous;","      current = -1;","    } else {","      copies = 1;","      outbyte = current;","    }","    this.blockCRC.updateCRCRun(outbyte, copies);","    while (copies--) {","      this.outputStream.writeByte(outbyte);","      this.nextoutput++;","    }","    if (current != previous)","      run = 0;","  }","  this.writeCount = dbufCount;","  // check CRC","  if (this.blockCRC.getCRC() !== this.targetBlockCRC) {","    _throw(Err.DATA_ERROR, \"Bad block CRC \"+","           \"(got \"+this.blockCRC.getCRC().toString(16)+","           \" expected \"+this.targetBlockCRC.toString(16)+\")\");","  }","  return this.nextoutput;","};","","/* Static helper functions */","Bunzip.Err = Err;","// 'input' can be a stream or a buffer","// 'output' can be a stream or a buffer or a number (buffer size)","Bunzip.decode = function(input, output, multistream) {","  // make a stream from a buffer, if necessary","  var inputStream = Util.coerceInputStream(input);","  var o = Util.coerceOutputStream(output, output);","  var outputStream = o.stream;","","  var bz = new Bunzip(inputStream, outputStream);","  while (true) {","    if ('eof' in inputStream && inputStream.eof()) break;","    if (bz._init_block()) {","      bz._read_bunzip();","    } else {","      var targetStreamCRC = bz.reader.readBits(32);","      if (targetStreamCRC !== bz.streamCRC) {","        _throw(Err.DATA_ERROR, \"Bad stream CRC \"+","               \"(got \"+bz.streamCRC.toString(16)+","               \" expected \"+targetStreamCRC.toString(16)+\")\");","      }","      if (multistream &&","          'eof' in inputStream &&","          !inputStream.eof()) {","        // note that start_bunzip will also resync the bit reader to next byte","        bz._start_bunzip(inputStream, outputStream);","      } else break;","    }","  }","  return o.retval;","};","Bunzip.decodeBlock = function(input, pos, output) {","  // make a stream from a buffer, if necessary","  var inputStream = Util.coerceInputStream(input);","  var o = Util.coerceOutputStream(output, output);","  var outputStream = o.stream;","  var bz = new Bunzip(inputStream, outputStream);","  bz.reader.seekBit(pos);","  /* Fill the decode buffer for the block */","  var moreBlocks = bz._get_next_block();","  if (moreBlocks) {","    /* Init the CRC for writing */","    bz.blockCRC = new CRC32();","","    /* Zero this so the current byte from before the seek is not written */","    bz.writeCopies = 0;","","    /* Decompress the block and write to stdout */","    bz._read_bunzip();","    // XXX keep writing?","  }","  return o.retval;","};","/* Reads bzip2 file from stream or buffer `input`, and invoke"," * `callback(position, size)` once for each bzip2 block,"," * where position gives the starting position (in *bits*)"," * and size gives uncompressed size of the block (in *bytes*). */","Bunzip.table = function(input, callback, multistream) {","  // make a stream from a buffer, if necessary","  var inputStream = new Stream();","  inputStream.delegate = Util.coerceInputStream(input);","  inputStream.pos = 0;","  inputStream.readByte = function() {","    this.pos++;","    return this.delegate.readByte();","  };","  inputStream.tell = function() { return this.pos; };","  if (inputStream.delegate.eof) {","    inputStream.eof = inputStream.delegate.eof.bind(inputStream.delegate);","  }","  var outputStream = new Stream();","  outputStream.pos = 0;","  outputStream.writeByte = function() { this.pos++; };","","  var bz = new Bunzip(inputStream, outputStream);","  var blockSize = bz.dbufSize;","  while (true) {","    if ('eof' in inputStream && inputStream.eof()) break;","","    var position = bz.reader.tellBit();","","    if (bz._init_block()) {","      var start = outputStream.pos;","      bz._read_bunzip();","      callback(position, outputStream.pos - start);","    } else {","      var crc = bz.reader.readBits(32); // (but we ignore the crc)","      if (multistream &&","          'eof' in inputStream &&","          !inputStream.eof()) {","        // note that start_bunzip will also resync the bit reader to next byte","        bz._start_bunzip(inputStream, outputStream);","        console.assert(bz.dbufSize === blockSize,","                       \"shouldn't change block size within multistream file\");","      } else break;","    }","  }","};","","// create a Huffman tree from the table of frequencies","var StaticHuffman = function(freq, alphabetSize) {","  // As in BZip2HuffmanStageEncoder.java (from jbzip2):","  // The Huffman allocator needs its input symbol frequencies to be","  // sorted, but we need to return code lengths in the same order as","  // the corresponding frequencies are passed in.","  // The symbol frequency and index are merged into a single array of","  // integers - frequency in the high 23 bits, index in the low 9","  // bits.","  //     2^23 = 8,388,608 which is higher than the maximum possible","  //            frequency for one symbol in a block","  //     2^9 = 512 which is higher than the maximum possible","  //            alphabet size (== 258)","  // Sorting this array simultaneously sorts the frequencies and","  // leaves a lookup that can be used to cheaply invert the sort","  var i, mergedFreq = [];","  for (i=0; i<alphabetSize; i++) {","    mergedFreq[i] = (freq[i] << 9) | i;","  }","  mergedFreq.sort(function(a,b) { return a-b; });","  var sortedFreq = mergedFreq.map(function(v) { return v>>>9; });","  // allocate code lengths in place. (result in sortedFreq array)","  HuffmanAllocator.allocateHuffmanCodeLengths(sortedFreq, MAX_HUFCODE_BITS);","  // reverse the sort to put codes & code lengths in order of input symbols","  this.codeLengths = Util.makeU8Buffer(alphabetSize);","  for (i=0; i<alphabetSize; i++) {","    var sym = mergedFreq[i] & 0x1FF;","    this.codeLengths[sym] = sortedFreq[i];","  }","};","// compute canonical Huffman codes, given code lengths","StaticHuffman.prototype.computeCanonical = function() {","  var alphabetSize = this.codeLengths.length;","  // merge arrays; sort first by length then by symbol.","  var i, merged = [];","  for (i=0; i<alphabetSize; i++) {","    merged[i] = (this.codeLengths[i] << 9) | i;","  }","  merged.sort(function(a,b) { return a-b; });","  // use sorted lengths to assign codes","  this.code = Util.makeU32Buffer(alphabetSize);","  var code = 0, prevLen = 0;","  for (i=0; i<alphabetSize; i++) {","    var curLen = merged[i] >>> 9;","    var sym = merged[i] & 0x1FF;","    console.assert(prevLen <= curLen);","    code <<= (curLen - prevLen);","    this.code[sym] = code++;","    prevLen = curLen;","  }","};","// compute the cost of encoding the given range of symbols w/ this Huffman code","StaticHuffman.prototype.cost = function(array, offset, length) {","  var i, cost = 0;","  for (i=0; i<length; i++) {","    cost += this.codeLengths[array[offset+i]];","  }","  return cost;","};","// emit the bit lengths used by this Huffman code","StaticHuffman.prototype.emit = function(outStream) {","  // write the starting length","  var i, currentLength = this.codeLengths[0];","  outStream.writeBits(5, currentLength);","  for (i=0; i<this.codeLengths.length; i++) {","    var codeLength = this.codeLengths[i];","    var value, delta;","    console.assert(codeLength > 0 && codeLength <= MAX_HUFCODE_BITS);","    if (currentLength < codeLength) {","      value = 2; delta = codeLength - currentLength;","    } else {","      value = 3; delta = currentLength - codeLength;","    }","    while (delta-- > 0) {","      outStream.writeBits(2, value);","    }","    outStream.writeBit(0);","    currentLength = codeLength;","  }","};","// encode the given symbol with this Huffman code","StaticHuffman.prototype.encode = function(outStream, symbol) {","  outStream.writeBits(this.codeLengths[symbol], this.code[symbol]);","};","","// read a block for bzip2 compression.","var readBlock = function(inStream, block, length, crc) {","  var pos = 0;","  var lastChar = -1;","  var runLength = 0;","  while (pos < length) {","    if (runLength===4) {","      block[pos++] = 0;","      if (pos >= length) { break; }","    }","    var ch = inStream.readByte();","    if (ch === EOF) {","      break;","    }","    crc.updateCRC(ch);","    if (ch !== lastChar) {","      lastChar = ch;","      runLength = 1;","    } else {","      runLength++;","      if (runLength > 4) {","        if (runLength < 256) {","          block[pos-1]++;","          continue;","        } else {","          runLength = 1;","        }","      }","    }","    block[pos++] = ch;","  }","  return pos;","};","","// divide the input into groups at most GROUP_SIZE symbols long.","// assign each group to the Huffman table which compresses it best.","var assignSelectors = function(selectors, groups, input) {","  var i, j, k;","  for (i=0, k=0; i<input.length; i+=GROUP_SIZE) {","    var groupSize = Math.min(GROUP_SIZE, input.length - i);","    var best = 0, bestCost = groups[0].cost(input, i, groupSize);","    for (j=1; j<groups.length; j++) {","      var groupCost = groups[j].cost(input, i, groupSize);","      if (groupCost < bestCost) {","        best = j; bestCost = groupCost;","      }","    }","    selectors[k++] = best;","  }","};","var optimizeHuffmanGroups = function(groups, targetGroups, input,","                                     selectors, alphabetSize) {","  // until we've got \"targetGroups\" Huffman codes, pick the Huffman code which","  // matches the largest # of groups and split it by picking the groups","  // which require more than the median number of bits to encode.","  // then recompute frequencies and reassign Huffman codes.","  var i, j, k, groupCounts = [];","  while (groups.length < targetGroups) {","    assignSelectors(selectors, groups, input);","    // which code gets used the most?","    for (i=0; i<groups.length; i++) { groupCounts[i] = 0; }","    for (i=0; i<selectors.length; i++) {","      groupCounts[selectors[i]]++;","    }","    var which = groupCounts.indexOf(Math.max.apply(Math, groupCounts));","    // ok, let's look at the size of those blocks","    var splits = [];","    for (i=0, j=0; i<selectors.length; i++) {","      if (selectors[i] !== which) { continue; }","      var start = i*GROUP_SIZE;","      var end = Math.min(start + GROUP_SIZE, input.length);","      splits.push({index: i, cost:groups[which].cost(input, start, end-start)});","    }","    // find the median.  there are O(n) algorithms to do this, but we'll","    // be lazy and use a full O(n ln n) sort.","    splits.sort(function(s1, s2) { return s1.cost - s2.cost; });","    // assign the groups in the top half to the \"new\" selector","    for (i=(splits.length>>>1); i<splits.length; i++) {","      selectors[splits[i].index] = groups.length;","    }","    groups.push(null);","    // recompute frequencies","    var freq = [], f;","    for (i=0; i<groups.length; i++) {","      f = freq[i] = [];","      for (j=0; j<alphabetSize; j++) { f[j] = 0; }","    }","    for (i=0, j=0; i<input.length; ) {","      f = freq[selectors[j++]];","      for (k=0; k<GROUP_SIZE && i<input.length; k++) {","        f[input[i++]]++;","      }","    }","    // reconstruct Huffman codes","    for (i=0; i<groups.length; i++) {","      groups[i] = new StaticHuffman(freq[i], alphabetSize);","    }","  }","};","","var compressBlock = function(block, length, outStream) {","  var c, i, j, k;","  // do BWT transform","  var U = Util.makeU8Buffer(length);","  var pidx = BWT.bwtransform2(block, U, length, 256);","  outStream.writeBit(0); // not randomized","  outStream.writeBits(24, pidx);","  // track values used; write bitmap","  var used = [], compact = [];","  for (i=0; i<length; i++) {","    c = block[i];","    used[c] = true;","    compact[c>>>4] = true;","  }","  for (i=0; i<16; i++) {","    outStream.writeBit(!!compact[i]);","  }","  for (i=0; i<16; i++) {","    if (compact[i]) {","      for (j=0; j<16; j++) {","        outStream.writeBit(!!used[(i<<4)|j]);","      }","    }","  }","  var alphabetSize = 0;","  for (i=0; i<256; i++) {","    if (used[i]) {","      alphabetSize++;","    }","  }","  // now MTF and RLE/2 encoding, while tracking symbol statistics.","  // output can be one longer than length, because we include the","  // end-of-block character at the end. Similarly, we need a U16","  // array because the end-of-block character can be 256.","  var A = Util.makeU16Buffer(length+1);","  var endOfBlock = alphabetSize + 1;","  var freq = [];","  for (i=0; i<=endOfBlock; i++) { freq[i] = 0; }","  var M = Util.makeU8Buffer(alphabetSize);","  for (i=0, j=0; i<256; i++) {","    if (used[i]) { M[j++] = i; }","  }","  used = null; compact = null;","  var pos = 0, runLength = 0;","  var emit = function(c) {","    A[pos++] = c;","    freq[c]++;","  };","  var emitLastRun = function() {","    while (runLength !== 0) {","      if (runLength & 1) {","        emit(0); // RUNA","        runLength -= 1;","      } else {","        emit(1); // RUNB","        runLength -= 2;","      }","      runLength >>>= 1;","    }","  };","  for (i=0; i<U.length; i++) {","    c = U[i];","    // look for C in M","    for (j=0; j<alphabetSize; j++) {","      if (M[j]===c) { break; }","    }","    console.assert(j!==alphabetSize);","    // shift MTF array","    mtf(M, j);","    // emit j","    if (j===0) {","      runLength++;","    } else {","      emitLastRun();","      emit(j+1);","      runLength = 0;","    }","  }","  emitLastRun();","  emit(endOfBlock); // end of block symbol","  A = A.subarray(0, pos);","  // now A[0...pos) has the encoded output, and freq[0-alphabetSize] has the","  // frequencies.  Use these to construct Huffman tables.","  // the canonical bzip2 encoder does some complicated optimization","  // to attempt to select the best tables.  We're going to simplify things:","  // (unless the block is very short) we're always going to create MAX_GROUPS","  // tables; 1 based on global frequencies, and the rest based on dividing the","  // block into MAX_GROUPS-1 pieces.","  var groups = [];","  var targetGroups; // how many Huffman groups should we create?","  // look at length of MTF-encoded block to pick a good number of groups","  if (pos >= 2400) { targetGroups = 6; }","  else if (pos >= 1200) { targetGroups = 5; }","  else if (pos >= 600) { targetGroups = 4; }","  else if (pos >= 200) { targetGroups = 3; }","  else { targetGroups = 2; }","  // start with two Huffman groups: one with the global frequencies, and","  // a second with a flat frequency distribution (which is also the smallest","  // possible Huffman table to encode, which is handy to prevent excessive","  // bloat if the input file size is very small)","  groups.push(new StaticHuffman(freq, endOfBlock+1));","  for (i=0; i<=endOfBlock; i++) { freq[i] = 1; }","  groups.push(new StaticHuffman(freq, endOfBlock+1));","  freq = null;","  // Now optimize the Huffman groups!  this is a black art.","  // we probably don't want to waste too much time on it, though.","  var selectors = Util.makeU8Buffer(Math.ceil(pos / GROUP_SIZE));","  optimizeHuffmanGroups(groups, targetGroups, A, selectors, endOfBlock+1);","  assignSelectors(selectors, groups, A);","","  // okay, let's start writing out our Huffman tables","  console.assert(groups.length >= MIN_GROUPS && groups.length <= MAX_GROUPS);","  outStream.writeBits(3, groups.length);","  // and write out the best selector for each group","  outStream.writeBits(15, selectors.length);","  for (i=0; i<groups.length; i++) { M[i] = i; } // initialize MTF table.","  for (i=0; i<selectors.length; i++) {","    var s = selectors[i];","    // find selector in MTF list","    for (j=0; j<groups.length; j++) { if (M[j]===s) { break; } }","    console.assert(j<groups.length);","    mtf(M, j);","    // emit 'j' as a unary number","    for (;j>0; j--) {","      outStream.writeBit(1);","    }","    outStream.writeBit(0);","  }","  // okay, now emit the Huffman tables in order.","  for (i=0; i<groups.length; i++) {","    groups[i].emit(outStream);","    groups[i].computeCanonical(); // get ready for next step while we're at it","  }","  // okay, now (finally!) emit the actual data!","  for (i=0, k=0; i<pos; ) {","    var huff = groups[selectors[k++]];","    for (j=0; j<GROUP_SIZE && i<pos; j++) {","      huff.encode(outStream, A[i++]);","    }","  }","  // done.","};","","var Bzip2 = Object.create(null);","Bzip2.compressFile = function(inStream, outStream, props) {","  inStream = Util.coerceInputStream(inStream);","  var o = Util.coerceOutputStream(outStream, outStream);","  outStream = new BitStream(o.stream);","","  var blockSizeMultiplier = 9;","  if (typeof(props)==='number') {","    blockSizeMultiplier = props;","  }","  if (blockSizeMultiplier < 1 || blockSizeMultiplier > 9) {","    throw new Error('Invalid block size multiplier');","  }","","  var blockSize = blockSizeMultiplier * 100000;","  // the C implementation always writes at least length-19 characters,","  // but it reads ahead enough that if the last character written was part","  // of a run, it writes out the full run.","  // That's really annoying to implement.","  // So instead just subtract 19 from the blockSize; in most cases (unless","  // there's a run at the end of the block) this will yield block divisions","  // matching the C implementation.","  blockSize -= 19;","","  // write file magic","  outStream.writeByte('B'.charCodeAt(0));","  outStream.writeByte('Z'.charCodeAt(0));","  outStream.writeByte('h'.charCodeAt(0)); // Huffman-coded bzip","  outStream.writeByte('0'.charCodeAt(0) + blockSizeMultiplier);","","  // allocate a buffer for the block","  var block = Util.makeU8Buffer(blockSize);","  var streamCRC = 0;","  var length;","","  do {","    var crc = new CRC32();","    length = readBlock(inStream, block, blockSize, crc);","    if (length > 0) {","      streamCRC = (((streamCRC << 1) | (streamCRC>>>31)) ^ crc.getCRC()) >>> 0;","      outStream.writeBits(48, WHOLEPI);","      outStream.writeBits(32, crc.getCRC());","      compressBlock(block, length, outStream);","    }","  } while (length === blockSize);","","  // finish up","  outStream.writeBits(48, SQRTPI);","  outStream.writeBits(32, streamCRC);","  outStream.flush(); // get the last bits flushed out","  return o.retval;","};","","Bzip2.decompressFile = Bunzip.decode;","Bzip2.decompressBlock = Bunzip.decodeBlock;","Bzip2.table = Bunzip.table;","","return Bzip2;","});",""],"l":{"37":1,"38":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"48":1,"49":1,"51":1,"53":1,"54":0,"55":0,"56":0,"58":0,"59":0,"62":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"90":1,"91":0,"93":0,"95":1,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"105":1,"107":0,"108":0,"110":0,"112":0,"113":0,"114":0,"116":0,"120":0,"121":0,"122":0,"123":0,"125":1,"126":0,"127":0,"131":0,"132":0,"133":0,"135":0,"136":0,"137":0,"138":0,"143":0,"144":0,"145":0,"146":0,"147":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"166":0,"167":0,"168":0,"173":0,"174":0,"175":0,"177":0,"178":0,"179":0,"181":0,"183":0,"185":0,"186":0,"188":0,"193":0,"194":0,"195":0,"196":0,"200":0,"201":0,"202":0,"203":0,"206":0,"207":0,"208":0,"209":0,"211":0,"213":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"252":0,"253":0,"258":0,"259":0,"260":0,"267":0,"268":0,"269":0,"270":0,"272":0,"273":0,"274":0,"281":0,"282":0,"283":0,"285":0,"286":0,"287":0,"288":0,"290":0,"291":0,"292":0,"293":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"305":0,"306":0,"307":0,"312":0,"314":0,"315":0,"316":0,"325":0,"326":0,"328":0,"329":0,"330":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"345":0,"346":0,"354":0,"355":0,"356":0,"357":0,"359":0,"360":0,"368":0,"370":0,"371":0,"372":0,"373":0,"374":0,"377":0,"378":0,"379":0,"380":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"392":0,"393":0,"394":0,"395":0,"397":0,"405":1,"406":0,"411":0,"413":0,"414":0,"415":0,"416":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"429":0,"430":0,"432":0,"433":0,"434":0,"435":0,"437":0,"438":0,"440":0,"442":0,"443":0,"447":0,"451":1,"454":1,"456":0,"457":0,"458":0,"460":0,"461":0,"462":0,"463":0,"464":0,"466":0,"467":0,"468":0,"472":0,"476":0,"477":0,"480":0,"482":1,"484":0,"485":0,"486":0,"487":0,"488":0,"490":0,"491":0,"493":0,"496":0,"499":0,"502":0,"508":1,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"517":0,"518":0,"519":0,"521":0,"522":0,"523":0,"525":0,"526":0,"527":0,"528":0,"530":0,"532":0,"533":0,"534":0,"535":0,"537":0,"538":0,"542":0,"543":0,"545":0,"551":1,"565":0,"566":0,"567":0,"569":0,"570":0,"572":0,"574":0,"575":0,"576":0,"577":0,"581":1,"582":0,"584":0,"585":0,"586":0,"588":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"602":1,"603":0,"604":0,"605":0,"607":0,"610":1,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"621":0,"623":0,"624":0,"626":0,"627":0,"631":1,"632":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"645":0,"646":0,"647":0,"649":0,"650":0,"651":0,"652":0,"654":0,"655":0,"656":0,"657":0,"658":0,"660":0,"664":0,"666":0,"671":1,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"682":0,"685":1,"691":0,"692":0,"693":0,"695":0,"696":0,"697":0,"699":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"710":0,"712":0,"713":0,"715":0,"717":0,"718":0,"719":0,"720":0,"722":0,"723":0,"724":0,"725":0,"729":0,"730":0,"735":1,"736":0,"738":0,"739":0,"740":0,"741":0,"743":0,"744":0,"745":0,"746":0,"747":0,"749":0,"750":0,"752":0,"753":0,"754":0,"755":0,"759":0,"760":0,"761":0,"762":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"777":0,"778":0,"779":0,"780":0,"781":0,"783":0,"784":0,"785":0,"786":0,"787":0,"789":0,"790":0,"792":0,"795":0,"796":0,"798":0,"799":0,"801":0,"803":0,"805":0,"806":0,"808":0,"809":0,"810":0,"813":0,"814":0,"815":0,"823":0,"824":0,"826":0,"827":0,"828":0,"829":0,"830":0,"835":0,"836":0,"837":0,"838":0,"841":0,"842":0,"843":0,"846":0,"847":0,"849":0,"850":0,"851":0,"852":0,"854":0,"855":0,"856":0,"858":0,"859":0,"861":0,"864":0,"865":0,"866":0,"869":0,"870":0,"871":0,"872":0,"878":1,"879":1,"880":0,"881":0,"882":0,"884":0,"885":0,"886":0,"888":0,"889":0,"892":0,"900":0,"903":0,"904":0,"905":0,"906":0,"909":0,"910":0,"911":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"925":0,"926":0,"927":0,"928":0,"931":1,"932":1,"933":1,"935":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/CRC32.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/CRC32.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[1,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":32,"loc":{"start":{"line":32,"column":19},"end":{"line":32,"column":34}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":14},"end":{"line":72,"column":25}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":18},"end":{"line":81,"column":29}}},"4":{"name":"(anonymous_4)","line":89,"loc":{"start":{"line":89,"column":21},"end":{"line":89,"column":37}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":24},"end":{"line":98,"column":47}}}},"statementMap":{"1":{"start":{"line":31,"column":0},"end":{"line":31,"column":79}},"2":{"start":{"line":31,"column":36},"end":{"line":31,"column":77}},"3":{"start":{"line":32,"column":0},"end":{"line":105,"column":3}},"4":{"start":{"line":37,"column":4},"end":{"line":70,"column":5}},"5":{"start":{"line":72,"column":2},"end":{"line":103,"column":4}},"6":{"start":{"line":76,"column":4},"end":{"line":76,"column":25}},"7":{"start":{"line":81,"column":4},"end":{"line":83,"column":6}},"8":{"start":{"line":82,"column":6},"end":{"line":82,"column":26}},"9":{"start":{"line":89,"column":4},"end":{"line":91,"column":6}},"10":{"start":{"line":90,"column":6},"end":{"line":90,"column":68}},"11":{"start":{"line":98,"column":4},"end":{"line":102,"column":6}},"12":{"start":{"line":99,"column":6},"end":{"line":101,"column":7}},"13":{"start":{"line":100,"column":8},"end":{"line":100,"column":70}},"14":{"start":{"line":104,"column":2},"end":{"line":104,"column":15}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":0},"end":{"line":31,"column":0}},{"start":{"line":31,"column":0},"end":{"line":31,"column":0}}]}},"code":["/* CRC32, used in Bzip2 implementation."," * This is a port of CRC32.java from the jbzip2 implementation at"," *   https://code.google.com/p/jbzip2"," * which is:"," *   Copyright (c) 2011 Matthew Francis"," *"," *   Permission is hereby granted, free of charge, to any person"," *   obtaining a copy of this software and associated documentation"," *   files (the \"Software\"), to deal in the Software without"," *   restriction, including without limitation the rights to use,"," *   copy, modify, merge, publish, distribute, sublicense, and/or sell"," *   copies of the Software, and to permit persons to whom the"," *   Software is furnished to do so, subject to the following"," *   conditions:"," *"," *   The above copyright notice and this permission notice shall be"," *   included in all copies or substantial portions of the Software."," *"," *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES"," *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND"," *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT"," *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING"," *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR"," *   OTHER DEALINGS IN THE SOFTWARE."," * This JavaScript implementation is:"," *   Copyright (c) 2013 C. Scott Ananian"," * with the same licensing terms as Matthew Francis' original implementation."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./Util'], function(Util) {","","  /**","   * A static CRC lookup table","   */","    var crc32Lookup = Util.arraycopy(Util.makeU32Buffer(256), [","    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,","    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,","    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,","    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,","    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,","    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,","    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,","    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,","    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,","    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,","    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,","    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,","    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,","    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,","    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,","    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,","    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,","    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,","    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,","    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,","    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,","    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,","    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,","    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,","    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,","    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,","    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,","    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,","    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,","    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,","    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,","    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4","  ]);","","  var CRC32 = function() {","    /**","     * The current CRC","     */","    var crc = 0xffffffff;","","    /**","     * @return The current CRC","     */","    this.getCRC = function() {","      return (~crc) >>> 0; // return an unsigned value","    };","","    /**","     * Update the CRC with a single byte","     * @param value The value to update the CRC with","     */","    this.updateCRC = function(value) {","      crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];","    };","","    /**","     * Update the CRC with a sequence of identical bytes","     * @param value The value to update the CRC with","     * @param count The number of bytes","     */","    this.updateCRCRun = function(value, count) {","      while (count-- > 0) {","        crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];","      }","    };","  };","  return CRC32;","});",""],"l":{"31":1,"32":1,"37":1,"72":1,"76":0,"81":0,"82":0,"89":0,"90":0,"98":0,"99":0,"100":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/HuffmanAllocator.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/HuffmanAllocator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":30},"end":{"line":42,"column":53}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":14},"end":{"line":52,"column":46}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":34},"end":{"line":79,"column":50}}},"4":{"name":"(anonymous_4)","line":114,"loc":{"start":{"line":114,"column":28},"end":{"line":114,"column":59}}},"5":{"name":"(anonymous_5)","line":131,"loc":{"start":{"line":131,"column":28},"end":{"line":131,"column":44}}},"6":{"name":"(anonymous_6)","line":157,"loc":{"start":{"line":157,"column":42},"end":{"line":158,"column":64}}},"7":{"name":"(anonymous_7)","line":199,"loc":{"start":{"line":199,"column":35},"end":{"line":199,"column":66}}}},"statementMap":{"1":{"start":{"line":41,"column":0},"end":{"line":41,"column":79}},"2":{"start":{"line":41,"column":36},"end":{"line":41,"column":77}},"3":{"start":{"line":42,"column":0},"end":{"line":227,"column":3}},"4":{"start":{"line":52,"column":2},"end":{"line":73,"column":4}},"5":{"start":{"line":53,"column":4},"end":{"line":53,"column":30}},"6":{"start":{"line":54,"column":4},"end":{"line":54,"column":18}},"7":{"start":{"line":55,"column":4},"end":{"line":55,"column":29}},"8":{"start":{"line":57,"column":4},"end":{"line":60,"column":5}},"9":{"start":{"line":58,"column":6},"end":{"line":58,"column":12}},"10":{"start":{"line":59,"column":6},"end":{"line":59,"column":27}},"11":{"start":{"line":61,"column":4},"end":{"line":61,"column":38}},"12":{"start":{"line":63,"column":4},"end":{"line":70,"column":5}},"13":{"start":{"line":64,"column":6},"end":{"line":64,"column":30}},"14":{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},"15":{"start":{"line":66,"column":8},"end":{"line":66,"column":17}},"16":{"start":{"line":68,"column":8},"end":{"line":68,"column":17}},"17":{"start":{"line":72,"column":4},"end":{"line":72,"column":13}},"18":{"start":{"line":79,"column":2},"end":{"line":105,"column":4}},"19":{"start":{"line":80,"column":4},"end":{"line":80,"column":30}},"20":{"start":{"line":82,"column":4},"end":{"line":82,"column":25}},"21":{"start":{"line":84,"column":4},"end":{"line":84,"column":42}},"22":{"start":{"line":85,"column":4},"end":{"line":104,"column":5}},"23":{"start":{"line":88,"column":6},"end":{"line":93,"column":7}},"24":{"start":{"line":89,"column":8},"end":{"line":89,"column":31}},"25":{"start":{"line":90,"column":8},"end":{"line":90,"column":37}},"26":{"start":{"line":92,"column":8},"end":{"line":92,"column":32}},"27":{"start":{"line":95,"column":6},"end":{"line":101,"column":7}},"28":{"start":{"line":97,"column":8},"end":{"line":97,"column":32}},"29":{"start":{"line":98,"column":8},"end":{"line":98,"column":46}},"30":{"start":{"line":100,"column":8},"end":{"line":100,"column":33}},"31":{"start":{"line":103,"column":6},"end":{"line":103,"column":29}},"32":{"start":{"line":114,"column":2},"end":{"line":124,"column":4}},"33":{"start":{"line":115,"column":4},"end":{"line":115,"column":39}},"34":{"start":{"line":116,"column":4},"end":{"line":116,"column":21}},"35":{"start":{"line":117,"column":4},"end":{"line":121,"column":5}},"36":{"start":{"line":120,"column":6},"end":{"line":120,"column":55}},"37":{"start":{"line":123,"column":4},"end":{"line":123,"column":23}},"38":{"start":{"line":131,"column":2},"end":{"line":148,"column":4}},"39":{"start":{"line":132,"column":4},"end":{"line":132,"column":37}},"40":{"start":{"line":133,"column":4},"end":{"line":133,"column":36}},"41":{"start":{"line":134,"column":4},"end":{"line":134,"column":50}},"42":{"start":{"line":136,"column":4},"end":{"line":147,"column":5}},"43":{"start":{"line":139,"column":6},"end":{"line":139,"column":27}},"44":{"start":{"line":140,"column":6},"end":{"line":140,"column":49}},"45":{"start":{"line":142,"column":6},"end":{"line":144,"column":7}},"46":{"start":{"line":143,"column":8},"end":{"line":143,"column":41}},"47":{"start":{"line":146,"column":6},"end":{"line":146,"column":51}},"48":{"start":{"line":157,"column":2},"end":{"line":188,"column":4}},"49":{"start":{"line":159,"column":4},"end":{"line":159,"column":37}},"50":{"start":{"line":160,"column":4},"end":{"line":160,"column":36}},"51":{"start":{"line":161,"column":4},"end":{"line":161,"column":50}},"52":{"start":{"line":162,"column":4},"end":{"line":162,"column":77}},"53":{"start":{"line":163,"column":4},"end":{"line":163,"column":44}},"54":{"start":{"line":165,"column":4},"end":{"line":187,"column":5}},"55":{"start":{"line":168,"column":6},"end":{"line":168,"column":27}},"56":{"start":{"line":169,"column":6},"end":{"line":169,"column":100}},"57":{"start":{"line":171,"column":6},"end":{"line":171,"column":17}},"58":{"start":{"line":172,"column":6},"end":{"line":179,"column":7}},"59":{"start":{"line":173,"column":8},"end":{"line":173,"column":79}},"60":{"start":{"line":174,"column":13},"end":{"line":179,"column":7}},"61":{"start":{"line":175,"column":8},"end":{"line":175,"column":19}},"62":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"63":{"start":{"line":177,"column":10},"end":{"line":177,"column":22}},"64":{"start":{"line":181,"column":6},"end":{"line":183,"column":7}},"65":{"start":{"line":182,"column":8},"end":{"line":182,"column":41}},"66":{"start":{"line":185,"column":6},"end":{"line":185,"column":32}},"67":{"start":{"line":186,"column":6},"end":{"line":186,"column":60}},"68":{"start":{"line":199,"column":2},"end":{"line":222,"column":4}},"69":{"start":{"line":200,"column":4},"end":{"line":206,"column":5}},"70":{"start":{"line":202,"column":6},"end":{"line":202,"column":19}},"71":{"start":{"line":204,"column":6},"end":{"line":204,"column":19}},"72":{"start":{"line":205,"column":6},"end":{"line":205,"column":13}},"73":{"start":{"line":209,"column":4},"end":{"line":209,"column":38}},"74":{"start":{"line":213,"column":4},"end":{"line":213,"column":69}},"75":{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},"76":{"start":{"line":217,"column":6},"end":{"line":217,"column":34}},"77":{"start":{"line":219,"column":6},"end":{"line":219,"column":72}},"78":{"start":{"line":220,"column":6},"end":{"line":220,"column":78}},"79":{"start":{"line":224,"column":2},"end":{"line":226,"column":5}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":0},"end":{"line":41,"column":0}},{"start":{"line":41,"column":0},"end":{"line":41,"column":0}}]},"2":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":28}},{"start":{"line":57,"column":34},"end":{"line":57,"column":61}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"4":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":6}},{"start":{"line":88,"column":6},"end":{"line":88,"column":6}}]},"5":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":11},"end":{"line":88,"column":28}},{"start":{"line":88,"column":34},"end":{"line":88,"column":66}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"7":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":28}},{"start":{"line":96,"column":12},"end":{"line":96,"column":31}},{"start":{"line":96,"column":37},"end":{"line":96,"column":69}}]},"8":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":10},"end":{"line":118,"column":44}},{"start":{"line":118,"column":50},"end":{"line":118,"column":65}}]},"9":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":44},"end":{"line":161,"column":45}},{"start":{"line":161,"column":48},"end":{"line":161,"column":49}}]},"10":{"line":162,"type":"cond-expr","locations":[{"start":{"line":162,"column":47},"end":{"line":162,"column":62}},{"start":{"line":162,"column":65},"end":{"line":162,"column":76}}]},"11":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":47},"end":{"line":169,"column":56}},{"start":{"line":169,"column":59},"end":{"line":169,"column":99}}]},"12":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]},"13":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":13},"end":{"line":174,"column":13}},{"start":{"line":174,"column":13},"end":{"line":174,"column":13}}]},"14":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"15":{"line":200,"type":"switch","locations":[{"start":{"line":201,"column":4},"end":{"line":202,"column":19}},{"start":{"line":203,"column":4},"end":{"line":205,"column":13}}]},"16":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]}},"code":["/**"," * An in-place, length restricted Canonical Huffman code length allocator"," *"," * Based on the algorithm proposed by R. L. Milidiú, A. A. Pessoa and"," * E. S. Laber in \"In-place Length-Restricted Prefix Coding\" (see:"," * http://www-di.inf.puc-rio.br/~laber/public/spire98.ps) and"," * incorporating additional ideas from the implementation of \"shcodec\""," * by Simakov Alexander (see: http://webcenter.ru/~xander/)"," *"," * This JavaScript implementation ported from HuffmanAllocator.java from"," *   https://code.google.com/p/jbzip2"," * which is:"," *"," *   Copyright (c) 2011 Matthew Francis"," *"," *   Permission is hereby granted, free of charge, to any person"," *   obtaining a copy of this software and associated documentation"," *   files (the \"Software\"), to deal in the Software without"," *   restriction, including without limitation the rights to use,"," *   copy, modify, merge, publish, distribute, sublicense, and/or sell"," *   copies of the Software, and to permit persons to whom the"," *   Software is furnished to do so, subject to the following"," *   conditions:"," *"," *   The above copyright notice and this permission notice shall be"," *   included in all copies or substantial portions of the Software."," *"," *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES"," *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND"," *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT"," *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING"," *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR"," *   OTHER DEALINGS IN THE SOFTWARE."," *"," * This JavaScript implementation is:"," *   Copyright (c) 2013 C. Scott Ananian"," * with the same licensing terms as Matthew Francis' original implementation."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./freeze','./Util'], function(freeze, Util) {","","  /**","   * FIRST() function","   * @param array The code length array","   * @param i The input position","   * @param nodesToMove The number of internal nodes to be relocated","   * @return The smallest {@code k} such that {@code nodesToMove <= k <= i} and","   *         {@code i <= (array[k] % array.length)}","   */","  var first = function(array, i, nodesToMove) {","    var length = array.length;","    var limit = i;","    var k = array.length - 2;","","    while ((i >= nodesToMove) && ((array[i] % length) > limit)) {","      k = i;","      i -= (limit - i + 1);","    }","    i = Math.max (nodesToMove - 1, i);","","    while (k > (i + 1)) {","      var temp = (i + k) >> 1;","      if ((array[temp] % length) > limit) {","        k = temp;","      } else {","        i = temp;","      }","    }","","    return k;","  };","","  /**","   * Fills the code array with extended parent pointers","   * @param array The code length array","   */","  var setExtendedParentPointers = function(array) {","    var length = array.length;","","    array[0] += array[1];","","    var headNode, tailNode, topNode, temp;","    for (headNode = 0, tailNode = 1, topNode = 2;","         tailNode < (length - 1);","         tailNode++) {","      if ((topNode >= length) || (array[headNode] < array[topNode])) {","        temp = array[headNode];","        array[headNode++] = tailNode;","      } else {","        temp = array[topNode++];","      }","","      if ((topNode >= length) ||","          ((headNode < tailNode) && (array[headNode] < array[topNode]))) {","        temp += array[headNode];","        array[headNode++] = tailNode + length;","      } else {","        temp += array[topNode++];","      }","","      array[tailNode] = temp;","    }","  };","","  /**","   * Finds the number of nodes to relocate in order to achieve a given code","   * length limit","   * @param array The code length array","   * @param maximumLength The maximum bit length for the generated codes","   * @return The number of nodes to relocate","   */","  var findNodesToRelocate = function(array, maximumLength) {","    var currentNode = array.length - 2;","    var currentDepth;","    for (currentDepth = 1;","         (currentDepth < (maximumLength - 1)) && (currentNode > 1);","         currentDepth++) {","      currentNode =  first (array, currentNode - 1, 0);","    }","","    return currentNode;","  };","","","  /**","   * A final allocation pass with no code length limit","   * @param array The code length array","   */","  var allocateNodeLengths = function(array) {","    var firstNode = array.length - 2;","    var nextNode = array.length - 1;","    var currentDepth, availableNodes, lastNode, i;","","    for (currentDepth = 1, availableNodes = 2;","         availableNodes > 0;","         currentDepth++) {","      lastNode = firstNode;","      firstNode = first (array, lastNode - 1, 0);","","      for (i = availableNodes - (lastNode - firstNode); i > 0; i--) {","        array[nextNode--] = currentDepth;","      }","","      availableNodes = (lastNode - firstNode) << 1;","    }","  };","","  /**","   * A final allocation pass that relocates nodes in order to achieve a","   * maximum code length limit","   * @param array The code length array","   * @param nodesToMove The number of internal nodes to be relocated","   * @param insertDepth The depth at which to insert relocated nodes","   */","  var allocateNodeLengthsWithRelocation = function(array, nodesToMove,","                                                   insertDepth) {","    var firstNode = array.length - 2;","    var nextNode = array.length - 1;","    var currentDepth = (insertDepth == 1) ? 2 : 1;","    var nodesLeftToMove = (insertDepth == 1) ? nodesToMove - 2 : nodesToMove;","    var availableNodes, lastNode, offset, i;","","    for (availableNodes = currentDepth << 1;","         availableNodes > 0;","         currentDepth++) {","      lastNode = firstNode;","      firstNode = (firstNode <= nodesToMove) ? firstNode : first (array, lastNode - 1, nodesToMove);","","      offset = 0;","      if (currentDepth >= insertDepth) {","        offset = Math.min (nodesLeftToMove, 1 << (currentDepth - insertDepth));","      } else if (currentDepth == (insertDepth - 1)) {","        offset = 1;","        if ((array[firstNode]) == lastNode) {","          firstNode++;","        }","      }","","      for (i = availableNodes - (lastNode - firstNode + offset); i > 0; i--) {","        array[nextNode--] = currentDepth;","      }","","      nodesLeftToMove -= offset;","      availableNodes = (lastNode - firstNode + offset) << 1;","    }","  };","","  /**","   * Allocates Canonical Huffman code lengths in place based on a sorted","   * frequency array","   * @param array On input, a sorted array of symbol frequencies; On output,","   *              an array of Canonical Huffman code lengths","   * @param maximumLength The maximum code length. Must be at least","   *                      {@code ceil(log2(array.length))}","   */","  // public","  var allocateHuffmanCodeLengths = function(array, maximumLength) {","    switch (array.length) {","    case 2:","      array[1] = 1;","    case 1:","      array[0] = 1;","      return;","    }","","    /* Pass 1 : Set extended parent pointers */","    setExtendedParentPointers (array);","","    /* Pass 2 : Find number of nodes to relocate in order to achieve","     *          maximum code length */","    var nodesToRelocate = findNodesToRelocate (array, maximumLength);","","    /* Pass 3 : Generate code lengths */","    if ((array[0] % array.length) >= nodesToRelocate) {","      allocateNodeLengths (array);","    } else {","      var insertDepth = maximumLength - (Util.fls(nodesToRelocate - 1));","      allocateNodeLengthsWithRelocation (array, nodesToRelocate, insertDepth);","    }","  };","","  return freeze({","    allocateHuffmanCodeLengths: allocateHuffmanCodeLengths","  });","});",""],"l":{"41":1,"42":1,"52":1,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"65":0,"66":0,"68":0,"72":0,"79":1,"80":0,"82":0,"84":0,"85":0,"88":0,"89":0,"90":0,"92":0,"95":0,"97":0,"98":0,"100":0,"103":0,"114":1,"115":0,"116":0,"117":0,"120":0,"123":0,"131":1,"132":0,"133":0,"134":0,"136":0,"139":0,"140":0,"142":0,"143":0,"146":0,"157":1,"159":0,"160":0,"161":0,"162":0,"163":0,"165":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"181":0,"182":0,"185":0,"186":0,"199":1,"200":0,"202":0,"204":0,"205":0,"209":0,"213":0,"216":0,"217":0,"219":0,"220":0,"224":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Dmc.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Dmc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":39,"loc":{"start":{"line":39,"column":60},"end":{"line":39,"column":104}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":17},"end":{"line":62,"column":49}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":29},"end":{"line":69,"column":51}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":18},"end":{"line":78,"column":60}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":35},"end":{"line":98,"column":62}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":31},"end":{"line":122,"column":48}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":31},"end":{"line":132,"column":42}}},"8":{"name":"(anonymous_8)","line":144,"loc":{"start":{"line":144,"column":54},"end":{"line":144,"column":101}}},"9":{"name":"(anonymous_9)","line":174,"loc":{"start":{"line":174,"column":58},"end":{"line":174,"column":98}}}},"statementMap":{"1":{"start":{"line":38,"column":0},"end":{"line":38,"column":79}},"2":{"start":{"line":38,"column":36},"end":{"line":38,"column":77}},"3":{"start":{"line":39,"column":0},"end":{"line":197,"column":3}},"4":{"start":{"line":48,"column":0},"end":{"line":48,"column":27}},"5":{"start":{"line":49,"column":0},"end":{"line":49,"column":25}},"6":{"start":{"line":50,"column":0},"end":{"line":50,"column":27}},"7":{"start":{"line":51,"column":0},"end":{"line":51,"column":28}},"8":{"start":{"line":52,"column":0},"end":{"line":52,"column":28}},"9":{"start":{"line":53,"column":0},"end":{"line":53,"column":23}},"10":{"start":{"line":54,"column":0},"end":{"line":54,"column":22}},"11":{"start":{"line":59,"column":0},"end":{"line":59,"column":30}},"12":{"start":{"line":60,"column":0},"end":{"line":60,"column":19}},"13":{"start":{"line":62,"column":0},"end":{"line":68,"column":2}},"14":{"start":{"line":63,"column":2},"end":{"line":63,"column":16}},"15":{"start":{"line":64,"column":2},"end":{"line":65,"column":63}},"16":{"start":{"line":66,"column":2},"end":{"line":66,"column":40}},"17":{"start":{"line":67,"column":2},"end":{"line":67,"column":15}},"18":{"start":{"line":69,"column":0},"end":{"line":76,"column":2}},"19":{"start":{"line":70,"column":2},"end":{"line":70,"column":8}},"20":{"start":{"line":71,"column":2},"end":{"line":71,"column":78}},"21":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"22":{"start":{"line":73,"column":4},"end":{"line":73,"column":33}},"23":{"start":{"line":75,"column":2},"end":{"line":75,"column":17}},"24":{"start":{"line":78,"column":0},"end":{"line":97,"column":2}},"25":{"start":{"line":79,"column":2},"end":{"line":79,"column":11}},"26":{"start":{"line":81,"column":2},"end":{"line":81,"column":21}},"27":{"start":{"line":82,"column":2},"end":{"line":82,"column":19}},"28":{"start":{"line":83,"column":2},"end":{"line":83,"column":47}},"29":{"start":{"line":84,"column":2},"end":{"line":84,"column":47}},"30":{"start":{"line":85,"column":2},"end":{"line":85,"column":18}},"31":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"32":{"start":{"line":87,"column":4},"end":{"line":87,"column":48}},"33":{"start":{"line":90,"column":2},"end":{"line":94,"column":3}},"34":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"35":{"start":{"line":92,"column":6},"end":{"line":92,"column":43}},"36":{"start":{"line":96,"column":2},"end":{"line":96,"column":31}},"37":{"start":{"line":98,"column":0},"end":{"line":121,"column":2}},"38":{"start":{"line":99,"column":2},"end":{"line":99,"column":37}},"39":{"start":{"line":100,"column":2},"end":{"line":100,"column":24}},"40":{"start":{"line":101,"column":2},"end":{"line":101,"column":8}},"41":{"start":{"line":102,"column":2},"end":{"line":105,"column":3}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":14}},"43":{"start":{"line":108,"column":2},"end":{"line":108,"column":48}},"44":{"start":{"line":109,"column":2},"end":{"line":109,"column":27}},"45":{"start":{"line":110,"column":2},"end":{"line":110,"column":29}},"46":{"start":{"line":112,"column":2},"end":{"line":112,"column":27}},"47":{"start":{"line":113,"column":2},"end":{"line":118,"column":3}},"48":{"start":{"line":114,"column":4},"end":{"line":114,"column":58}},"49":{"start":{"line":115,"column":4},"end":{"line":115,"column":36}},"50":{"start":{"line":116,"column":4},"end":{"line":116,"column":36}},"51":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"52":{"start":{"line":120,"column":2},"end":{"line":120,"column":17}},"53":{"start":{"line":122,"column":0},"end":{"line":131,"column":2}},"54":{"start":{"line":123,"column":2},"end":{"line":123,"column":26}},"55":{"start":{"line":124,"column":2},"end":{"line":124,"column":28}},"56":{"start":{"line":125,"column":2},"end":{"line":125,"column":28}},"57":{"start":{"line":126,"column":2},"end":{"line":129,"column":3}},"58":{"start":{"line":127,"column":6},"end":{"line":127,"column":27}},"59":{"start":{"line":128,"column":6},"end":{"line":128,"column":17}},"60":{"start":{"line":130,"column":2},"end":{"line":130,"column":51}},"61":{"start":{"line":132,"column":0},"end":{"line":142,"column":2}},"62":{"start":{"line":133,"column":2},"end":{"line":133,"column":26}},"63":{"start":{"line":134,"column":2},"end":{"line":134,"column":35}},"64":{"start":{"line":135,"column":2},"end":{"line":135,"column":28}},"65":{"start":{"line":136,"column":2},"end":{"line":139,"column":3}},"66":{"start":{"line":137,"column":6},"end":{"line":137,"column":27}},"67":{"start":{"line":138,"column":6},"end":{"line":138,"column":17}},"68":{"start":{"line":140,"column":2},"end":{"line":140,"column":51}},"69":{"start":{"line":141,"column":2},"end":{"line":141,"column":16}},"70":{"start":{"line":144,"column":0},"end":{"line":172,"column":3}},"71":{"start":{"line":146,"column":2},"end":{"line":146,"column":22}},"72":{"start":{"line":147,"column":2},"end":{"line":147,"column":48}},"73":{"start":{"line":148,"column":2},"end":{"line":148,"column":48}},"74":{"start":{"line":149,"column":2},"end":{"line":149,"column":48}},"75":{"start":{"line":150,"column":2},"end":{"line":150,"column":48}},"76":{"start":{"line":152,"column":2},"end":{"line":152,"column":40}},"77":{"start":{"line":153,"column":2},"end":{"line":153,"column":29}},"78":{"start":{"line":155,"column":2},"end":{"line":156,"column":47}},"79":{"start":{"line":157,"column":2},"end":{"line":157,"column":17}},"80":{"start":{"line":158,"column":2},"end":{"line":166,"column":3}},"81":{"start":{"line":159,"column":4},"end":{"line":159,"column":33}},"82":{"start":{"line":160,"column":4},"end":{"line":163,"column":5}},"83":{"start":{"line":161,"column":6},"end":{"line":161,"column":21}},"84":{"start":{"line":162,"column":6},"end":{"line":162,"column":12}},"85":{"start":{"line":164,"column":4},"end":{"line":164,"column":18}},"86":{"start":{"line":165,"column":4},"end":{"line":165,"column":13}},"87":{"start":{"line":167,"column":2},"end":{"line":167,"column":37}},"88":{"start":{"line":168,"column":2},"end":{"line":171,"column":3}},"89":{"start":{"line":169,"column":4},"end":{"line":170,"column":60}},"90":{"start":{"line":174,"column":0},"end":{"line":194,"column":3}},"91":{"start":{"line":176,"column":2},"end":{"line":176,"column":51}},"92":{"start":{"line":177,"column":2},"end":{"line":177,"column":51}},"93":{"start":{"line":179,"column":2},"end":{"line":179,"column":39}},"94":{"start":{"line":180,"column":2},"end":{"line":180,"column":22}},"95":{"start":{"line":182,"column":2},"end":{"line":183,"column":47}},"96":{"start":{"line":184,"column":2},"end":{"line":184,"column":18}},"97":{"start":{"line":185,"column":2},"end":{"line":192,"column":3}},"98":{"start":{"line":186,"column":4},"end":{"line":186,"column":25}},"99":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"100":{"start":{"line":188,"column":6},"end":{"line":188,"column":12}},"101":{"start":{"line":190,"column":4},"end":{"line":190,"column":28}},"102":{"start":{"line":191,"column":4},"end":{"line":191,"column":14}},"103":{"start":{"line":193,"column":2},"end":{"line":193,"column":23}},"104":{"start":{"line":196,"column":0},"end":{"line":196,"column":11}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":0},"end":{"line":38,"column":0}},{"start":{"line":38,"column":0},"end":{"line":38,"column":0}}]},"2":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":26},"end":{"line":64,"column":42}},{"start":{"line":65,"column":4},"end":{"line":65,"column":62}}]},"3":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":59},"end":{"line":71,"column":69}},{"start":{"line":71,"column":72},"end":{"line":71,"column":76}}]},"4":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":18},"end":{"line":83,"column":26}},{"start":{"line":83,"column":30},"end":{"line":83,"column":46}}]},"5":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":18},"end":{"line":84,"column":26}},{"start":{"line":84,"column":30},"end":{"line":84,"column":46}}]},"6":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"7":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":34}},{"start":{"line":103,"column":8},"end":{"line":103,"column":45}}]},"8":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"9":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"10":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":10},"end":{"line":146,"column":15}},{"start":{"line":146,"column":19},"end":{"line":146,"column":21}}]},"11":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":18},"end":{"line":147,"column":26}},{"start":{"line":147,"column":31},"end":{"line":147,"column":47}}]},"12":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":18},"end":{"line":148,"column":26}},{"start":{"line":148,"column":31},"end":{"line":148,"column":47}}]},"13":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":49},"end":{"line":155,"column":52}},{"start":{"line":155,"column":55},"end":{"line":155,"column":58}}]},"14":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"15":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"16":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":49},"end":{"line":182,"column":52}},{"start":{"line":182,"column":55},"end":{"line":182,"column":58}}]},"17":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]}},"code":["/**"," * Implementation of Dynamic Markov Compression, using byte-oriented"," * nodes/transitions."," *"," * Currently no model-shrinking is done, so be careful trying to use"," * this on large inputs!"," *"," * Notes for the future / TO DO:"," *"," * Add node merging to Dmc:"," *  - once (total states traversed / total node count) exceeds a certain value"," *    - find the median node w/rt total visits"," *    - combine all nodes w/ less visits into a single node, with transitions"," *      to node[0] - node[255] (initial context-1 states)"," *      - initially transition counts are zero?  or summed from components?"," *        needs to be summed so kirchoff principle holds"," *    - halve the edge counts of all nodes, to provide for adaptation"," *      - enforce property that all nodes point \"higher\" except for"," *        links to nodes 0-255.  So we can resum all nodes in one pass,"," *        after resetting all node.sum to zero. X YES because we know"," *        what the total sum must be, so we can arrange to scale to maintain"," *        proper sum. XXX what about node 0-255? XXX maybe just clear all"," *        edge counts XXX"," *"," * Fix buglet: ensure that kirchoff principle *exactly* holds by"," * paying attention to rounding when we distribute edge counts.  track"," * highest edge and give (desiredSum - newSum) extra counts to that"," * outgoing edge? add one to each nonzero edge until all gone?"," *"," * Split 'to' nodes when to.sum grows too high -- only if we're"," * highest incoming edge?  Fix bug again here with saturating counts;"," * we can't ignore counts w/o violating kirchoff principle, so we need"," * to clone it.  Maybe start trying to clone early (before our counter"," * saturates) so we have a better chance of cloning on the high"," * incoming edge? XXX we don't track incoming edges.  XXX so just"," * clone when we visit."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./MTFModel', './RangeCoder', './Stream', './Util'],function(MTFModel, RangeCoder, Stream, Util){","","// nm = no model cloning, MAX_TRANS_CNT=0xFF, MAX_MODEL_PROB=0xFFFF","// nm2 = \"                            0xFFFF                 0xFFFF","// nm3 = \"                             0xFFF                 0x0FFF","// nm4 = \"                            0xFFFF                   0xFF","// cl1 = model cloning, MAX_TRANS_CNT=0xFFFF  MAX_MODEL_PROB=0xFF","// cl2 = model cloning, MAX_TRANS_CNT=  0xFF  MAX_MODEL_PROB=0xFF","// cl3 = model cloning, MAX_TRANS_CNT=0xFFFF  MAX_MODEL_PROB=0xFFFF","var MAX_TRANS_CNT = 0xFFFF;","var DEFAULT_MIN_CNT1 = 8;","var DEFAULT_MIN_CNT2 = 128;","var MODEL_PROB_MAX = 0xFF00;","var MODEL_PROB_INCR= 0x0100;","var CLONE_MODELS=false;","var PRINT_STATS=false; // for quick benchmarking","","// XXX need to limit growth of model (throw away and retrain if model","//     gets too large)","","var Dmc = Object.create(null);","Dmc.MAGIC = 'dmc!';","","var MarkovNode = function(coder, size, optModel) {","  this.out = [];","  this.model = optModel ? optModel.clone() :","    new MTFModel(coder, size, MODEL_PROB_MAX, MODEL_PROB_INCR);","  this.count = Util.makeU16Buffer(size);","  this.sum = 0;","};","MarkovNode.prototype.clone = function(coder, size) {","  var i;","  var newNode = new MarkovNode(coder, size, CLONE_MODELS ? this.model : null);","  for (i=0; i<size; i++) {","    newNode.out[i] = this.out[i];","  }","  return newNode;","};","","var MarkovModel = function(coder, size, MIN_CNT1, MIN_CNT2) {","  var i, j;","  // initial model is 'size' states, completely linked.","  this.coder = coder;","  this.size = size;","  this.MIN_CNT1 = MIN_CNT1 || DEFAULT_MIN_CNT1;","  this.MIN_CNT2 = MIN_CNT2 || DEFAULT_MIN_CNT2;","  this.nodes = [];","  for (i=0; i<size; i++) {","    this.nodes[i] = new MarkovNode(coder, size);","  }","  // now link nodes","  for (i=0; i<size; i++) {","    for (j=0; j<size; j++) {","      this.nodes[i].out[j] = this.nodes[j];","    }","  }","  // select an arbitrary node as the start state.","  this.current = this.nodes[0];","};","MarkovModel.prototype.maybeSplit = function(from, symbol, to) {","  var trans_cnt = from.count[symbol];","  var next_cnt = to.sum;","  var i;","  if ( (trans_cnt <= this.MIN_CNT1) ||","       (next_cnt - trans_cnt <= this.MIN_CNT2) ) {","    return to; // no split","  }","","  // split this guy!","  var newNode = to.clone(this.coder, this.size);","  this.nodes.push(newNode);","  from.out[symbol] = newNode;","  // distribute transition counts among new and cloned node","  newNode.sum = to.sum = 0;","  for (i=0; i<this.size; i++) {","    newNode.count[i] = to.count[i] * trans_cnt / next_cnt;","    newNode.sum += newNode.count[i];","    to.count[i] -= newNode.count[i];","    to.sum += to.count[i];","  }","","  return newNode;","};","MarkovModel.prototype.encode = function(symbol) {","  var from = this.current;","  from.model.encode(symbol);","  var to = from.out[symbol];","  if (from.count[symbol] !== MAX_TRANS_CNT) {","      from.count[symbol]++;","      from.sum++;","  }","  this.current = this.maybeSplit(from, symbol, to);","};","MarkovModel.prototype.decode = function() {","  var from = this.current;","  var symbol = from.model.decode();","  var to = from.out[symbol];","  if (from.count[symbol] !== MAX_TRANS_CNT) {","      from.count[symbol]++;","      from.sum++;","  }","  this.current = this.maybeSplit(from, symbol, to);","  return symbol;","};","","Dmc.compressFile = Util.compressFileHelper(Dmc.MAGIC, function(inStream, outStream, fileSize, props) {","","  props = props || {};","  var MIN_CNT1 = (+props.m) || DEFAULT_MIN_CNT1;","  var MIN_CNT2 = (+props.n) || DEFAULT_MIN_CNT2;","  Util.writeUnsignedNumber(outStream, MIN_CNT1);","  Util.writeUnsignedNumber(outStream, MIN_CNT2);","","  var range = new RangeCoder(outStream);","  range.encodeStart(0xCA, 0);","","  var mm = new MarkovModel(range, (fileSize<0) ? 257 : 256,","                           MIN_CNT1, MIN_CNT2);","  var inSize = 0;","  while (inSize !== fileSize) {","    var ch = inStream.readByte();","    if (ch===Stream.EOF) {","      mm.encode(256); // end of stream","      break;","    }","    mm.encode(ch);","    inSize++;","  }","  var outSize = range.encodeFinish();","  if (PRINT_STATS) {","    console.log('M1', mm.MIN_CNT1, 'M2', mm.MIN_CNT2,","                'states', mm.nodes.length, 'size', outSize);","  }","});","","Dmc.decompressFile = Util.decompressFileHelper(Dmc.MAGIC, function(inStream, outStream, fileSize) {","","  var MIN_CNT1 = Util.readUnsignedNumber(inStream);","  var MIN_CNT2 = Util.readUnsignedNumber(inStream);","","  var range = new RangeCoder(inStream);","  range.decodeStart();","","  var mm = new MarkovModel(range, (fileSize<0) ? 257 : 256,","                           MIN_CNT1, MIN_CNT2);","  var outSize = 0;","  while (outSize !== fileSize) {","    var ch = mm.decode();","    if (ch===256) {","      break; // EOF","    }","    outStream.writeByte(ch);","    outSize++;","  }","  range.decodeFinish();","});","","return Dmc;","});",""],"l":{"38":1,"39":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"59":1,"60":1,"62":1,"63":0,"64":0,"66":0,"67":0,"69":1,"70":0,"71":0,"72":0,"73":0,"75":0,"78":1,"79":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"90":0,"91":0,"92":0,"96":0,"98":1,"99":0,"100":0,"101":0,"102":0,"104":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"120":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0,"141":0,"144":1,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"153":0,"155":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"164":0,"165":0,"167":0,"168":0,"169":0,"174":1,"176":0,"177":0,"179":0,"180":0,"182":0,"184":0,"185":0,"186":0,"187":0,"188":0,"190":0,"191":0,"193":0,"196":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Lzjb.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Lzjb.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":30},"end":{"line":3,"column":52}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":56},"end":{"line":77,"column":103}}},"3":{"name":"(anonymous_3)","line":120,"loc":{"start":{"line":120,"column":17},"end":{"line":120,"column":33}}},"4":{"name":"(anonymous_4)","line":130,"loc":{"start":{"line":130,"column":18},"end":{"line":130,"column":29}}},"5":{"name":"(anonymous_5)","line":139,"loc":{"start":{"line":139,"column":14},"end":{"line":139,"column":25}}},"6":{"name":"(anonymous_6)","line":144,"loc":{"start":{"line":144,"column":16},"end":{"line":144,"column":32}}},"7":{"name":"(anonymous_7)","line":255,"loc":{"start":{"line":255,"column":60},"end":{"line":255,"column":99}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":300,"column":3}},"4":{"start":{"line":40,"column":0},"end":{"line":40,"column":31}},"5":{"start":{"line":41,"column":0},"end":{"line":41,"column":20}},"6":{"start":{"line":44,"column":0},"end":{"line":49,"column":28}},"7":{"start":{"line":50,"column":0},"end":{"line":50,"column":21}},"8":{"start":{"line":55,"column":0},"end":{"line":55,"column":20}},"9":{"start":{"line":77,"column":0},"end":{"line":239,"column":3}},"10":{"start":{"line":78,"column":4},"end":{"line":84,"column":13}},"11":{"start":{"line":85,"column":4},"end":{"line":85,"column":15}},"12":{"start":{"line":105,"column":4},"end":{"line":105,"column":39}},"13":{"start":{"line":106,"column":4},"end":{"line":106,"column":19}},"14":{"start":{"line":107,"column":4},"end":{"line":113,"column":5}},"15":{"start":{"line":108,"column":8},"end":{"line":108,"column":25}},"16":{"start":{"line":109,"column":8},"end":{"line":109,"column":52}},"17":{"start":{"line":110,"column":8},"end":{"line":110,"column":40}},"18":{"start":{"line":111,"column":8},"end":{"line":111,"column":55}},"19":{"start":{"line":111,"column":21},"end":{"line":111,"column":55}},"20":{"start":{"line":112,"column":8},"end":{"line":112,"column":46}},"21":{"start":{"line":112,"column":37},"end":{"line":112,"column":46}},"22":{"start":{"line":116,"column":4},"end":{"line":116,"column":54}},"23":{"start":{"line":118,"column":4},"end":{"line":118,"column":50}},"24":{"start":{"line":119,"column":4},"end":{"line":119,"column":22}},"25":{"start":{"line":120,"column":4},"end":{"line":126,"column":6}},"26":{"start":{"line":121,"column":8},"end":{"line":121,"column":36}},"27":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"28":{"start":{"line":123,"column":12},"end":{"line":123,"column":26}},"29":{"start":{"line":125,"column":8},"end":{"line":125,"column":21}},"30":{"start":{"line":128,"column":4},"end":{"line":128,"column":42}},"31":{"start":{"line":129,"column":4},"end":{"line":129,"column":19}},"32":{"start":{"line":130,"column":4},"end":{"line":136,"column":6}},"33":{"start":{"line":131,"column":8},"end":{"line":131,"column":14}},"34":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":46}},"36":{"start":{"line":135,"column":8},"end":{"line":135,"column":19}},"37":{"start":{"line":138,"column":4},"end":{"line":138,"column":22}},"38":{"start":{"line":139,"column":4},"end":{"line":143,"column":6}},"39":{"start":{"line":140,"column":8},"end":{"line":141,"column":34}},"40":{"start":{"line":141,"column":12},"end":{"line":141,"column":34}},"41":{"start":{"line":142,"column":8},"end":{"line":142,"column":35}},"42":{"start":{"line":144,"column":4},"end":{"line":146,"column":6}},"43":{"start":{"line":145,"column":8},"end":{"line":145,"column":29}},"44":{"start":{"line":148,"column":4},"end":{"line":148,"column":35}},"45":{"start":{"line":149,"column":4},"end":{"line":149,"column":30}},"46":{"start":{"line":150,"column":4},"end":{"line":237,"column":5}},"47":{"start":{"line":151,"column":8},"end":{"line":151,"column":23}},"48":{"start":{"line":152,"column":8},"end":{"line":152,"column":30}},"49":{"start":{"line":152,"column":24},"end":{"line":152,"column":30}},"50":{"start":{"line":154,"column":8},"end":{"line":159,"column":9}},"51":{"start":{"line":155,"column":12},"end":{"line":155,"column":22}},"52":{"start":{"line":156,"column":12},"end":{"line":156,"column":25}},"53":{"start":{"line":157,"column":12},"end":{"line":157,"column":29}},"54":{"start":{"line":158,"column":12},"end":{"line":158,"column":23}},"55":{"start":{"line":161,"column":8},"end":{"line":161,"column":23}},"56":{"start":{"line":162,"column":8},"end":{"line":165,"column":9}},"57":{"start":{"line":163,"column":12},"end":{"line":163,"column":45}},"58":{"start":{"line":164,"column":12},"end":{"line":164,"column":18}},"59":{"start":{"line":166,"column":8},"end":{"line":166,"column":23}},"60":{"start":{"line":167,"column":8},"end":{"line":171,"column":9}},"61":{"start":{"line":168,"column":12},"end":{"line":168,"column":45}},"62":{"start":{"line":169,"column":12},"end":{"line":169,"column":22}},"63":{"start":{"line":170,"column":12},"end":{"line":170,"column":21}},"64":{"start":{"line":173,"column":8},"end":{"line":173,"column":43}},"65":{"start":{"line":174,"column":8},"end":{"line":174,"column":28}},"66":{"start":{"line":175,"column":8},"end":{"line":175,"column":28}},"67":{"start":{"line":176,"column":8},"end":{"line":176,"column":19}},"68":{"start":{"line":177,"column":8},"end":{"line":177,"column":49}},"69":{"start":{"line":178,"column":8},"end":{"line":178,"column":36}},"70":{"start":{"line":179,"column":8},"end":{"line":195,"column":9}},"71":{"start":{"line":180,"column":12},"end":{"line":180,"column":62}},"72":{"start":{"line":181,"column":12},"end":{"line":181,"column":53}},"73":{"start":{"line":182,"column":12},"end":{"line":182,"column":47}},"74":{"start":{"line":183,"column":12},"end":{"line":183,"column":51}},"75":{"start":{"line":184,"column":12},"end":{"line":184,"column":51}},"76":{"start":{"line":188,"column":12},"end":{"line":191,"column":44}},"77":{"start":{"line":189,"column":16},"end":{"line":189,"column":28}},"78":{"start":{"line":190,"column":19},"end":{"line":191,"column":44}},"79":{"start":{"line":190,"column":36},"end":{"line":190,"column":44}},"80":{"start":{"line":190,"column":45},"end":{"line":190,"column":53}},"81":{"start":{"line":191,"column":17},"end":{"line":191,"column":44}},"82":{"start":{"line":191,"column":34},"end":{"line":191,"column":42}},"83":{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},"84":{"start":{"line":193,"column":16},"end":{"line":193,"column":46}},"85":{"start":{"line":198,"column":8},"end":{"line":199,"column":42}},"86":{"start":{"line":199,"column":12},"end":{"line":199,"column":42}},"87":{"start":{"line":200,"column":8},"end":{"line":200,"column":31}},"88":{"start":{"line":202,"column":8},"end":{"line":236,"column":9}},"89":{"start":{"line":203,"column":12},"end":{"line":203,"column":45}},"90":{"start":{"line":204,"column":12},"end":{"line":204,"column":22}},"91":{"start":{"line":205,"column":12},"end":{"line":205,"column":22}},"92":{"start":{"line":208,"column":12},"end":{"line":208,"column":37}},"93":{"start":{"line":209,"column":12},"end":{"line":209,"column":23}},"94":{"start":{"line":209,"column":24},"end":{"line":209,"column":35}},"95":{"start":{"line":209,"column":36},"end":{"line":209,"column":47}},"96":{"start":{"line":210,"column":12},"end":{"line":210,"column":55}},"97":{"start":{"line":211,"column":12},"end":{"line":211,"column":49}},"98":{"start":{"line":212,"column":12},"end":{"line":226,"column":13}},"99":{"start":{"line":213,"column":16},"end":{"line":213,"column":38}},"100":{"start":{"line":213,"column":32},"end":{"line":213,"column":38}},"101":{"start":{"line":214,"column":16},"end":{"line":222,"column":17}},"102":{"start":{"line":215,"column":20},"end":{"line":215,"column":80}},"103":{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},"104":{"start":{"line":217,"column":24},"end":{"line":217,"column":51}},"105":{"start":{"line":218,"column":24},"end":{"line":218,"column":54}},"106":{"start":{"line":220,"column":24},"end":{"line":220,"column":28}},"107":{"start":{"line":223,"column":16},"end":{"line":223,"column":55}},"108":{"start":{"line":223,"column":49},"end":{"line":223,"column":55}},"109":{"start":{"line":224,"column":16},"end":{"line":224,"column":27}},"110":{"start":{"line":225,"column":16},"end":{"line":225,"column":27}},"111":{"start":{"line":227,"column":12},"end":{"line":230,"column":13}},"112":{"start":{"line":229,"column":16},"end":{"line":229,"column":43}},"113":{"start":{"line":231,"column":12},"end":{"line":231,"column":22}},"114":{"start":{"line":233,"column":12},"end":{"line":234,"column":31}},"115":{"start":{"line":235,"column":12},"end":{"line":235,"column":46}},"116":{"start":{"line":238,"column":4},"end":{"line":238,"column":14}},"117":{"start":{"line":255,"column":0},"end":{"line":296,"column":3}},"118":{"start":{"line":256,"column":4},"end":{"line":260,"column":13}},"119":{"start":{"line":261,"column":4},"end":{"line":261,"column":15}},"120":{"start":{"line":263,"column":4},"end":{"line":263,"column":50}},"121":{"start":{"line":264,"column":4},"end":{"line":264,"column":22}},"122":{"start":{"line":266,"column":4},"end":{"line":266,"column":35}},"123":{"start":{"line":268,"column":4},"end":{"line":295,"column":5}},"124":{"start":{"line":269,"column":8},"end":{"line":269,"column":32}},"125":{"start":{"line":270,"column":8},"end":{"line":270,"column":29}},"126":{"start":{"line":270,"column":23},"end":{"line":270,"column":29}},"127":{"start":{"line":272,"column":8},"end":{"line":276,"column":9}},"128":{"start":{"line":273,"column":12},"end":{"line":273,"column":25}},"129":{"start":{"line":274,"column":12},"end":{"line":274,"column":24}},"130":{"start":{"line":275,"column":12},"end":{"line":275,"column":36}},"131":{"start":{"line":277,"column":8},"end":{"line":294,"column":9}},"132":{"start":{"line":278,"column":12},"end":{"line":278,"column":58}},"133":{"start":{"line":279,"column":12},"end":{"line":279,"column":71}},"134":{"start":{"line":280,"column":12},"end":{"line":280,"column":37}},"135":{"start":{"line":281,"column":12},"end":{"line":281,"column":46}},"136":{"start":{"line":281,"column":25},"end":{"line":281,"column":46}},"137":{"start":{"line":282,"column":12},"end":{"line":282,"column":46}},"138":{"start":{"line":282,"column":30},"end":{"line":282,"column":46}},"139":{"start":{"line":283,"column":12},"end":{"line":288,"column":13}},"140":{"start":{"line":284,"column":16},"end":{"line":284,"column":56}},"141":{"start":{"line":285,"column":16},"end":{"line":285,"column":39}},"142":{"start":{"line":286,"column":16},"end":{"line":286,"column":64}},"143":{"start":{"line":286,"column":50},"end":{"line":286,"column":62}},"144":{"start":{"line":287,"column":16},"end":{"line":287,"column":54}},"145":{"start":{"line":287,"column":44},"end":{"line":287,"column":52}},"146":{"start":{"line":290,"column":12},"end":{"line":290,"column":35}},"147":{"start":{"line":291,"column":12},"end":{"line":291,"column":36}},"148":{"start":{"line":292,"column":12},"end":{"line":292,"column":60}},"149":{"start":{"line":292,"column":46},"end":{"line":292,"column":58}},"150":{"start":{"line":293,"column":12},"end":{"line":293,"column":40}},"151":{"start":{"line":293,"column":30},"end":{"line":293,"column":40}},"152":{"start":{"line":299,"column":0},"end":{"line":299,"column":12}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"3":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"4":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"5":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":21}},{"start":{"line":112,"column":25},"end":{"line":112,"column":35}}]},"6":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":8}},{"start":{"line":122,"column":8},"end":{"line":122,"column":8}}]},"7":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":8}},{"start":{"line":140,"column":8},"end":{"line":140,"column":8}}]},"8":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"9":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"10":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":8}},{"start":{"line":162,"column":8},"end":{"line":162,"column":8}}]},"11":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":8}},{"start":{"line":167,"column":8},"end":{"line":167,"column":8}}]},"12":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":12},"end":{"line":188,"column":12}},{"start":{"line":188,"column":12},"end":{"line":188,"column":12}}]},"13":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":16},"end":{"line":188,"column":24}},{"start":{"line":188,"column":28},"end":{"line":188,"column":38}}]},"14":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":19},"end":{"line":190,"column":19}},{"start":{"line":190,"column":19},"end":{"line":190,"column":19}}]},"15":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":17},"end":{"line":191,"column":17}},{"start":{"line":191,"column":17},"end":{"line":191,"column":17}}]},"16":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":12}},{"start":{"line":192,"column":12},"end":{"line":192,"column":12}}]},"17":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":16},"end":{"line":192,"column":25}},{"start":{"line":192,"column":29},"end":{"line":192,"column":38}},{"start":{"line":192,"column":42},"end":{"line":192,"column":51}}]},"18":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"19":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":16},"end":{"line":213,"column":16}},{"start":{"line":213,"column":16},"end":{"line":213,"column":16}}]},"20":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":20},"end":{"line":216,"column":20}},{"start":{"line":216,"column":20},"end":{"line":216,"column":20}}]},"21":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":16},"end":{"line":223,"column":16}},{"start":{"line":223,"column":16},"end":{"line":223,"column":16}}]},"22":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":12}},{"start":{"line":227,"column":12},"end":{"line":227,"column":12}}]},"23":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":8},"end":{"line":270,"column":8}},{"start":{"line":270,"column":8},"end":{"line":270,"column":8}}]},"24":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"25":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":8}},{"start":{"line":277,"column":8},"end":{"line":277,"column":8}}]},"26":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":12},"end":{"line":281,"column":12}},{"start":{"line":281,"column":12},"end":{"line":281,"column":12}}]},"27":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":12}},{"start":{"line":282,"column":12},"end":{"line":282,"column":12}}]},"28":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":16},"end":{"line":286,"column":16}},{"start":{"line":286,"column":16},"end":{"line":286,"column":16}}]},"29":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":16},"end":{"line":287,"column":16}},{"start":{"line":287,"column":16},"end":{"line":287,"column":16}}]},"30":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":12}},{"start":{"line":292,"column":12},"end":{"line":292,"column":12}}]},"31":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":12},"end":{"line":293,"column":12}},{"start":{"line":293,"column":12},"end":{"line":293,"column":12}}]}},"code":["/* LZJB compression: http://en.wikipedia.org/wiki/LZJB */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./Stream','./Util'], function(Stream,Util) {","/**","$Id: Iuppiter.js 3026 2010-06-23 10:03:13Z Bear $","","Copyright (c) 2010 Nuwa Information Co., Ltd, and individual contributors.","All rights reserved.","","Redistribution and use in source and binary forms, with or without","modification, are permitted provided that the following conditions are met:","","  1. Redistributions of source code must retain the above copyright notice,","     this list of conditions and the following disclaimer.","","  2. Redistributions in binary form must reproduce the above copyright","     notice, this list of conditions and the following disclaimer in the","     documentation and/or other materials provided with the distribution.","","  3. Neither the name of Nuwa Information nor the names of its contributors","     may be used to endorse or promote products derived from this software","     without specific prior written permission.","","THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"","AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE","DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE","FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL","DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR","SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER","CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,","OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","","$Author: Bear $","$Date: 2010-06-23 18:03:13 +0800 (星期三, 23 六月 2010) $","$Revision: 3026 $","*/","","var Lzjb = Object.create(null);","Lzjb.MAGIC = 'lzjb';","","// Constants was used for compress/decompress function.","var NBBY = 8,","    MATCH_BITS = 6,","    MATCH_MIN = 3,","    MATCH_MAX = ((1 << MATCH_BITS) + (MATCH_MIN - 1)),","    OFFSET_MASK = ((1 << (16 - MATCH_BITS)) - 1),","    LEMPEL_SIZE_BASE = 1024;","var EOF = Stream.EOF;","","// set C_COMPAT to true if you need to decompress with the (untweaked) C lzjb","// implementation, which breaks if offset==0; the javascript","// implementation uses 0 to indicate an offset of OFFSET_MASK+1.","var C_COMPAT = true;","","/**"," * Compress string or byte array using fast and efficient algorithm."," *"," * Because of weak of javascript's natural, many compression algorithm"," * become useless in javascript implementation. The main problem is"," * performance, even the simple Huffman, LZ77/78 algorithm will take many"," * many time to operate. We use LZJB algorithm to do that, it suprisingly"," * fulfills our requirement to compress string fastly and efficiently."," *"," * Our implementation is based on"," * http://src.opensolaris.org/source/raw/onnv/onnv-gate/usr/src/uts/common/fs/zfs/lzjb.c"," * and"," * http://src.opensolaris.org/source/raw/onnv/onnv-gate/usr/src/uts/common/os/compress.c"," * It is licensed under CDDL."," *"," * @param {Array|Uint8Array|Buffer|stream} input The stream or byte array"," *        that you want to compress."," * @param {stream} output Optional output stream."," * @return {Array|Uint8Array|Buffer} Compressed byte array, or 'output'"," */","Lzjb.compressFile = Util.compressFileHelper(Lzjb.MAGIC, function(inStream, outStream, fileSize, props) {","    var sstart, dstart = [], slen,","        src = 0, dst = 0,","        cpy, copymap,","        mlen, offset,","        hash, hp,","        lempel,","        i, j;","    var retval;","","    // in an improvement over the original C implementation, we expand","    // the hash table to track a number of potential matches, not just the","    // most recent.  This doesn't require any changes to the decoder.","    // Sample impact on compression size (on wikipedia data):","    //  EXPAND  Time     Size      Option","    //    1   0m20.321s  50185613    -1","    //    2   0m22.437s  46503301    -2","    //    3   0m23.773s  45744564    -3","    //    4   0m25.666s  45199866    -4","    //    5   0m35.810s  44821413    -5","    //    6   0m40.947s  44666638    -6","    //    8   0m49.639s  44413865    -7","    //   12   0m49.927s  44124825    -8","    //   16   1m01.180s  43972515    -9","    //   32   1m30.530s  43554099","    //   64   2m14.504s  43005530","    //  128   3m43.570s  42361718","    //  256   6m38.681s  41684853","    var LEMPEL_SIZE = LEMPEL_SIZE_BASE;","    var EXPAND = 1; // default to original C impl","    if (typeof(props)==='number') {","        LEMPEL_SIZE *= 2;","        props = Math.max(1, Math.min(9, props)) - 1;","        EXPAND = 1<<Math.floor(props/2);","        if (props&1) EXPAND = Math.round(EXPAND * 1.5);","        if (props >=2 && props <= 4) EXPAND++;","    }","","    // use Uint16Array if available (zero-filled)","    lempel = Util.makeU16Buffer(LEMPEL_SIZE * EXPAND);","","    var window = Util.makeU8Buffer(OFFSET_MASK+1);","    var windowpos = 0;","    var winput = function(_byte) {","        window[windowpos++] = _byte;","        if (windowpos >= window.length) {","            windowpos = 0;","        }","        return _byte;","    };","","    var outwindow = Util.makeU8Buffer(17);","    var outpos = 0;","    var dumpout = function() {","        var i;","        for (i=0; i<outpos; i++) {","            outStream.writeByte(outwindow[i]);","        }","        outpos = 0;","    };","","    var unbuffer = [];","    var get = function() {","        if (unbuffer.length)","            return unbuffer.pop();","        return inStream.readByte();","    };","    var unget = function(_byte) {","        unbuffer.push(_byte);","    };","","    var copymask = 1 << (NBBY - 1);","    var matchpossibility = [];","    while (true) {","        var c1 = get();","        if (c1 === EOF) break;","","        if ((copymask <<= 1) == (1 << NBBY)) {","            dumpout();","            copymask = 1;","            outwindow[0] = 0;","            outpos = 1;","        }","","        var c2 = get();","        if (c2 === EOF) {","            outwindow[outpos++] = winput(c1);","            break;","        }","        var c3 = get();","        if (c3 === EOF) {","            outwindow[outpos++] = winput(c1);","            unget(c2);","            continue;","        }","","        hash = (c1 << 16) + (c2 << 8) + c3;","        hash ^= (hash >> 9);","        hash += (hash >> 5);","        hash ^= c1;","        hp = (hash & (LEMPEL_SIZE - 1)) * EXPAND;","        matchpossibility.length = 0;","        for (j=0; j<EXPAND; j++) {","            offset = (windowpos - lempel[hp+j]) & OFFSET_MASK;","            cpy = window.length + windowpos - offset;","            var w1 = window[cpy & OFFSET_MASK];","            var w2 = window[(cpy+1) & OFFSET_MASK];","            var w3 = window[(cpy+2) & OFFSET_MASK];","            // if offset is small, we might not have copied the tentative","            // bytes into the window yet.  (Note that offset=0 really means","            // offset=(OFFSET_MASK+1).)","            if (C_COMPAT && offset===0) {","                w1 = c1 ^ 1; // ensure match will fail","            } else if (offset==1) { w2 = c1; w3 = c2; }","            else if (offset==2) { w3 = c1; }","            if (c1 === w1 && c2 === w2 && c3 === w3) {","                matchpossibility.push(offset);","            }","        }","        // store this location in the hash, move the others over to make room","        // oldest match drops off","        for (j=EXPAND-1; j>0; j--)","            lempel[hp+j] = lempel[hp+j-1];","        lempel[hp] = windowpos;","        // did we find any matches?","        if (matchpossibility.length === 0) {","            outwindow[outpos++] = winput(c1);","            unget(c3);","            unget(c2);","        } else {","            // find the longest of the possible matches","            outwindow[0] |= copymask;","            winput(c1); winput(c2); winput(c3);","            var c4 = get(), last = matchpossibility[0];","            var base = window.length + windowpos;","            for (mlen = MATCH_MIN; mlen < MATCH_MAX; mlen++, base++) {","                if (c4 === EOF) break;","                for (j=0; j < matchpossibility.length; ) {","                    var w4 = window[(base - matchpossibility[j]) & OFFSET_MASK];","                    if (c4 !== w4) {","                        last = matchpossibility[j];","                        matchpossibility.splice(j, 1);","                    } else {","                        j++;","                    }","                }","                if (matchpossibility.length===0) break; // no more matches","                winput(c4);","                c4 = get();","            }","            if (matchpossibility.length !== 0) {","                // maximum length match, rock on!","                last = matchpossibility[0];","            }","            unget(c4);","","            outwindow[outpos++] = ((mlen - MATCH_MIN) << (NBBY - MATCH_BITS)) |","                (last >> NBBY);","            outwindow[outpos++] = last & 0xFF;","        }","    }","    dumpout();","});","","/**"," * Decompress string or byte array using fast and efficient algorithm."," *"," * Our implementation is based on"," * http://src.opensolaris.org/source/raw/onnv/onnv-gate/usr/src/uts/common/fs/zfs/lzjb.c"," * and"," * http://src.opensolaris.org/source/raw/onnv/onnv-gate/usr/src/uts/common/os/compress.c"," * It is licensed under CDDL."," *"," * @param {Array|Uint8Array|Buffer|stream} input The stream or byte array"," *        that you want to decompress."," * @param {stream} output Optional output stream."," * @return {Array|Uint8Array|Buffer} Decompressed byte array, or 'output'"," */","Lzjb.decompressFile = Util.decompressFileHelper(Lzjb.MAGIC, function(inStream, outStream, outSize) {","    var sstart, dstart = [], slen,","        src = 0, dst = 0,","        cpy, copymap,","        mlen, offset,","        i, c;","    var retval;","","    var window = Util.makeU8Buffer(OFFSET_MASK+1);","    var windowpos = 0;","","    var copymask = 1 << (NBBY - 1);","","    while (outSize !== 0) {","        c = inStream.readByte();","        if (c === EOF) break;","","        if ((copymask <<= 1) == (1 << NBBY)) {","            copymask = 1;","            copymap = c;","            c = inStream.readByte();","        }","        if (copymap & copymask) {","            mlen = (c >> (NBBY - MATCH_BITS)) + MATCH_MIN;","            offset = ((c << NBBY) | inStream.readByte()) & OFFSET_MASK;","            cpy = windowpos - offset;","            if (cpy < 0) cpy += window.length;","            if (outSize >= 0) outSize -= mlen;","            while (--mlen >= 0) {","                c = window[windowpos++] = window[cpy++];","                outStream.writeByte(c);","                if (windowpos >= window.length) { windowpos=0; }","                if (cpy >= window.length) { cpy = 0; }","            }","        } else {","            outStream.writeByte(c);","            window[windowpos++] = c;","            if (windowpos >= window.length) { windowpos=0; }","            if (outSize >= 0) outSize--;","        }","    }","});","","","return Lzjb;","});",""],"l":{"2":1,"3":1,"40":1,"41":1,"44":1,"50":1,"55":1,"77":1,"78":0,"85":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"116":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"125":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"135":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"163":0,"164":0,"166":0,"167":0,"168":0,"169":0,"170":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"198":0,"199":0,"200":0,"202":0,"203":0,"204":0,"205":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"223":0,"224":0,"225":0,"227":0,"229":0,"231":0,"233":0,"235":0,"238":0,"255":1,"256":0,"261":0,"263":0,"264":0,"266":0,"268":0,"269":0,"270":0,"272":0,"273":0,"274":0,"275":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"290":0,"291":0,"292":0,"293":0,"299":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/LzjbR.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/LzjbR.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":112},"end":{"line":3,"column":196}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":58},"end":{"line":23,"column":116}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":33}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":14},"end":{"line":62,"column":25}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":32}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":29},"end":{"line":78,"column":44}}},"7":{"name":"(anonymous_7)","line":185,"loc":{"start":{"line":185,"column":62},"end":{"line":185,"column":101}}},"8":{"name":"(anonymous_8)","line":204,"loc":{"start":{"line":204,"column":29},"end":{"line":204,"column":44}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":241,"column":3}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"6":{"start":{"line":9,"column":0},"end":{"line":14,"column":28}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"8":{"start":{"line":23,"column":0},"end":{"line":180,"column":9}},"9":{"start":{"line":24,"column":4},"end":{"line":30,"column":13}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":39}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":19}},"12":{"start":{"line":37,"column":4},"end":{"line":43,"column":5}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"14":{"start":{"line":39,"column":8},"end":{"line":39,"column":52}},"15":{"start":{"line":40,"column":8},"end":{"line":40,"column":40}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":55}},"17":{"start":{"line":41,"column":21},"end":{"line":41,"column":55}},"18":{"start":{"line":42,"column":8},"end":{"line":42,"column":46}},"19":{"start":{"line":42,"column":37},"end":{"line":42,"column":46}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":44}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":38}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":54}},"23":{"start":{"line":51,"column":4},"end":{"line":51,"column":50}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":22}},"25":{"start":{"line":53,"column":4},"end":{"line":59,"column":6}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":36}},"27":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"28":{"start":{"line":56,"column":12},"end":{"line":56,"column":26}},"29":{"start":{"line":58,"column":8},"end":{"line":58,"column":21}},"30":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"31":{"start":{"line":62,"column":4},"end":{"line":66,"column":6}},"32":{"start":{"line":63,"column":8},"end":{"line":64,"column":34}},"33":{"start":{"line":64,"column":12},"end":{"line":64,"column":34}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":35}},"35":{"start":{"line":67,"column":4},"end":{"line":69,"column":6}},"36":{"start":{"line":68,"column":8},"end":{"line":68,"column":29}},"37":{"start":{"line":71,"column":4},"end":{"line":71,"column":30}},"38":{"start":{"line":72,"column":4},"end":{"line":72,"column":20}},"39":{"start":{"line":73,"column":4},"end":{"line":73,"column":22}},"40":{"start":{"line":74,"column":4},"end":{"line":74,"column":50}},"41":{"start":{"line":75,"column":4},"end":{"line":75,"column":68}},"42":{"start":{"line":76,"column":4},"end":{"line":77,"column":79}},"43":{"start":{"line":78,"column":4},"end":{"line":81,"column":6}},"44":{"start":{"line":79,"column":8},"end":{"line":79,"column":71}},"45":{"start":{"line":79,"column":43},"end":{"line":79,"column":69}},"46":{"start":{"line":80,"column":8},"end":{"line":80,"column":36}},"47":{"start":{"line":82,"column":4},"end":{"line":83,"column":74}},"48":{"start":{"line":84,"column":4},"end":{"line":85,"column":74}},"49":{"start":{"line":86,"column":4},"end":{"line":86,"column":40}},"50":{"start":{"line":87,"column":4},"end":{"line":175,"column":5}},"51":{"start":{"line":88,"column":8},"end":{"line":88,"column":35}},"52":{"start":{"line":89,"column":8},"end":{"line":89,"column":23}},"53":{"start":{"line":90,"column":8},"end":{"line":90,"column":37}},"54":{"start":{"line":90,"column":31},"end":{"line":90,"column":37}},"55":{"start":{"line":92,"column":8},"end":{"line":92,"column":23}},"56":{"start":{"line":93,"column":8},"end":{"line":96,"column":9}},"57":{"start":{"line":94,"column":12},"end":{"line":94,"column":54}},"58":{"start":{"line":95,"column":12},"end":{"line":95,"column":18}},"59":{"start":{"line":97,"column":8},"end":{"line":97,"column":23}},"60":{"start":{"line":98,"column":8},"end":{"line":102,"column":9}},"61":{"start":{"line":99,"column":12},"end":{"line":99,"column":54}},"62":{"start":{"line":100,"column":12},"end":{"line":100,"column":22}},"63":{"start":{"line":100,"column":23},"end":{"line":100,"column":37}},"64":{"start":{"line":101,"column":12},"end":{"line":101,"column":21}},"65":{"start":{"line":104,"column":8},"end":{"line":104,"column":43}},"66":{"start":{"line":105,"column":8},"end":{"line":105,"column":28}},"67":{"start":{"line":106,"column":8},"end":{"line":106,"column":28}},"68":{"start":{"line":107,"column":8},"end":{"line":107,"column":19}},"69":{"start":{"line":108,"column":8},"end":{"line":108,"column":49}},"70":{"start":{"line":109,"column":8},"end":{"line":109,"column":36}},"71":{"start":{"line":110,"column":8},"end":{"line":124,"column":9}},"72":{"start":{"line":111,"column":12},"end":{"line":111,"column":62}},"73":{"start":{"line":112,"column":12},"end":{"line":112,"column":53}},"74":{"start":{"line":113,"column":12},"end":{"line":113,"column":47}},"75":{"start":{"line":114,"column":12},"end":{"line":114,"column":51}},"76":{"start":{"line":115,"column":12},"end":{"line":115,"column":51}},"77":{"start":{"line":119,"column":12},"end":{"line":120,"column":44}},"78":{"start":{"line":119,"column":29},"end":{"line":119,"column":37}},"79":{"start":{"line":119,"column":38},"end":{"line":119,"column":46}},"80":{"start":{"line":120,"column":17},"end":{"line":120,"column":44}},"81":{"start":{"line":120,"column":34},"end":{"line":120,"column":42}},"82":{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},"83":{"start":{"line":122,"column":16},"end":{"line":122,"column":46}},"84":{"start":{"line":127,"column":8},"end":{"line":128,"column":42}},"85":{"start":{"line":128,"column":12},"end":{"line":128,"column":42}},"86":{"start":{"line":129,"column":8},"end":{"line":129,"column":31}},"87":{"start":{"line":131,"column":8},"end":{"line":174,"column":9}},"88":{"start":{"line":132,"column":12},"end":{"line":132,"column":54}},"89":{"start":{"line":133,"column":12},"end":{"line":133,"column":22}},"90":{"start":{"line":134,"column":12},"end":{"line":134,"column":22}},"91":{"start":{"line":135,"column":12},"end":{"line":135,"column":26}},"92":{"start":{"line":137,"column":12},"end":{"line":137,"column":49}},"93":{"start":{"line":139,"column":12},"end":{"line":139,"column":23}},"94":{"start":{"line":139,"column":24},"end":{"line":139,"column":35}},"95":{"start":{"line":139,"column":36},"end":{"line":139,"column":47}},"96":{"start":{"line":139,"column":48},"end":{"line":139,"column":62}},"97":{"start":{"line":140,"column":12},"end":{"line":140,"column":55}},"98":{"start":{"line":141,"column":12},"end":{"line":141,"column":49}},"99":{"start":{"line":142,"column":12},"end":{"line":156,"column":13}},"100":{"start":{"line":143,"column":16},"end":{"line":143,"column":45}},"101":{"start":{"line":143,"column":39},"end":{"line":143,"column":45}},"102":{"start":{"line":144,"column":16},"end":{"line":152,"column":17}},"103":{"start":{"line":145,"column":20},"end":{"line":145,"column":80}},"104":{"start":{"line":146,"column":20},"end":{"line":151,"column":21}},"105":{"start":{"line":147,"column":24},"end":{"line":147,"column":51}},"106":{"start":{"line":148,"column":24},"end":{"line":148,"column":54}},"107":{"start":{"line":150,"column":24},"end":{"line":150,"column":28}},"108":{"start":{"line":153,"column":16},"end":{"line":153,"column":55}},"109":{"start":{"line":153,"column":49},"end":{"line":153,"column":55}},"110":{"start":{"line":154,"column":16},"end":{"line":154,"column":27}},"111":{"start":{"line":154,"column":28},"end":{"line":154,"column":42}},"112":{"start":{"line":155,"column":16},"end":{"line":155,"column":27}},"113":{"start":{"line":157,"column":12},"end":{"line":160,"column":13}},"114":{"start":{"line":159,"column":16},"end":{"line":159,"column":43}},"115":{"start":{"line":161,"column":12},"end":{"line":161,"column":22}},"116":{"start":{"line":166,"column":12},"end":{"line":166,"column":46}},"117":{"start":{"line":167,"column":12},"end":{"line":167,"column":55}},"118":{"start":{"line":168,"column":12},"end":{"line":173,"column":13}},"119":{"start":{"line":169,"column":16},"end":{"line":169,"column":36}},"120":{"start":{"line":171,"column":16},"end":{"line":171,"column":40}},"121":{"start":{"line":172,"column":16},"end":{"line":172,"column":36}},"122":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"123":{"start":{"line":177,"column":8},"end":{"line":177,"column":47}},"124":{"start":{"line":179,"column":4},"end":{"line":179,"column":27}},"125":{"start":{"line":185,"column":0},"end":{"line":237,"column":3}},"126":{"start":{"line":186,"column":4},"end":{"line":190,"column":13}},"127":{"start":{"line":192,"column":4},"end":{"line":192,"column":50}},"128":{"start":{"line":193,"column":4},"end":{"line":193,"column":22}},"129":{"start":{"line":195,"column":4},"end":{"line":195,"column":43}},"130":{"start":{"line":196,"column":4},"end":{"line":196,"column":66}},"131":{"start":{"line":198,"column":4},"end":{"line":198,"column":20}},"132":{"start":{"line":199,"column":4},"end":{"line":199,"column":22}},"133":{"start":{"line":200,"column":4},"end":{"line":200,"column":50}},"134":{"start":{"line":201,"column":4},"end":{"line":201,"column":68}},"135":{"start":{"line":202,"column":4},"end":{"line":203,"column":78}},"136":{"start":{"line":204,"column":4},"end":{"line":207,"column":6}},"137":{"start":{"line":205,"column":8},"end":{"line":205,"column":71}},"138":{"start":{"line":205,"column":43},"end":{"line":205,"column":69}},"139":{"start":{"line":206,"column":8},"end":{"line":206,"column":36}},"140":{"start":{"line":208,"column":4},"end":{"line":209,"column":74}},"141":{"start":{"line":210,"column":4},"end":{"line":211,"column":74}},"142":{"start":{"line":212,"column":4},"end":{"line":212,"column":40}},"143":{"start":{"line":213,"column":4},"end":{"line":235,"column":5}},"144":{"start":{"line":214,"column":8},"end":{"line":214,"column":42}},"145":{"start":{"line":215,"column":8},"end":{"line":234,"column":9}},"146":{"start":{"line":216,"column":12},"end":{"line":216,"column":18}},"147":{"start":{"line":217,"column":15},"end":{"line":234,"column":9}},"148":{"start":{"line":218,"column":12},"end":{"line":218,"column":49}},"149":{"start":{"line":219,"column":12},"end":{"line":219,"column":36}},"150":{"start":{"line":220,"column":12},"end":{"line":221,"column":44}},"151":{"start":{"line":220,"column":25},"end":{"line":220,"column":42}},"152":{"start":{"line":221,"column":25},"end":{"line":221,"column":42}},"153":{"start":{"line":222,"column":12},"end":{"line":222,"column":46}},"154":{"start":{"line":222,"column":30},"end":{"line":222,"column":46}},"155":{"start":{"line":223,"column":12},"end":{"line":228,"column":13}},"156":{"start":{"line":224,"column":16},"end":{"line":224,"column":67}},"157":{"start":{"line":225,"column":16},"end":{"line":225,"column":39}},"158":{"start":{"line":226,"column":16},"end":{"line":226,"column":64}},"159":{"start":{"line":226,"column":50},"end":{"line":226,"column":62}},"160":{"start":{"line":227,"column":16},"end":{"line":227,"column":54}},"161":{"start":{"line":227,"column":44},"end":{"line":227,"column":52}},"162":{"start":{"line":230,"column":12},"end":{"line":230,"column":35}},"163":{"start":{"line":231,"column":12},"end":{"line":231,"column":47}},"164":{"start":{"line":232,"column":12},"end":{"line":232,"column":60}},"165":{"start":{"line":232,"column":46},"end":{"line":232,"column":58}},"166":{"start":{"line":233,"column":12},"end":{"line":233,"column":40}},"167":{"start":{"line":233,"column":30},"end":{"line":233,"column":40}},"168":{"start":{"line":236,"column":4},"end":{"line":236,"column":27}},"169":{"start":{"line":240,"column":0},"end":{"line":240,"column":13}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":21}},{"start":{"line":42,"column":25},"end":{"line":42,"column":35}}]},"6":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"8":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":57},"end":{"line":77,"column":64}},{"start":{"line":77,"column":67},"end":{"line":77,"column":72}}]},"9":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"11":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"12":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"13":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"14":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":17},"end":{"line":120,"column":17}},{"start":{"line":120,"column":17},"end":{"line":120,"column":17}}]},"15":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":12}},{"start":{"line":121,"column":12},"end":{"line":121,"column":12}}]},"16":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":16},"end":{"line":121,"column":25}},{"start":{"line":121,"column":29},"end":{"line":121,"column":38}},{"start":{"line":121,"column":42},"end":{"line":121,"column":51}}]},"17":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":8}},{"start":{"line":131,"column":8},"end":{"line":131,"column":8}}]},"18":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":16},"end":{"line":143,"column":16}},{"start":{"line":143,"column":16},"end":{"line":143,"column":16}}]},"19":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":20},"end":{"line":146,"column":20}},{"start":{"line":146,"column":20},"end":{"line":146,"column":20}}]},"20":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":16}},{"start":{"line":153,"column":16},"end":{"line":153,"column":16}}]},"21":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":12}},{"start":{"line":157,"column":12},"end":{"line":157,"column":12}}]},"22":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":12}},{"start":{"line":168,"column":12},"end":{"line":168,"column":12}}]},"23":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"24":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":56},"end":{"line":203,"column":63}},{"start":{"line":203,"column":66},"end":{"line":203,"column":71}}]},"25":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"26":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8}},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"27":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":15},"end":{"line":217,"column":15}},{"start":{"line":217,"column":15},"end":{"line":217,"column":15}}]},"28":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":220,"column":12}},{"start":{"line":220,"column":12},"end":{"line":220,"column":12}}]},"29":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"30":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":16},"end":{"line":226,"column":16}},{"start":{"line":226,"column":16},"end":{"line":226,"column":16}}]},"31":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":16},"end":{"line":227,"column":16}},{"start":{"line":227,"column":16},"end":{"line":227,"column":16}}]},"32":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":12},"end":{"line":232,"column":12}},{"start":{"line":232,"column":12},"end":{"line":232,"column":12}}]},"33":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":12},"end":{"line":233,"column":12}},{"start":{"line":233,"column":12},"end":{"line":233,"column":12}}]}},"code":["/* Tweaked version of LZJB, using range coder. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./Context1Model','./FenwickModel','./LogDistanceModel','./NoModel','./RangeCoder','./Stream','./Util'],function(Context1Model,FenwickModel,LogDistanceModel,NoModel,RangeCoder,Stream,Util){","","var LzjbR = Object.create(null);","LzjbR.MAGIC = 'lzjR';","","// Constants was used for compress/decompress function.","var NBBY = 8,","    MATCH_BITS = 6,","    MATCH_MIN = 3,","    MATCH_MAX = ((1 << MATCH_BITS) + (MATCH_MIN - 1)),","    OFFSET_MASK = ((1 << (16 - MATCH_BITS)) - 1),","    LEMPEL_SIZE_BASE = 1024;","var LENGTH_MODEL_CUTOFF = 32;","","","/**"," * Compress using modified LZJB algorithm.  Instead of using the simple"," * 9-bit literal / 17-bit match format of the original, use a range"," * coder for the literal/match bit and for the offset and length."," */","LzjbR.compressFile = Util.compressFileHelper(LzjbR.MAGIC, function(inStream, outStream, fileSize, props, finalByte) {","    var sstart, dstart = [], slen,","        src = 0, dst = 0,","        cpy, copymap,","        mlen, offset,","        hash, hp,","        lempel,","        i, j;","","    // in an improvement over the original C implementation of LZJB, we expand","    // the hash table to track a number of potential matches, not just the","    // most recent.  This doesn't require any changes to the decoder.","    var LEMPEL_SIZE = LEMPEL_SIZE_BASE;","    var EXPAND = 1; // default to original C impl","    if (typeof(props)==='number') {","        LEMPEL_SIZE *= 2;","        props = Math.max(1, Math.min(9, props)) - 1;","        EXPAND = 1<<Math.floor(props/2);","        if (props&1) EXPAND = Math.round(EXPAND * 1.5);","        if (props >=2 && props <= 4) EXPAND++;","    }","","    var encoder = new RangeCoder(outStream);","    encoder.encodeStart(finalByte, 1);","","    // use Uint16Array if available (zero-filled)","    lempel = Util.makeU16Buffer(LEMPEL_SIZE * EXPAND);","","    var window = Util.makeU8Buffer(OFFSET_MASK+1);","    var windowpos = 0;","    var winput = function(_byte) {","        window[windowpos++] = _byte;","        if (windowpos >= window.length) {","            windowpos = 0;","        }","        return _byte;","    };","","    var unbuffer = [];","    var get = function() {","        if (unbuffer.length)","            return unbuffer.pop();","        return inStream.readByte();","    };","    var unget = function(_byte) {","        unbuffer.push(_byte);","    };","","    var matchpossibility = [];","    var MATCH = 256;","    var EOF_SYM = 257;","    var noModelFactory = NoModel.factory(encoder);","    var modelFactory = FenwickModel.factory(encoder, 0xFF00, 0x100);","    var literalModel = new Context1Model(modelFactory, 256,","                                         ((fileSize<0) ? EOF_SYM : MATCH) + 1);","    var sparseModelFactory = function(size) {","        if (size <= LENGTH_MODEL_CUTOFF) { return modelFactory(size); }","        return noModelFactory(size);","    };","    var lenModel = new LogDistanceModel((MATCH_MAX-MATCH_MIN)+1, 0,","                                        modelFactory, sparseModelFactory);","    var posModel = new LogDistanceModel(OFFSET_MASK+1, 1,","                                        modelFactory, sparseModelFactory);","    var lastChar = 0x20, lastOffset = 0;","    while (true) {","        var initialPos = windowpos;","        var c1 = get();","        if (c1 === Stream.EOF) break;","","        var c2 = get();","        if (c2 === Stream.EOF) {","            literalModel.encode(winput(c1), lastChar); // literal, not a match","            break;","        }","        var c3 = get();","        if (c3 === Stream.EOF) {","            literalModel.encode(winput(c1), lastChar); // literal, not a match","            unget(c2); lastChar = c1;","            continue;","        }","","        hash = (c1 << 16) + (c2 << 8) + c3;","        hash ^= (hash >> 9);","        hash += (hash >> 5);","        hash ^= c1;","        hp = (hash & (LEMPEL_SIZE - 1)) * EXPAND;","        matchpossibility.length = 0;","        for (j=0; j<EXPAND; j++) {","            offset = (windowpos - lempel[hp+j]) & OFFSET_MASK;","            cpy = window.length + windowpos - offset;","            var w1 = window[cpy & OFFSET_MASK];","            var w2 = window[(cpy+1) & OFFSET_MASK];","            var w3 = window[(cpy+2) & OFFSET_MASK];","            // if offset is small, we might not have copied the tentative","            // bytes into the window yet.  (Note that offset=0 really means","            // offset=(OFFSET_MASK+1).)","            if (offset==1) { w2 = c1; w3 = c2; }","            else if (offset==2) { w3 = c1; }","            if (c1 === w1 && c2 === w2 && c3 === w3) {","                matchpossibility.push(offset);","            }","        }","        // store this location in the hash, move the others over to make room","        // oldest match drops off","        for (j=EXPAND-1; j>0; j--)","            lempel[hp+j] = lempel[hp+j-1];","        lempel[hp] = windowpos;","        // did we find any matches?","        if (matchpossibility.length === 0) {","            literalModel.encode(winput(c1), lastChar); // literal, not a match","            unget(c3);","            unget(c2);","            lastChar = c1;","        } else {","            literalModel.encode(MATCH, lastChar); // a match!","            // find the longest of the possible matches","            winput(c1); winput(c2); winput(c3); lastChar = c3;","            var c4 = get(), last = matchpossibility[0];","            var base = window.length + windowpos;","            for (mlen = MATCH_MIN; mlen < MATCH_MAX; mlen++, base++) {","                if (c4 === Stream.EOF) break;","                for (j=0; j < matchpossibility.length; ) {","                    var w4 = window[(base - matchpossibility[j]) & OFFSET_MASK];","                    if (c4 !== w4) {","                        last = matchpossibility[j];","                        matchpossibility.splice(j, 1);","                    } else {","                        j++;","                    }","                }","                if (matchpossibility.length===0) break; // no more matches","                winput(c4); lastChar = c4;","                c4 = get();","            }","            if (matchpossibility.length !== 0) {","                // maximum length match, rock on!","                last = matchpossibility[0];","            }","            unget(c4);","","            // encode match length","            // XXX we could get a bit more compression if we allowed","            // the length to predict the offset (or vice-versa)","            lenModel.encode(mlen - MATCH_MIN);","            offset = (initialPos - last) & OFFSET_MASK;","            if (offset === lastOffset) {","                posModel.encode(-1); // common case!","            } else {","                posModel.encode(offset);","                lastOffset = offset;","            }","        }","    }","    if (fileSize < 0) {","        literalModel.encode(EOF_SYM, lastChar); // end of file (streaming)","    }","    encoder.encodeFinish();","}, true);","","/**"," * Decompress using modified LZJB algorithm."," */","LzjbR.decompressFile = Util.decompressFileHelper(LzjbR.MAGIC, function(inStream, outStream, outSize) {","    var sstart, dstart = [], slen,","        src = 0, dst = 0,","        cpy, copymap,","        mlen, offset,","        i, c;","","    var window = Util.makeU8Buffer(OFFSET_MASK+1);","    var windowpos = 0;","","    var decoder = new RangeCoder(inStream);","    decoder.decodeStart(true/* we already read the 'free' byte*/);","","    var MATCH = 256;","    var EOF_SYM = 257;","    var noModelFactory = NoModel.factory(decoder);","    var modelFactory = FenwickModel.factory(decoder, 0xFF00, 0x100);","    var literalModel = new Context1Model(modelFactory, 256,","                                         ((outSize<0) ? EOF_SYM : MATCH) + 1);","    var sparseModelFactory = function(size) {","        if (size <= LENGTH_MODEL_CUTOFF) { return modelFactory(size); }","        return noModelFactory(size);","    };","    var lenModel = new LogDistanceModel((MATCH_MAX-MATCH_MIN)+1, 0,","                                        modelFactory, sparseModelFactory);","    var posModel = new LogDistanceModel(OFFSET_MASK+1, 1,","                                        modelFactory, sparseModelFactory);","    var lastChar = 0x20, lastOffset = 0;","    while (outSize !== 0) {","        c = literalModel.decode(lastChar);","        if (c === EOF_SYM) {","            break;","        } else if (c === MATCH) {","            mlen = lenModel.decode() + MATCH_MIN;","            cpy = posModel.decode();","            if (cpy<0) { cpy = lastOffset; }","            else       { lastOffset = cpy; }","            if (outSize >= 0) outSize -= mlen;","            while (--mlen >= 0) {","                c = lastChar = window[windowpos++] = window[cpy++];","                outStream.writeByte(c);","                if (windowpos >= window.length) { windowpos=0; }","                if (cpy >= window.length) { cpy = 0; }","            }","        } else {","            outStream.writeByte(c);","            window[windowpos++] = lastChar = c;","            if (windowpos >= window.length) { windowpos=0; }","            if (outSize >= 0) outSize--;","        }","    }","    decoder.decodeFinish();","});","","","return LzjbR;","});",""],"l":{"2":1,"3":1,"5":1,"6":1,"9":1,"15":1,"23":1,"24":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"45":0,"46":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"61":0,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"82":0,"84":0,"86":0,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"119":0,"120":0,"121":0,"122":0,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"134":0,"135":0,"137":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"153":0,"154":0,"155":0,"157":0,"159":0,"161":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"176":0,"177":0,"179":0,"185":1,"186":0,"192":0,"193":0,"195":0,"196":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"205":0,"206":0,"208":0,"210":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"230":0,"231":0,"232":0,"233":0,"236":0,"240":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Lzp3.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Lzp3.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":163},"end":{"line":6,"column":286}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":13},"end":{"line":36,"column":31}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":23},"end":{"line":48,"column":39}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":37}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":27},"end":{"line":56,"column":44}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":28},"end":{"line":66,"column":50}}},"7":{"name":"(anonymous_7)","line":108,"loc":{"start":{"line":108,"column":56},"end":{"line":108,"column":103}}},"8":{"name":"(anonymous_8)","line":132,"loc":{"start":{"line":132,"column":25},"end":{"line":132,"column":40}}},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":12},"end":{"line":138,"column":23}}},"10":{"name":"(anonymous_10)","line":197,"loc":{"start":{"line":197,"column":60},"end":{"line":197,"column":100}}},"11":{"name":"(anonymous_11)","line":220,"loc":{"start":{"line":220,"column":25},"end":{"line":220,"column":40}}},"12":{"name":"(anonymous_12)","line":226,"loc":{"start":{"line":226,"column":13},"end":{"line":226,"column":24}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":79}},"2":{"start":{"line":5,"column":36},"end":{"line":5,"column":77}},"3":{"start":{"line":6,"column":0},"end":{"line":273,"column":3}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":20}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":20}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}},"16":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"17":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}},"18":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":23}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}},"22":{"start":{"line":33,"column":0},"end":{"line":33,"column":23}},"23":{"start":{"line":36,"column":0},"end":{"line":47,"column":2}},"24":{"start":{"line":37,"column":2},"end":{"line":37,"column":68}},"25":{"start":{"line":38,"column":2},"end":{"line":38,"column":15}},"26":{"start":{"line":40,"column":2},"end":{"line":40,"column":52}},"27":{"start":{"line":42,"column":2},"end":{"line":42,"column":52}},"28":{"start":{"line":44,"column":2},"end":{"line":44,"column":52}},"29":{"start":{"line":46,"column":2},"end":{"line":46,"column":17}},"30":{"start":{"line":46,"column":18},"end":{"line":46,"column":33}},"31":{"start":{"line":46,"column":34},"end":{"line":46,"column":49}},"32":{"start":{"line":46,"column":50},"end":{"line":46,"column":65}},"33":{"start":{"line":48,"column":0},"end":{"line":52,"column":2}},"34":{"start":{"line":49,"column":2},"end":{"line":49,"column":34}},"35":{"start":{"line":50,"column":2},"end":{"line":50,"column":48}},"36":{"start":{"line":50,"column":33},"end":{"line":50,"column":46}},"37":{"start":{"line":51,"column":2},"end":{"line":51,"column":15}},"38":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"39":{"start":{"line":54,"column":2},"end":{"line":54,"column":44}},"40":{"start":{"line":56,"column":0},"end":{"line":64,"column":2}},"41":{"start":{"line":57,"column":2},"end":{"line":57,"column":15}},"42":{"start":{"line":58,"column":2},"end":{"line":58,"column":36}},"43":{"start":{"line":59,"column":2},"end":{"line":62,"column":3}},"44":{"start":{"line":60,"column":4},"end":{"line":60,"column":38}},"45":{"start":{"line":61,"column":4},"end":{"line":61,"column":40}},"46":{"start":{"line":61,"column":30},"end":{"line":61,"column":38}},"47":{"start":{"line":63,"column":2},"end":{"line":63,"column":11}},"48":{"start":{"line":66,"column":0},"end":{"line":102,"column":2}},"49":{"start":{"line":67,"column":2},"end":{"line":67,"column":29}},"50":{"start":{"line":69,"column":2},"end":{"line":69,"column":49}},"51":{"start":{"line":70,"column":2},"end":{"line":70,"column":49}},"52":{"start":{"line":71,"column":2},"end":{"line":71,"column":21}},"53":{"start":{"line":73,"column":2},"end":{"line":73,"column":20}},"54":{"start":{"line":76,"column":2},"end":{"line":95,"column":3}},"55":{"start":{"line":77,"column":4},"end":{"line":77,"column":23}},"56":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"57":{"start":{"line":79,"column":6},"end":{"line":79,"column":12}},"58":{"start":{"line":81,"column":4},"end":{"line":94,"column":5}},"59":{"start":{"line":83,"column":6},"end":{"line":83,"column":25}},"60":{"start":{"line":84,"column":6},"end":{"line":86,"column":7}},"61":{"start":{"line":85,"column":8},"end":{"line":85,"column":14}},"62":{"start":{"line":87,"column":6},"end":{"line":93,"column":7}},"63":{"start":{"line":89,"column":8},"end":{"line":89,"column":27}},"64":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"65":{"start":{"line":91,"column":10},"end":{"line":91,"column":16}},"66":{"start":{"line":97,"column":2},"end":{"line":97,"column":31}},"67":{"start":{"line":97,"column":18},"end":{"line":97,"column":29}},"68":{"start":{"line":98,"column":2},"end":{"line":99,"column":44}},"69":{"start":{"line":101,"column":2},"end":{"line":101,"column":11}},"70":{"start":{"line":108,"column":0},"end":{"line":192,"column":3}},"71":{"start":{"line":110,"column":2},"end":{"line":110,"column":68}},"72":{"start":{"line":112,"column":2},"end":{"line":112,"column":46}},"73":{"start":{"line":114,"column":2},"end":{"line":139,"column":3}},"74":{"start":{"line":116,"column":4},"end":{"line":116,"column":30}},"75":{"start":{"line":117,"column":4},"end":{"line":117,"column":45}},"76":{"start":{"line":118,"column":4},"end":{"line":118,"column":44}},"77":{"start":{"line":119,"column":4},"end":{"line":119,"column":53}},"78":{"start":{"line":120,"column":4},"end":{"line":120,"column":52}},"79":{"start":{"line":123,"column":4},"end":{"line":123,"column":42}},"80":{"start":{"line":124,"column":4},"end":{"line":124,"column":31}},"81":{"start":{"line":126,"column":4},"end":{"line":126,"column":80}},"82":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"83":{"start":{"line":128,"column":6},"end":{"line":128,"column":69}},"84":{"start":{"line":131,"column":4},"end":{"line":131,"column":48}},"85":{"start":{"line":132,"column":4},"end":{"line":137,"column":6}},"86":{"start":{"line":133,"column":6},"end":{"line":135,"column":7}},"87":{"start":{"line":134,"column":8},"end":{"line":134,"column":36}},"88":{"start":{"line":136,"column":6},"end":{"line":136,"column":32}},"89":{"start":{"line":138,"column":4},"end":{"line":138,"column":49}},"90":{"start":{"line":138,"column":25},"end":{"line":138,"column":46}},"91":{"start":{"line":141,"column":2},"end":{"line":142,"column":63}},"92":{"start":{"line":143,"column":2},"end":{"line":143,"column":22}},"93":{"start":{"line":144,"column":2},"end":{"line":147,"column":3}},"94":{"start":{"line":145,"column":4},"end":{"line":146,"column":72}},"95":{"start":{"line":149,"column":2},"end":{"line":149,"column":38}},"96":{"start":{"line":150,"column":2},"end":{"line":190,"column":3}},"97":{"start":{"line":151,"column":4},"end":{"line":151,"column":33}},"98":{"start":{"line":152,"column":4},"end":{"line":152,"column":19}},"99":{"start":{"line":153,"column":4},"end":{"line":153,"column":34}},"100":{"start":{"line":154,"column":4},"end":{"line":178,"column":5}},"101":{"start":{"line":156,"column":6},"end":{"line":156,"column":10}},"102":{"start":{"line":157,"column":6},"end":{"line":157,"column":53}},"103":{"start":{"line":158,"column":6},"end":{"line":158,"column":23}},"104":{"start":{"line":159,"column":6},"end":{"line":163,"column":7}},"105":{"start":{"line":160,"column":8},"end":{"line":160,"column":19}},"106":{"start":{"line":161,"column":8},"end":{"line":161,"column":23}},"107":{"start":{"line":162,"column":8},"end":{"line":162,"column":33}},"108":{"start":{"line":166,"column":6},"end":{"line":170,"column":7}},"109":{"start":{"line":167,"column":8},"end":{"line":167,"column":64}},"110":{"start":{"line":169,"column":8},"end":{"line":169,"column":70}},"111":{"start":{"line":172,"column":6},"end":{"line":172,"column":35}},"112":{"start":{"line":173,"column":6},"end":{"line":173,"column":25}},"113":{"start":{"line":174,"column":6},"end":{"line":174,"column":25}},"114":{"start":{"line":175,"column":6},"end":{"line":175,"column":46}},"115":{"start":{"line":175,"column":26},"end":{"line":175,"column":44}},"116":{"start":{"line":180,"column":4},"end":{"line":180,"column":44}},"117":{"start":{"line":181,"column":4},"end":{"line":186,"column":5}},"118":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"119":{"start":{"line":183,"column":8},"end":{"line":183,"column":42}},"120":{"start":{"line":185,"column":6},"end":{"line":185,"column":12}},"121":{"start":{"line":187,"column":4},"end":{"line":187,"column":37}},"122":{"start":{"line":188,"column":4},"end":{"line":188,"column":19}},"123":{"start":{"line":189,"column":4},"end":{"line":189,"column":13}},"124":{"start":{"line":191,"column":2},"end":{"line":191,"column":21}},"125":{"start":{"line":191,"column":13},"end":{"line":191,"column":21}},"126":{"start":{"line":197,"column":0},"end":{"line":269,"column":3}},"127":{"start":{"line":198,"column":2},"end":{"line":198,"column":34}},"128":{"start":{"line":199,"column":2},"end":{"line":199,"column":42}},"129":{"start":{"line":202,"column":2},"end":{"line":202,"column":68}},"130":{"start":{"line":204,"column":2},"end":{"line":204,"column":47}},"131":{"start":{"line":206,"column":2},"end":{"line":227,"column":3}},"132":{"start":{"line":208,"column":4},"end":{"line":208,"column":44}},"133":{"start":{"line":209,"column":4},"end":{"line":209,"column":53}},"134":{"start":{"line":210,"column":4},"end":{"line":210,"column":52}},"135":{"start":{"line":212,"column":4},"end":{"line":212,"column":41}},"136":{"start":{"line":213,"column":4},"end":{"line":213,"column":51}},"137":{"start":{"line":214,"column":4},"end":{"line":214,"column":80}},"138":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"139":{"start":{"line":216,"column":6},"end":{"line":216,"column":68}},"140":{"start":{"line":219,"column":4},"end":{"line":219,"column":48}},"141":{"start":{"line":220,"column":4},"end":{"line":225,"column":6}},"142":{"start":{"line":221,"column":6},"end":{"line":223,"column":7}},"143":{"start":{"line":222,"column":8},"end":{"line":222,"column":36}},"144":{"start":{"line":224,"column":6},"end":{"line":224,"column":32}},"145":{"start":{"line":226,"column":4},"end":{"line":226,"column":50}},"146":{"start":{"line":226,"column":26},"end":{"line":226,"column":47}},"147":{"start":{"line":229,"column":2},"end":{"line":230,"column":63}},"148":{"start":{"line":231,"column":2},"end":{"line":231,"column":22}},"149":{"start":{"line":232,"column":2},"end":{"line":235,"column":3}},"150":{"start":{"line":233,"column":4},"end":{"line":234,"column":72}},"151":{"start":{"line":237,"column":2},"end":{"line":237,"column":43}},"152":{"start":{"line":238,"column":2},"end":{"line":267,"column":3}},"153":{"start":{"line":239,"column":4},"end":{"line":239,"column":19}},"154":{"start":{"line":240,"column":4},"end":{"line":240,"column":34}},"155":{"start":{"line":241,"column":4},"end":{"line":255,"column":5}},"156":{"start":{"line":242,"column":6},"end":{"line":242,"column":10}},"157":{"start":{"line":243,"column":6},"end":{"line":243,"column":53}},"158":{"start":{"line":244,"column":6},"end":{"line":244,"column":75}},"159":{"start":{"line":245,"column":6},"end":{"line":245,"column":52}},"160":{"start":{"line":245,"column":26},"end":{"line":245,"column":50}},"161":{"start":{"line":247,"column":6},"end":{"line":250,"column":7}},"162":{"start":{"line":248,"column":8},"end":{"line":248,"column":31}},"163":{"start":{"line":249,"column":8},"end":{"line":249,"column":44}},"164":{"start":{"line":251,"column":6},"end":{"line":251,"column":35}},"165":{"start":{"line":252,"column":6},"end":{"line":252,"column":26}},"166":{"start":{"line":253,"column":6},"end":{"line":253,"column":25}},"167":{"start":{"line":254,"column":6},"end":{"line":254,"column":42}},"168":{"start":{"line":254,"column":24},"end":{"line":254,"column":42}},"169":{"start":{"line":257,"column":4},"end":{"line":259,"column":5}},"170":{"start":{"line":258,"column":6},"end":{"line":258,"column":12}},"171":{"start":{"line":260,"column":4},"end":{"line":260,"column":44}},"172":{"start":{"line":261,"column":4},"end":{"line":261,"column":38}},"173":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"174":{"start":{"line":263,"column":6},"end":{"line":263,"column":12}},"175":{"start":{"line":265,"column":4},"end":{"line":265,"column":40}},"176":{"start":{"line":266,"column":4},"end":{"line":266,"column":14}},"177":{"start":{"line":268,"column":2},"end":{"line":268,"column":23}},"178":{"start":{"line":268,"column":14},"end":{"line":268,"column":23}},"179":{"start":{"line":272,"column":0},"end":{"line":272,"column":12}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":5,"column":0}},{"start":{"line":5,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"6":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":15}},{"start":{"line":78,"column":19},"end":{"line":78,"column":45}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"9":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":10},"end":{"line":84,"column":17}},{"start":{"line":84,"column":21},"end":{"line":84,"column":57}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"11":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"12":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":19}},{"start":{"line":90,"column":23},"end":{"line":90,"column":60}}]},"13":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":24},"end":{"line":90,"column":25}},{"start":{"line":90,"column":29},"end":{"line":90,"column":34}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"15":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":43},"end":{"line":110,"column":51}},{"start":{"line":110,"column":54},"end":{"line":110,"column":65}}]},"16":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"17":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"18":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"19":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":52},"end":{"line":142,"column":55}},{"start":{"line":142,"column":58},"end":{"line":142,"column":61}}]},"20":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"21":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":13},"end":{"line":159,"column":44}},{"start":{"line":159,"column":48},"end":{"line":159,"column":72}}]},"22":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":6}},{"start":{"line":166,"column":6},"end":{"line":166,"column":6}}]},"23":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"24":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"25":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"26":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"27":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":43},"end":{"line":202,"column":51}},{"start":{"line":202,"column":54},"end":{"line":202,"column":65}}]},"28":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"29":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"30":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":6}},{"start":{"line":221,"column":6},"end":{"line":221,"column":6}}]},"31":{"line":230,"type":"cond-expr","locations":[{"start":{"line":230,"column":52},"end":{"line":230,"column":55}},{"start":{"line":230,"column":58},"end":{"line":230,"column":61}}]},"32":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"33":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":6},"end":{"line":245,"column":6}},{"start":{"line":245,"column":6},"end":{"line":245,"column":6}}]},"34":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":6}},{"start":{"line":254,"column":6},"end":{"line":254,"column":6}}]},"35":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":257,"column":4}},{"start":{"line":257,"column":4},"end":{"line":257,"column":4}}]},"36":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"37":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]}},"code":["/* Implementation of LZP3(ish), with an adaptive Huffman code or a range"," * coder (instead of LZP3's original static Huffman code)."," * See: http://www.cbloom.com/papers/lzp.pdf"," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./BitStream', './Context1Model', './DefSumModel', './FenwickModel', './Huffman', './LogDistanceModel', './NoModel', './RangeCoder', './Stream', './Util'],function(BitStream, Context1Model, DefSumModel, FenwickModel, Huffman, LogDistanceModel, NoModel, RangeCoder, Stream, Util){","","var Lzp3 = Object.create(null);","Lzp3.MAGIC = 'lzp3';","","// use Huffman coder (fast) or else use range coder (slow)","var USE_HUFFMAN_CODE = false;","// use deferred-sum model, which is supposed to be faster (but compresses worse)","var USE_DEFSUM = false;","// when to give up attempting to model the length","var LENGTH_MODEL_CUTOFF = 256;","var MODEL_MAX_PROB = 0xFF00;","var MODEL_INCREMENT = 0x100;","","// Constants was used for compress/decompress function.","var CTXT4_TABLE_SIZE = 1 << 16;","var CTXT3_TABLE_SIZE = 1 << 12;","var CTXT2_TABLE_SIZE = 1 << 16;","var CONTEXT_LEN = 4;","var LOG_WINDOW_SIZE = 20;","var WINDOW_SIZE = 1 << LOG_WINDOW_SIZE;","var MAX_MATCH_LEN = WINDOW_SIZE-1;","var MATCH_LEN_CONTEXTS = 16;","","var MAX32 = 0xFFFFFFFF;","var MAX24 = 0x00FFFFFF;","var MAX16 = 0x0000FFFF;","var MAX8  = 0x000000FF;","","","var Window = function(maxSize) {","  this.buffer = Util.makeU8Buffer(Math.min(maxSize+4, WINDOW_SIZE));","  this.pos = 0;","  // context-4 hash table.","  this.ctxt4 = Util.makeU32Buffer(CTXT4_TABLE_SIZE);","  // context-3 hash table","  this.ctxt3 = Util.makeU32Buffer(CTXT3_TABLE_SIZE);","  // context-2 table (not really a hash any more)","  this.ctxt2 = Util.makeU32Buffer(CTXT2_TABLE_SIZE);","  // initial context","  this.put(0x63); this.put(0x53); this.put(0x61); this.put(0x20);","};","Window.prototype.put = function(_byte) {","  this.buffer[this.pos++] = _byte;","  if (this.pos >= WINDOW_SIZE) { this.pos = 0; }","  return _byte;","};","Window.prototype.get = function(pos) {","  return this.buffer[pos & (WINDOW_SIZE-1)];","};","Window.prototype.context = function(pos, n) {","  var c = 0, i;","  pos = (pos - n) & (WINDOW_SIZE-1);","  for (i=0; i<n; i++) {","    c = (c << 8) | this.buffer[pos++];","    if (pos >= WINDOW_SIZE) { pos = 0; }","  }","  return c;","};","// if matchLen !== 0, update the index; otherwise get index value.","Window.prototype.getIndex = function(s, matchLen) {","  var c = this.context(s, 4);","  // compute context hashes","  var h4 = ((c>>>15) ^ c) & (CTXT4_TABLE_SIZE-1);","  var h3 = ((c>>>11) ^ c) & (CTXT3_TABLE_SIZE-1);","  var h2 = c & MAX16;","  // check order-4 context","  var p = 0, checkc;","  // only do context confirmation if matchLen==0 (that is, if we're not just","  // doing an update)","  if (matchLen===0) {","    p = this.ctxt4[h4];","    if (p !== 0 && c !== this.context(p-1, 4)) {","      p = 0; // context confirmation failed","    }","    if (p === 0) {","      // check order-3 context","      p = this.ctxt3[h3];","      if (p !== 0 && (c & MAX24) !== this.context(p-1, 3)) {","        p = 0; // context confirmation failed","      }","      if (p === 0) {","        // check order-2 context","        p = this.ctxt2[h2];","        if (p !== 0 && (c && MAX16) !== this.context(p-1, 2)) {","          p = 0; // context confirmation failed","        }","      }","    }","  }","  // update context index","  if (matchLen) { matchLen--; }","  this.ctxt4[h4] = this.ctxt3[h3] = this.ctxt2[h2] =","    (s | (matchLen << LOG_WINDOW_SIZE)) + 1;","  // return lookup result.","  return p;","};","","/**"," * Compress using modified LZP3 algorithm.  Instead of using static"," * Huffman coding, we use an adaptive Huffman code or range encoding."," */","Lzp3.compressFile = Util.compressFileHelper(Lzp3.MAGIC, function(inStream, outStream, fileSize, props) {","  // sliding window & hash table","  var window = new Window( (fileSize>=0) ? fileSize : WINDOW_SIZE );","","  var coderFactory, sparseCoderFactory, flush;","","  if (USE_HUFFMAN_CODE) {","    // Huffman contexts","    outStream.writeByte(0x80); // mark that this is Huffman coded.","    var bitstream = new BitStream(outStream);","    flush = bitstream.flush.bind(bitstream);","    coderFactory = Huffman.factory(bitstream, MAX16);","    sparseCoderFactory = NoModel.factory(bitstream);","","  } else { // range encoder","    var range = new RangeCoder(outStream);","    range.encodeStart(0x00, 0); // 0x00 == range encoded","","    coderFactory = FenwickModel.factory(range, MODEL_MAX_PROB, MODEL_INCREMENT);","    if (USE_DEFSUM) {","      coderFactory = DefSumModel.factory(range, false /* encoder */);","    }","    // switch sparseCoderFactory to a NoModel when size > cutoff","    var noCoderFactory = NoModel.factory(range);","    sparseCoderFactory = function(size) {","      if (size > LENGTH_MODEL_CUTOFF) {","        return noCoderFactory(size);","      }","      return coderFactory(size);","    };","    flush = function() { range.encodeFinish(); };","  }","","  var huffLiteral= new Context1Model(coderFactory, 256,","                                     (fileSize<0) ? 257 : 256);","  var huffLen = [], i;","  for (i=0; i<MATCH_LEN_CONTEXTS; i++) {","    huffLen[i] = new LogDistanceModel(MAX_MATCH_LEN+1, 1,","                                      coderFactory, sparseCoderFactory);","  }","","  var inSize = 0, s, matchContext = 0;","  while (inSize !== fileSize) {","    var ch = inStream.readByte();","    s = window.pos;","    var p = window.getIndex(s, 0);","    if (p !== 0) {","      // great, a match! how long is it?","      p--; // p=0 is used for 'not here'. p=1 really means WINDOW_SIZE","      var prevMatchLen = (p >>> LOG_WINDOW_SIZE) + 1;","      var matchLen = 0;","      while (window.get(p + matchLen) === ch && matchLen < MAX_MATCH_LEN) {","        matchLen++;","        window.put(ch);","        ch = inStream.readByte();","      }","      // code match length; match len = 0 means \"literal\"","      // use \"extra state\" -1 to mean \"same as previous match length\"","      if (prevMatchLen===matchLen) {","        huffLen[matchContext&(MATCH_LEN_CONTEXTS-1)].encode(-1);","      } else {","        huffLen[matchContext&(MATCH_LEN_CONTEXTS-1)].encode(matchLen);","      }","      // update hash with this match","      window.getIndex(s, matchLen);","      inSize += matchLen;","      matchContext <<= 1;","      if (matchLen > 0) { matchContext |= 1; }","      // XXX: LZMA uses a special \"delta match\" context here if matchLen==0","      // XXX: it also uses the offset as context for the length (or vice-versa)","    }","    // always encode a literal after a match","    var context1 = window.get(window.pos-1);","    if (ch===Stream.EOF) {","      if (fileSize < 0) {","        huffLiteral.encode(256, context1);","      }","      break;","    }","    huffLiteral.encode(ch, context1);","    window.put(ch);","    inSize++;","  }","  if (flush) flush();","});","","/**"," * Decompress using modified LZP3 algorithm."," */","Lzp3.decompressFile = Util.decompressFileHelper(Lzp3.MAGIC, function(inStream, outStream, fileSize) {","  var flags = inStream.readByte();","  var use_huffman_code = !!(flags & 0x80);","","  // sliding window & hash table","  var window = new Window( (fileSize>=0) ? fileSize : WINDOW_SIZE );","","  var coderFactory, sparseCoderFactory, finish;","","  if (use_huffman_code) {","    // Huffman contexts","    var bitstream = new BitStream(inStream);","    coderFactory = Huffman.factory(bitstream, MAX16);","    sparseCoderFactory = NoModel.factory(bitstream);","  } else { // range encoder","    var range = new RangeCoder(inStream);","    range.decodeStart(true/* skip initial read */);","    coderFactory = FenwickModel.factory(range, MODEL_MAX_PROB, MODEL_INCREMENT);","    if (USE_DEFSUM) {","      coderFactory = DefSumModel.factory(range, true /* decoder */);","    }","    // switch sparseCoderFactory to a NoModel when size > cutoff","    var noCoderFactory = NoModel.factory(range);","    sparseCoderFactory = function(size) {","      if (size > LENGTH_MODEL_CUTOFF) {","        return noCoderFactory(size);","      }","      return coderFactory(size);","    };","    finish = function() { range.decodeFinish(); };","  }","","  var huffLiteral= new Context1Model(coderFactory, 256,","                                     (fileSize<0) ? 257 : 256);","  var huffLen = [], i;","  for (i=0; i<MATCH_LEN_CONTEXTS; i++) {","    huffLen[i] = new LogDistanceModel(MAX_MATCH_LEN+1, 1,","                                      coderFactory, sparseCoderFactory);","  }","","  var s, ch, outSize = 0, matchContext = 0;","  while (outSize !== fileSize) {","    s = window.pos;","    var p = window.getIndex(s, 0);","    if (p !== 0) {","      p--; // p=0 is used for 'not here'. p=1 really means WINDOW_SIZE","      var prevMatchLen = (p >>> LOG_WINDOW_SIZE) + 1;","      var matchLen = huffLen[matchContext&(MATCH_LEN_CONTEXTS-1)].decode();","      if (matchLen < 0) { matchLen = prevMatchLen; }","      // copy characters!","      for (i=0; i<matchLen; i++) {","        ch = window.get(p + i);","        outStream.writeByte(window.put(ch));","      }","      window.getIndex(s, matchLen);","      outSize += matchLen;","      matchContext <<= 1;","      if (matchLen > 0) matchContext |= 1;","    }","    // literal always follows match (or failed match)","    if (outSize === fileSize) {","      break; // EOF","    }","    var context1 = window.get(window.pos-1);","    ch = huffLiteral.decode(context1);","    if (ch === 256) {","      break; // EOF","    }","    outStream.writeByte(window.put(ch));","    outSize++;","  }","  if (finish) finish();","});","","","return Lzp3;","});",""],"l":{"5":1,"6":1,"8":1,"9":1,"12":1,"14":1,"16":1,"17":1,"18":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"30":1,"31":1,"32":1,"33":1,"36":1,"37":0,"38":0,"40":0,"42":0,"44":0,"46":0,"48":1,"49":0,"50":0,"51":0,"53":1,"54":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"66":1,"67":0,"69":0,"70":0,"71":0,"73":0,"76":0,"77":0,"78":0,"79":0,"81":0,"83":0,"84":0,"85":0,"87":0,"89":0,"90":0,"91":0,"97":0,"98":0,"101":0,"108":1,"110":0,"112":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"126":0,"127":0,"128":0,"131":0,"132":0,"133":0,"134":0,"136":0,"138":0,"141":0,"143":0,"144":0,"145":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"166":0,"167":0,"169":0,"172":0,"173":0,"174":0,"175":0,"180":0,"181":0,"182":0,"183":0,"185":0,"187":0,"188":0,"189":0,"191":0,"197":1,"198":0,"199":0,"202":0,"204":0,"206":0,"208":0,"209":0,"210":0,"212":0,"213":0,"214":0,"215":0,"216":0,"219":0,"220":0,"221":0,"222":0,"224":0,"226":0,"229":0,"231":0,"232":0,"233":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"247":0,"248":0,"249":0,"251":0,"252":0,"253":0,"254":0,"257":0,"258":0,"260":0,"261":0,"262":0,"263":0,"265":0,"266":0,"268":0,"272":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/PPM.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/PPM.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":60}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":26}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":25},"end":{"line":17,"column":41}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":39}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":29},"end":{"line":26,"column":46}}},"6":{"name":"(anonymous_6)","line":38,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":34}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":21},"end":{"line":42,"column":32}}},"8":{"name":"(anonymous_8)","line":43,"loc":{"start":{"line":43,"column":34},"end":{"line":43,"column":60}}},"9":{"name":"(anonymous_9)","line":53,"loc":{"start":{"line":53,"column":34},"end":{"line":53,"column":52}}},"10":{"name":"(anonymous_10)","line":67,"loc":{"start":{"line":67,"column":24},"end":{"line":67,"column":35}}},"11":{"name":"(anonymous_11)","line":72,"loc":{"start":{"line":72,"column":39},"end":{"line":72,"column":50}}},"12":{"name":"(anonymous_12)","line":98,"loc":{"start":{"line":98,"column":37},"end":{"line":98,"column":60}}},"13":{"name":"(anonymous_13)","line":109,"loc":{"start":{"line":109,"column":38},"end":{"line":109,"column":74}}},"14":{"name":"(anonymous_14)","line":147,"loc":{"start":{"line":147,"column":37},"end":{"line":147,"column":63}}},"15":{"name":"(anonymous_15)","line":191,"loc":{"start":{"line":191,"column":37},"end":{"line":191,"column":55}}},"16":{"name":"(anonymous_16)","line":233,"loc":{"start":{"line":233,"column":22},"end":{"line":233,"column":46}}},"17":{"name":"(anonymous_17)","line":236,"loc":{"start":{"line":236,"column":22},"end":{"line":236,"column":33}}},"18":{"name":"(anonymous_18)","line":242,"loc":{"start":{"line":242,"column":5},"end":{"line":242,"column":16}}},"19":{"name":"(anonymous_19)","line":253,"loc":{"start":{"line":253,"column":25},"end":{"line":253,"column":69}}},"20":{"name":"(anonymous_20)","line":285,"loc":{"start":{"line":285,"column":25},"end":{"line":285,"column":36}}},"21":{"name":"(anonymous_21)","line":305,"loc":{"start":{"line":305,"column":25},"end":{"line":305,"column":42}}},"22":{"name":"(anonymous_22)","line":327,"loc":{"start":{"line":327,"column":56},"end":{"line":327,"column":114}}},"23":{"name":"(anonymous_23)","line":334,"loc":{"start":{"line":334,"column":60},"end":{"line":334,"column":100}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":2,"column":36},"end":{"line":2,"column":77}},"3":{"start":{"line":3,"column":0},"end":{"line":343,"column":3}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":22}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":27}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":41}},"7":{"start":{"line":9,"column":2},"end":{"line":16,"column":4}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":49}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":26}},"11":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"12":{"start":{"line":14,"column":6},"end":{"line":14,"column":41}},"13":{"start":{"line":17,"column":2},"end":{"line":21,"column":4}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":74}},"16":{"start":{"line":19,"column":35},"end":{"line":19,"column":48}},"17":{"start":{"line":19,"column":49},"end":{"line":19,"column":72}},"18":{"start":{"line":20,"column":4},"end":{"line":20,"column":17}},"19":{"start":{"line":22,"column":2},"end":{"line":24,"column":4}},"20":{"start":{"line":23,"column":4},"end":{"line":23,"column":46}},"21":{"start":{"line":26,"column":2},"end":{"line":34,"column":4}},"22":{"start":{"line":27,"column":4},"end":{"line":27,"column":18}},"23":{"start":{"line":28,"column":4},"end":{"line":28,"column":38}},"24":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"25":{"start":{"line":30,"column":6},"end":{"line":30,"column":33}},"26":{"start":{"line":31,"column":6},"end":{"line":31,"column":42}},"27":{"start":{"line":31,"column":32},"end":{"line":31,"column":40}},"28":{"start":{"line":33,"column":4},"end":{"line":33,"column":48}},"29":{"start":{"line":36,"column":2},"end":{"line":36,"column":51}},"30":{"start":{"line":38,"column":2},"end":{"line":252,"column":4}},"31":{"start":{"line":39,"column":4},"end":{"line":39,"column":31}},"32":{"start":{"line":40,"column":4},"end":{"line":40,"column":40}},"33":{"start":{"line":42,"column":4},"end":{"line":42,"column":36}},"34":{"start":{"line":43,"column":4},"end":{"line":52,"column":6}},"35":{"start":{"line":44,"column":6},"end":{"line":44,"column":22}},"36":{"start":{"line":45,"column":6},"end":{"line":49,"column":7}},"37":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"38":{"start":{"line":47,"column":10},"end":{"line":47,"column":17}},"39":{"start":{"line":50,"column":6},"end":{"line":50,"column":39}},"40":{"start":{"line":51,"column":6},"end":{"line":51,"column":39}},"41":{"start":{"line":53,"column":4},"end":{"line":64,"column":6}},"42":{"start":{"line":54,"column":6},"end":{"line":54,"column":26}},"43":{"start":{"line":55,"column":6},"end":{"line":55,"column":39}},"44":{"start":{"line":56,"column":6},"end":{"line":56,"column":49}},"45":{"start":{"line":57,"column":6},"end":{"line":61,"column":7}},"46":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"47":{"start":{"line":59,"column":10},"end":{"line":59,"column":19}},"48":{"start":{"line":62,"column":6},"end":{"line":62,"column":41}},"49":{"start":{"line":63,"column":6},"end":{"line":63,"column":20}},"50":{"start":{"line":65,"column":4},"end":{"line":65,"column":37}},"51":{"start":{"line":67,"column":4},"end":{"line":71,"column":6}},"52":{"start":{"line":68,"column":6},"end":{"line":68,"column":24}},"53":{"start":{"line":69,"column":6},"end":{"line":69,"column":36}},"54":{"start":{"line":70,"column":6},"end":{"line":70,"column":24}},"55":{"start":{"line":72,"column":4},"end":{"line":97,"column":6}},"56":{"start":{"line":73,"column":6},"end":{"line":73,"column":37}},"57":{"start":{"line":74,"column":6},"end":{"line":74,"column":24}},"58":{"start":{"line":75,"column":6},"end":{"line":75,"column":26}},"59":{"start":{"line":76,"column":6},"end":{"line":88,"column":7}},"60":{"start":{"line":77,"column":8},"end":{"line":77,"column":30}},"61":{"start":{"line":78,"column":8},"end":{"line":78,"column":49}},"62":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"63":{"start":{"line":80,"column":8},"end":{"line":87,"column":9}},"64":{"start":{"line":81,"column":10},"end":{"line":83,"column":11}},"65":{"start":{"line":82,"column":12},"end":{"line":82,"column":29}},"66":{"start":{"line":84,"column":10},"end":{"line":84,"column":28}},"67":{"start":{"line":85,"column":10},"end":{"line":85,"column":33}},"68":{"start":{"line":86,"column":10},"end":{"line":86,"column":24}},"69":{"start":{"line":89,"column":6},"end":{"line":89,"column":27}},"70":{"start":{"line":90,"column":6},"end":{"line":90,"column":37}},"71":{"start":{"line":91,"column":6},"end":{"line":91,"column":38}},"72":{"start":{"line":93,"column":6},"end":{"line":95,"column":7}},"73":{"start":{"line":94,"column":8},"end":{"line":94,"column":71}},"74":{"start":{"line":96,"column":6},"end":{"line":96,"column":19}},"75":{"start":{"line":98,"column":4},"end":{"line":108,"column":6}},"76":{"start":{"line":100,"column":6},"end":{"line":100,"column":14}},"77":{"start":{"line":101,"column":6},"end":{"line":105,"column":7}},"78":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"79":{"start":{"line":103,"column":10},"end":{"line":103,"column":78}},"80":{"start":{"line":107,"column":6},"end":{"line":107,"column":46}},"81":{"start":{"line":109,"column":4},"end":{"line":146,"column":6}},"82":{"start":{"line":110,"column":6},"end":{"line":110,"column":37}},"83":{"start":{"line":111,"column":6},"end":{"line":111,"column":22}},"84":{"start":{"line":113,"column":6},"end":{"line":116,"column":7}},"85":{"start":{"line":114,"column":8},"end":{"line":114,"column":36}},"86":{"start":{"line":115,"column":8},"end":{"line":115,"column":45}},"87":{"start":{"line":119,"column":6},"end":{"line":143,"column":7}},"88":{"start":{"line":120,"column":8},"end":{"line":120,"column":29}},"89":{"start":{"line":121,"column":8},"end":{"line":121,"column":45}},"90":{"start":{"line":123,"column":8},"end":{"line":124,"column":37}},"91":{"start":{"line":126,"column":8},"end":{"line":126,"column":36}},"92":{"start":{"line":127,"column":8},"end":{"line":127,"column":33}},"93":{"start":{"line":128,"column":8},"end":{"line":128,"column":33}},"94":{"start":{"line":129,"column":8},"end":{"line":129,"column":22}},"95":{"start":{"line":130,"column":8},"end":{"line":130,"column":38}},"96":{"start":{"line":132,"column":8},"end":{"line":142,"column":9}},"97":{"start":{"line":133,"column":10},"end":{"line":141,"column":11}},"98":{"start":{"line":134,"column":12},"end":{"line":140,"column":13}},"99":{"start":{"line":136,"column":14},"end":{"line":136,"column":71}},"100":{"start":{"line":137,"column":14},"end":{"line":137,"column":32}},"101":{"start":{"line":138,"column":14},"end":{"line":138,"column":33}},"102":{"start":{"line":139,"column":14},"end":{"line":139,"column":52}},"103":{"start":{"line":144,"column":6},"end":{"line":144,"column":61}},"104":{"start":{"line":144,"column":35},"end":{"line":144,"column":59}},"105":{"start":{"line":145,"column":6},"end":{"line":145,"column":19}},"106":{"start":{"line":147,"column":4},"end":{"line":190,"column":6}},"107":{"start":{"line":149,"column":6},"end":{"line":149,"column":62}},"108":{"start":{"line":150,"column":6},"end":{"line":150,"column":58}},"109":{"start":{"line":151,"column":6},"end":{"line":179,"column":7}},"110":{"start":{"line":152,"column":8},"end":{"line":152,"column":28}},"111":{"start":{"line":153,"column":8},"end":{"line":153,"column":39}},"112":{"start":{"line":154,"column":8},"end":{"line":178,"column":9}},"113":{"start":{"line":157,"column":10},"end":{"line":164,"column":11}},"114":{"start":{"line":158,"column":12},"end":{"line":163,"column":13}},"115":{"start":{"line":159,"column":14},"end":{"line":159,"column":27}},"116":{"start":{"line":160,"column":14},"end":{"line":160,"column":54}},"117":{"start":{"line":161,"column":14},"end":{"line":161,"column":33}},"118":{"start":{"line":162,"column":14},"end":{"line":162,"column":34}},"119":{"start":{"line":165,"column":10},"end":{"line":165,"column":38}},"120":{"start":{"line":167,"column":10},"end":{"line":167,"column":26}},"121":{"start":{"line":168,"column":10},"end":{"line":168,"column":28}},"122":{"start":{"line":169,"column":10},"end":{"line":169,"column":46}},"123":{"start":{"line":170,"column":10},"end":{"line":173,"column":11}},"124":{"start":{"line":171,"column":12},"end":{"line":171,"column":59}},"125":{"start":{"line":172,"column":12},"end":{"line":172,"column":25}},"126":{"start":{"line":174,"column":10},"end":{"line":174,"column":22}},"127":{"start":{"line":175,"column":15},"end":{"line":178,"column":9}},"128":{"start":{"line":176,"column":10},"end":{"line":176,"column":23}},"129":{"start":{"line":177,"column":10},"end":{"line":177,"column":27}},"130":{"start":{"line":181,"column":6},"end":{"line":181,"column":33}},"131":{"start":{"line":183,"column":6},"end":{"line":183,"column":59}},"132":{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},"133":{"start":{"line":185,"column":8},"end":{"line":188,"column":9}},"134":{"start":{"line":186,"column":10},"end":{"line":186,"column":38}},"135":{"start":{"line":187,"column":10},"end":{"line":187,"column":26}},"136":{"start":{"line":191,"column":4},"end":{"line":232,"column":6}},"137":{"start":{"line":192,"column":6},"end":{"line":192,"column":37}},"138":{"start":{"line":193,"column":6},"end":{"line":193,"column":38}},"139":{"start":{"line":194,"column":6},"end":{"line":194,"column":58}},"140":{"start":{"line":195,"column":6},"end":{"line":195,"column":12}},"141":{"start":{"line":196,"column":6},"end":{"line":201,"column":7}},"142":{"start":{"line":197,"column":8},"end":{"line":200,"column":9}},"143":{"start":{"line":198,"column":10},"end":{"line":198,"column":23}},"144":{"start":{"line":199,"column":10},"end":{"line":199,"column":52}},"145":{"start":{"line":202,"column":6},"end":{"line":202,"column":66}},"146":{"start":{"line":205,"column":6},"end":{"line":205,"column":25}},"147":{"start":{"line":206,"column":6},"end":{"line":213,"column":7}},"148":{"start":{"line":207,"column":8},"end":{"line":212,"column":16}},"149":{"start":{"line":208,"column":10},"end":{"line":208,"column":50}},"150":{"start":{"line":209,"column":10},"end":{"line":209,"column":29}},"151":{"start":{"line":210,"column":10},"end":{"line":210,"column":26}},"152":{"start":{"line":211,"column":15},"end":{"line":212,"column":16}},"153":{"start":{"line":212,"column":10},"end":{"line":212,"column":16}},"154":{"start":{"line":214,"column":6},"end":{"line":214,"column":27}},"155":{"start":{"line":215,"column":6},"end":{"line":215,"column":31}},"156":{"start":{"line":216,"column":6},"end":{"line":216,"column":30}},"157":{"start":{"line":217,"column":6},"end":{"line":217,"column":41}},"158":{"start":{"line":218,"column":6},"end":{"line":218,"column":65}},"159":{"start":{"line":220,"column":6},"end":{"line":220,"column":43}},"160":{"start":{"line":220,"column":27},"end":{"line":220,"column":41}},"161":{"start":{"line":222,"column":6},"end":{"line":222,"column":53}},"162":{"start":{"line":224,"column":6},"end":{"line":224,"column":59}},"163":{"start":{"line":225,"column":6},"end":{"line":230,"column":7}},"164":{"start":{"line":226,"column":8},"end":{"line":229,"column":9}},"165":{"start":{"line":227,"column":10},"end":{"line":227,"column":38}},"166":{"start":{"line":228,"column":10},"end":{"line":228,"column":26}},"167":{"start":{"line":231,"column":6},"end":{"line":231,"column":16}},"168":{"start":{"line":233,"column":4},"end":{"line":235,"column":6}},"169":{"start":{"line":234,"column":6},"end":{"line":234,"column":33}},"170":{"start":{"line":236,"column":4},"end":{"line":240,"column":6}},"171":{"start":{"line":237,"column":6},"end":{"line":237,"column":39}},"172":{"start":{"line":238,"column":6},"end":{"line":238,"column":23}},"173":{"start":{"line":239,"column":6},"end":{"line":239,"column":20}},"174":{"start":{"line":242,"column":4},"end":{"line":251,"column":18}},"175":{"start":{"line":243,"column":6},"end":{"line":243,"column":15}},"176":{"start":{"line":244,"column":6},"end":{"line":250,"column":7}},"177":{"start":{"line":245,"column":8},"end":{"line":249,"column":9}},"178":{"start":{"line":246,"column":10},"end":{"line":246,"column":65}},"179":{"start":{"line":247,"column":10},"end":{"line":247,"column":76}},"180":{"start":{"line":247,"column":36},"end":{"line":247,"column":74}},"181":{"start":{"line":248,"column":10},"end":{"line":248,"column":39}},"182":{"start":{"line":253,"column":2},"end":{"line":284,"column":4}},"183":{"start":{"line":255,"column":4},"end":{"line":255,"column":21}},"184":{"start":{"line":256,"column":4},"end":{"line":268,"column":5}},"185":{"start":{"line":257,"column":6},"end":{"line":257,"column":48}},"186":{"start":{"line":258,"column":6},"end":{"line":258,"column":32}},"187":{"start":{"line":259,"column":6},"end":{"line":261,"column":7}},"188":{"start":{"line":260,"column":8},"end":{"line":260,"column":54}},"189":{"start":{"line":262,"column":6},"end":{"line":265,"column":7}},"190":{"start":{"line":264,"column":8},"end":{"line":264,"column":48}},"191":{"start":{"line":267,"column":6},"end":{"line":267,"column":23}},"192":{"start":{"line":270,"column":4},"end":{"line":271,"column":53}},"193":{"start":{"line":272,"column":4},"end":{"line":272,"column":42}},"194":{"start":{"line":273,"column":4},"end":{"line":281,"column":5}},"195":{"start":{"line":274,"column":6},"end":{"line":274,"column":37}},"196":{"start":{"line":275,"column":6},"end":{"line":275,"column":32}},"197":{"start":{"line":276,"column":6},"end":{"line":276,"column":28}},"198":{"start":{"line":277,"column":6},"end":{"line":280,"column":7}},"199":{"start":{"line":278,"column":8},"end":{"line":278,"column":34}},"200":{"start":{"line":279,"column":8},"end":{"line":279,"column":33}},"201":{"start":{"line":283,"column":4},"end":{"line":283,"column":28}},"202":{"start":{"line":285,"column":2},"end":{"line":304,"column":4}},"203":{"start":{"line":286,"column":4},"end":{"line":286,"column":74}},"204":{"start":{"line":287,"column":4},"end":{"line":287,"column":36}},"205":{"start":{"line":288,"column":4},"end":{"line":288,"column":29}},"206":{"start":{"line":289,"column":4},"end":{"line":299,"column":5}},"207":{"start":{"line":290,"column":6},"end":{"line":290,"column":48}},"208":{"start":{"line":291,"column":6},"end":{"line":291,"column":32}},"209":{"start":{"line":292,"column":6},"end":{"line":298,"column":7}},"210":{"start":{"line":293,"column":8},"end":{"line":293,"column":39}},"211":{"start":{"line":294,"column":8},"end":{"line":297,"column":9}},"212":{"start":{"line":295,"column":10},"end":{"line":295,"column":48}},"213":{"start":{"line":296,"column":10},"end":{"line":296,"column":24}},"214":{"start":{"line":301,"column":4},"end":{"line":301,"column":43}},"215":{"start":{"line":302,"column":4},"end":{"line":302,"column":42}},"216":{"start":{"line":303,"column":4},"end":{"line":303,"column":18}},"217":{"start":{"line":305,"column":2},"end":{"line":324,"column":4}},"218":{"start":{"line":306,"column":4},"end":{"line":306,"column":74}},"219":{"start":{"line":307,"column":4},"end":{"line":307,"column":36}},"220":{"start":{"line":308,"column":4},"end":{"line":308,"column":10}},"221":{"start":{"line":309,"column":4},"end":{"line":319,"column":5}},"222":{"start":{"line":310,"column":6},"end":{"line":310,"column":52}},"223":{"start":{"line":311,"column":6},"end":{"line":311,"column":36}},"224":{"start":{"line":312,"column":6},"end":{"line":318,"column":7}},"225":{"start":{"line":313,"column":8},"end":{"line":313,"column":52}},"226":{"start":{"line":314,"column":8},"end":{"line":317,"column":9}},"227":{"start":{"line":315,"column":10},"end":{"line":315,"column":48}},"228":{"start":{"line":316,"column":10},"end":{"line":316,"column":17}},"229":{"start":{"line":321,"column":4},"end":{"line":321,"column":42}},"230":{"start":{"line":322,"column":4},"end":{"line":322,"column":42}},"231":{"start":{"line":323,"column":4},"end":{"line":323,"column":11}},"232":{"start":{"line":326,"column":2},"end":{"line":326,"column":21}},"233":{"start":{"line":327,"column":2},"end":{"line":333,"column":11}},"234":{"start":{"line":328,"column":4},"end":{"line":328,"column":42}},"235":{"start":{"line":329,"column":4},"end":{"line":329,"column":36}},"236":{"start":{"line":330,"column":4},"end":{"line":330,"column":57}},"237":{"start":{"line":331,"column":4},"end":{"line":331,"column":54}},"238":{"start":{"line":332,"column":4},"end":{"line":332,"column":25}},"239":{"start":{"line":334,"column":2},"end":{"line":340,"column":5}},"240":{"start":{"line":335,"column":4},"end":{"line":335,"column":41}},"241":{"start":{"line":336,"column":4},"end":{"line":336,"column":63}},"242":{"start":{"line":337,"column":4},"end":{"line":337,"column":57}},"243":{"start":{"line":338,"column":4},"end":{"line":338,"column":57}},"244":{"start":{"line":339,"column":4},"end":{"line":339,"column":25}},"245":{"start":{"line":342,"column":2},"end":{"line":342,"column":13}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"6":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":10},"end":{"line":81,"column":10}},{"start":{"line":81,"column":10},"end":{"line":81,"column":10}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"9":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":10},"end":{"line":93,"column":18}},{"start":{"line":93,"column":22},"end":{"line":93,"column":37}}]},"10":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":8}},{"start":{"line":102,"column":8},"end":{"line":102,"column":8}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"12":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":12}},{"start":{"line":134,"column":12},"end":{"line":134,"column":12}}]},"14":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"15":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"16":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":22},"end":{"line":157,"column":26}},{"start":{"line":157,"column":30},"end":{"line":157,"column":53}}]},"17":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"18":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":10},"end":{"line":170,"column":10}},{"start":{"line":170,"column":10},"end":{"line":170,"column":10}}]},"19":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":15},"end":{"line":175,"column":15}},{"start":{"line":175,"column":15},"end":{"line":175,"column":15}}]},"20":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":8}},{"start":{"line":185,"column":8},"end":{"line":185,"column":8}}]},"21":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":25},"end":{"line":196,"column":29}},{"start":{"line":196,"column":33},"end":{"line":196,"column":56}}]},"22":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"23":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"24":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":15},"end":{"line":211,"column":15}},{"start":{"line":211,"column":15},"end":{"line":211,"column":15}}]},"25":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"26":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":8}},{"start":{"line":226,"column":8},"end":{"line":226,"column":8}}]},"27":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":10},"end":{"line":247,"column":10}},{"start":{"line":247,"column":10},"end":{"line":247,"column":10}}]},"28":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":6},"end":{"line":259,"column":6}},{"start":{"line":259,"column":6},"end":{"line":259,"column":6}}]},"29":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":6},"end":{"line":262,"column":6}},{"start":{"line":262,"column":6},"end":{"line":262,"column":6}}]},"30":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":24},"end":{"line":273,"column":28}},{"start":{"line":273,"column":32},"end":{"line":273,"column":42}}]},"31":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":6}},{"start":{"line":277,"column":6},"end":{"line":277,"column":6}}]},"32":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":6}},{"start":{"line":292,"column":6},"end":{"line":292,"column":6}}]},"33":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":294,"column":8}},{"start":{"line":294,"column":8},"end":{"line":294,"column":8}}]},"34":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":6}},{"start":{"line":312,"column":6},"end":{"line":312,"column":6}}]},"35":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":8},"end":{"line":314,"column":8}},{"start":{"line":314,"column":8},"end":{"line":314,"column":8}}]},"36":{"line":330,"type":"cond-expr","locations":[{"start":{"line":330,"column":46},"end":{"line":330,"column":49}},{"start":{"line":330,"column":52},"end":{"line":330,"column":55}}]},"37":{"line":337,"type":"cond-expr","locations":[{"start":{"line":337,"column":46},"end":{"line":337,"column":49}},{"start":{"line":337,"column":52},"end":{"line":337,"column":55}}]}},"code":["/** Particularly simple-minded implementation of PPM compression. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./RangeCoder','./Util'], function(RangeCoder,Util) {","","  var MAX_CONTEXT = 5;","  var LOG_WINDOW_SIZE = 18;","  var WINDOW_SIZE = 1 << LOG_WINDOW_SIZE;","","  var Window = function() {","    this.buffer = Util.makeU8Buffer(WINDOW_SIZE);","    this.pos = 0;","    this.firstPass = true;","    for (var i=0; i<MAX_CONTEXT; i++) {","      this.put('cSaCsA'.charCodeAt(i%6));","    }","  };","  Window.prototype.put = function(_byte) {","    this.buffer[this.pos++] = _byte;","    if (this.pos >= WINDOW_SIZE) { this.pos = 0; this.firstPass = false; }","    return _byte;","  };","  Window.prototype.get = function(pos) {","    return this.buffer[pos & (WINDOW_SIZE-1)];","  };","  // the context ending just before 'pos'","  Window.prototype.context = function(pos, n) {","    var c = [], i;","    pos = (pos - n) & (WINDOW_SIZE-1);","    for (i=0; i<n; i++) {","      c.push(this.buffer[pos++]);","      if (pos >= WINDOW_SIZE) { pos = 0; }","    }","    return String.fromCharCode.apply(String, c);","  };","","  var DMM_INCREMENT = 0x100, DMM_MAX_PROB = 0xFF00;","","  var PPM = function(coder, size) {","    this.window = new Window();","    this.contexts = Object.create(null);","    // brain-dead '-1' context, using full exclusion","    var Cm1Context = function() { };","    Cm1Context.prototype.encode = function(symbol, exclude) {","      var i, lt_f = 0;","      for (i=0; i<symbol; i++) {","        if (!exclude[i]) {","          lt_f++;","        }","      }","      var tot_f = size - exclude.total;","      coder.encodeFreq(1, lt_f, tot_f);","    };","    Cm1Context.prototype.decode = function(exclude) {","      var i, symbol, lt_f;","      var tot_f = size - exclude.total;","      symbol = lt_f = coder.decodeCulFreq(tot_f);","      for (i=0; i<=symbol; i++) {","        if (exclude[i]) {","          symbol++;","        }","      }","      coder.decodeUpdate(1, lt_f, tot_f);","      return symbol;","    };","    this.cm1coder = new Cm1Context();","","    var DenseMTFModel = function() {","      this.sym = [size];","      this.prob= [0, DMM_INCREMENT];","      this.refcount = 0;","    };","    DenseMTFModel.prototype._rescale = function() {","      var seenSyms = this.sym.length;","      var i, j, total=0;","      var noEscape = true;","      for(i=0, j=0; i<seenSyms; i++) {","        var sym = this.sym[i];","        var sy_f = this.prob[i+1] - this.prob[i];","        sy_f >>>= 1;","        if (sy_f > 0) {","          if (sym === size) {","            noEscape = false;","          }","          this.sym[j] = sym;","          this.prob[j++] = total;","          total += sy_f;","        }","      }","      this.prob[j] = total;","      seenSyms = this.sym.length = j;","      this.prob.length = seenSyms + 1;","      // don't allow escape to go to zero prob if we still need it","      if (noEscape && seenSyms < size) {","        total = this._update(size/*escape*/, seenSyms/*at end*/, 0, 1);","      }","      return total;","    };","    DenseMTFModel.prototype.update = function(symbol, incr) {","      // find symbol","      var i=0;","      for (i=0; i<this.sym.length; i++) {","        if (this.sym[i] === symbol) {","          return this._update(symbol, i, this.prob[i+1] - this.prob[i], incr);","        }","      }","      // symbol escaped","      return this._update(symbol, i, 0, incr);","    };","    DenseMTFModel.prototype._update = function(symbol, index, sy_f, incr) {","      var seenSyms = this.sym.length;","      var i, j, tot_f;","      // move this symbol to the end","      for (j=index; j<seenSyms-1; j++) {","        this.sym[j] = this.sym[j+1];","        this.prob[j] = this.prob[j+1] - sy_f;","      }","      // \"method D\" -- if we add a new escaped symbol, escape & the symbol","      // both increase by 1/2.","      if (index < seenSyms) {","        this.sym[j] = symbol;","        this.prob[j] = this.prob[j+1] - sy_f;","        // increase frequency for this symbol, and total freq at same time","        this.prob[seenSyms] = tot_f =","          this.prob[seenSyms] + incr;","      } else { // add to the end","        tot_f = this.prob[seenSyms];","        this.sym[index] = symbol;","        this.prob[index] = tot_f;","        tot_f += incr;","        this.prob[++seenSyms] = tot_f;","        // remove probability of escape if table just filled up","        if (this.sym.length > size) {","          for (i=0; i<seenSyms; i++) {","            if (size === this.sym[i]) {","              // found it.","              this._update(size, i, this.prob[i+1] - this.prob[i], -1);","              this.sym.length--;","              this.prob.length--;","              tot_f = this.prob[this.prob.length-1];","            }","          }","        }","      }","      if (tot_f >= DMM_MAX_PROB) { tot_f = this._rescale(); }","      return tot_f;","    };","    DenseMTFModel.prototype.encode = function(symbol, exclude) {","      // look for symbol, from most-recent to oldest","      var i, j, sy_f, lt_f, tot_f, seenSyms = this.sym.length;","      var ex_seen = 0, ex_lt_f = 0, ex_tot_f = 0, ex_sy_f;","      for (i=seenSyms-1; i>=0; i--) {","        lt_f = this.prob[i];","        sy_f = this.prob[i + 1] - lt_f;","        if (symbol === this.sym[i]) {","          // ok, found it.","          // count up the rest of the probabilities","          for (j=i-1; j>=0 && ex_seen < exclude.total; j--) {","            if (exclude[this.sym[j]]) {","              ex_seen += 1;","              ex_sy_f = this.prob[j+1] - this.prob[j];","              ex_lt_f += ex_sy_f;","              ex_tot_f += ex_sy_f;","            }","          }","          tot_f = this.prob[seenSyms];","          // adjust by excluded symbols","          lt_f -= ex_lt_f;","          tot_f -= ex_tot_f;","          coder.encodeFreq(sy_f, lt_f, tot_f);","          if (symbol === size) { // only update table for escapes","            this._update(symbol, i, sy_f, DMM_INCREMENT/2);","            return false; // escape.","          } // otherwise we'll do update later","          return true; // encoded character!","        } else if (exclude[this.sym[i]]) {","          ex_seen += 1;","          ex_tot_f += sy_f;","        }","      }","      // couldn't find this symbol.  encode as escape.","      this.encode(size, exclude);","      // add symbols to exclusion table","      console.assert(this.sym[this.sym.length-1] === size);//escape","      for (i=0; i<this.sym.length-1; i++) {","        if (!exclude[this.sym[i]]) {","          exclude[this.sym[i]] = true;","          exclude.total++;","        }","      }","    };","    DenseMTFModel.prototype.decode = function(exclude) {","      var seenSyms = this.sym.length;","      var tot_f = this.prob[seenSyms];","      var ex_seen = 0, ex_lt_f = 0, ex_tot_f = 0, ex_sy_f;","      var i;","      for (i=seenSyms-1; i>=0 && ex_seen < exclude.total; i--) {","        if (exclude[this.sym[i]]) {","          ex_seen += 1;","          ex_tot_f += this.prob[i+1] - this.prob[i];","        }","      }","      var prob = coder.decodeCulFreq(tot_f - ex_tot_f) + ex_tot_f;","      // we're expecting to find the probability near the \"most recent\" side","      // of our array","      ex_lt_f = ex_tot_f;","      for (i=seenSyms-1; i>=0; i--) {","        if (exclude[this.sym[i]]) {","          ex_sy_f = this.prob[i+1] - this.prob[i];","          ex_lt_f -= ex_sy_f;","          prob -= ex_sy_f;","        } else if (this.prob[i] <= prob /*&& prob < this.prob[i+1]*/)","          break;","      }","      console.assert(i>=0);","      var symbol = this.sym[i];","      var lt_f = this.prob[i];","      var sy_f = this.prob[i + 1] - lt_f;","      coder.decodeUpdate(sy_f, lt_f - ex_lt_f, tot_f - ex_tot_f);","      // defer update","      if (symbol < size) { return symbol; }","      // an escape","      this._update(symbol, i, sy_f, DMM_INCREMENT/2);","      // add symbols to exclusion table","      console.assert(this.sym[this.sym.length-1] === size);//escape","      for (i=0; i<this.sym.length-1; i++) {","        if (!exclude[this.sym[i]]) {","          exclude[this.sym[i]] = true;","          exclude.total++;","        }","      }","      return -1;","    };","    this.newContext = function(initialSymbol) {","      return new DenseMTFModel();","    };","    this.newExclude = function() {","      var result = Object.create(null);","      result.total = 0; // no excluded symbols (yet)","      return result;","    };","    // set up some initial contexts","    (function() {","      var i, j;","      for (i=0; i<MAX_CONTEXT; i++) {","        for (j=0; j<=i; j++) {","          var cc = this.window.context(j+((MAX_CONTEXT-1)-i), j);","          if (!this.contexts[cc]) { this.contexts[cc] = this.newContext(); }","          this.contexts[cc].refcount++;","        }","      }","    }).call(this);","  };","  PPM.prototype.update = function(symbol, contextString, matchLevel) {","    // slide up the contexts, updating them","    var model, c, cc;","    for (c=0; c <= MAX_CONTEXT; c++) {","      cc = contextString.slice(MAX_CONTEXT - c);","      model = this.contexts[cc];","      if (!model) {","        model = this.contexts[cc] = this.newContext();","      }","      if (c >= matchLevel) {","        // only update useful contexts","        model.update(symbol, DMM_INCREMENT / 2);","      }","      // refcount all contexts, whether used/updated or not","      model.refcount++;","    }","    // now garbage-collect old contexts","    contextString = this.window.context(this.window.pos + MAX_CONTEXT,","                                        MAX_CONTEXT);","    var firstPass = this.window.firstPass;","    for (c=MAX_CONTEXT; c>=0 && !firstPass; c--) {","      cc = contextString.slice(0, c);","      model = this.contexts[cc];","      console.assert(model);","      if ((--model.refcount) <= 0) {","        console.assert(cc !== ''); // don't allow context-0 to be gc'ed!","        delete this.contexts[cc];","      }","    }","    // ok, advance window.","    this.window.put(symbol);","  };","  PPM.prototype.decode = function() {","    var contextString = this.window.context(this.window.pos, MAX_CONTEXT);","    var exclude = this.newExclude();","    var model, c, cc, symbol;","    for (c=MAX_CONTEXT; c>=0; c--) {","      cc = contextString.slice(MAX_CONTEXT - c);","      model = this.contexts[cc];","      if (model) {","        symbol = model.decode(exclude);","        if (symbol >= 0) {","          this.update(symbol, contextString, c);","          return symbol;","        }","      }","    }","    // still no match, fall back to context -1","    symbol = this.cm1coder.decode(exclude);","    this.update(symbol, contextString, c);","    return symbol;","  };","  PPM.prototype.encode = function(symbol) {","    var contextString = this.window.context(this.window.pos, MAX_CONTEXT);","    var exclude = this.newExclude();","    var c;","    for (c=MAX_CONTEXT; c>=0; c--) {","      var cc = contextString.slice(MAX_CONTEXT - c);","      var model = this.contexts[cc];","      if (model) {","        var success = model.encode(symbol, exclude);","        if (success) {","          this.update(symbol, contextString, c);","          return;","        }","      }","    }","    // fall back to context -1 (but still use exclusion table)","    this.cm1coder.encode(symbol, exclude);","    this.update(symbol, contextString, c);","    return;","  };","","  PPM.MAGIC = 'ppm2';","  PPM.compressFile = Util.compressFileHelper(PPM.MAGIC, function(inStream, outStream, fileSize, props, finalByte) {","    var range = new RangeCoder(outStream);","    range.encodeStart(finalByte, 1);","    var model = new PPM(range, (fileSize<0) ? 257 : 256);","    Util.compressWithModel(inStream, fileSize, model);","    range.encodeFinish();","  }, true);","  PPM.decompressFile = Util.decompressFileHelper(PPM.MAGIC, function(inStream, outStream, fileSize) {","    var range = new RangeCoder(inStream);","    range.decodeStart(true/*we already read the 'free' byte*/);","    var model = new PPM(range, (fileSize<0) ? 257 : 256);","    Util.decompressWithModel(outStream, fileSize, model);","    range.decodeFinish();","  });","","  return PPM;","});",""],"l":{"2":1,"3":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"17":1,"18":0,"19":0,"20":0,"22":1,"23":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"36":1,"38":1,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"62":0,"63":0,"65":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"89":0,"90":0,"91":0,"93":0,"94":0,"96":0,"98":0,"100":0,"101":0,"102":0,"103":0,"107":0,"109":0,"110":0,"111":0,"113":0,"114":0,"115":0,"119":0,"120":0,"121":0,"123":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"139":0,"144":0,"145":0,"147":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"165":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"174":0,"175":0,"176":0,"177":0,"181":0,"183":0,"184":0,"185":0,"186":0,"187":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"202":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"222":0,"224":0,"225":0,"226":0,"227":0,"228":0,"231":0,"233":0,"234":0,"236":0,"237":0,"238":0,"239":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"253":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"262":0,"264":0,"267":0,"270":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"283":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"301":0,"302":0,"303":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"321":0,"322":0,"323":0,"326":1,"327":1,"328":0,"329":0,"330":0,"331":0,"332":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":0,"342":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Simple.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/Simple.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":44},"end":{"line":6,"column":76}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":64},"end":{"line":11,"column":112}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":24},"end":{"line":20,"column":35}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":68},"end":{"line":75,"column":98}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":79}},"2":{"start":{"line":5,"column":36},"end":{"line":5,"column":77}},"3":{"start":{"line":6,"column":0},"end":{"line":111,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":31}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":37}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"7":{"start":{"line":11,"column":4},"end":{"line":74,"column":13}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":45}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":42}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":54}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":24}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":44}},"13":{"start":{"line":20,"column":8},"end":{"line":44,"column":10}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":24}},"15":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"16":{"start":{"line":24,"column":16},"end":{"line":24,"column":32}},"17":{"start":{"line":26,"column":12},"end":{"line":29,"column":13}},"18":{"start":{"line":27,"column":16},"end":{"line":27,"column":32}},"19":{"start":{"line":28,"column":16},"end":{"line":28,"column":23}},"20":{"start":{"line":30,"column":12},"end":{"line":42,"column":13}},"21":{"start":{"line":31,"column":16},"end":{"line":31,"column":41}},"22":{"start":{"line":32,"column":16},"end":{"line":35,"column":17}},"23":{"start":{"line":33,"column":20},"end":{"line":33,"column":34}},"24":{"start":{"line":34,"column":20},"end":{"line":34,"column":26}},"25":{"start":{"line":36,"column":16},"end":{"line":36,"column":33}},"26":{"start":{"line":37,"column":16},"end":{"line":37,"column":28}},"27":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"28":{"start":{"line":40,"column":20},"end":{"line":40,"column":26}},"29":{"start":{"line":43,"column":12},"end":{"line":43,"column":30}},"30":{"start":{"line":46,"column":8},"end":{"line":69,"column":9}},"31":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"32":{"start":{"line":48,"column":12},"end":{"line":48,"column":24}},"33":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"34":{"start":{"line":50,"column":16},"end":{"line":50,"column":22}},"35":{"start":{"line":53,"column":12},"end":{"line":53,"column":36}},"36":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"37":{"start":{"line":56,"column":16},"end":{"line":56,"column":47}},"38":{"start":{"line":59,"column":12},"end":{"line":59,"column":38}},"39":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":54}},"41":{"start":{"line":64,"column":12},"end":{"line":68,"column":13}},"42":{"start":{"line":65,"column":16},"end":{"line":65,"column":34}},"43":{"start":{"line":66,"column":16},"end":{"line":67,"column":48}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":33}},"45":{"start":{"line":73,"column":8},"end":{"line":73,"column":31}},"46":{"start":{"line":75,"column":4},"end":{"line":109,"column":7}},"47":{"start":{"line":76,"column":8},"end":{"line":76,"column":44}},"48":{"start":{"line":77,"column":8},"end":{"line":77,"column":69}},"49":{"start":{"line":78,"column":8},"end":{"line":107,"column":9}},"50":{"start":{"line":79,"column":12},"end":{"line":79,"column":31}},"51":{"start":{"line":81,"column":12},"end":{"line":83,"column":13}},"52":{"start":{"line":82,"column":16},"end":{"line":82,"column":50}},"53":{"start":{"line":85,"column":12},"end":{"line":85,"column":30}},"54":{"start":{"line":86,"column":12},"end":{"line":90,"column":13}},"55":{"start":{"line":87,"column":16},"end":{"line":87,"column":36}},"56":{"start":{"line":88,"column":16},"end":{"line":88,"column":38}},"57":{"start":{"line":89,"column":16},"end":{"line":89,"column":33}},"58":{"start":{"line":91,"column":12},"end":{"line":91,"column":36}},"59":{"start":{"line":93,"column":12},"end":{"line":106,"column":13}},"60":{"start":{"line":94,"column":16},"end":{"line":94,"column":58}},"61":{"start":{"line":96,"column":16},"end":{"line":96,"column":27}},"62":{"start":{"line":97,"column":16},"end":{"line":101,"column":30}},"63":{"start":{"line":100,"column":20},"end":{"line":101,"column":30}},"64":{"start":{"line":101,"column":24},"end":{"line":101,"column":30}},"65":{"start":{"line":102,"column":16},"end":{"line":102,"column":32}},"66":{"start":{"line":103,"column":16},"end":{"line":104,"column":64}},"67":{"start":{"line":105,"column":16},"end":{"line":105,"column":41}},"68":{"start":{"line":108,"column":8},"end":{"line":108,"column":31}},"69":{"start":{"line":110,"column":4},"end":{"line":110,"column":18}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":5,"column":0}},{"start":{"line":5,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":12}},{"start":{"line":26,"column":12},"end":{"line":26,"column":12}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":16}},{"start":{"line":39,"column":16},"end":{"line":39,"column":16}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"6":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":22}},{"start":{"line":49,"column":26},"end":{"line":49,"column":41}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":20},"end":{"line":100,"column":20}},{"start":{"line":100,"column":20},"end":{"line":100,"column":20}}]},"8":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":24},"end":{"line":100,"column":42}},{"start":{"line":100,"column":46},"end":{"line":100,"column":67}}]}},"code":["/* *Very* simple de/compression utility, based on simple_c and simple_d from"," * rngcod13.zip at http://www.compressconsult.com/rangecoder/"," * Really just a demonstration/test of the rangecoder."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./RangeCoder','./Stream','./Util'],function(RangeCoder,Stream,Util){","    var MAX_BLOCK_SIZE = 1<<17;","","    var Simple = Object.create(null);","    Simple.MAGIC = 'smpl';","    Simple.compressFile = Util.compressFileHelper(Simple.MAGIC, function(input, output, size, props, finalByte) {","        var encoder = new RangeCoder(output);","        encoder.encodeStart(finalByte, 1);","","        // read a block","        var block = Util.makeU8Buffer(MAX_BLOCK_SIZE);","        var counts = [];","        var blockLength = 0, sawEOF = false;","","        var readBlock = function() {","            var pos = 0;","            // initialize counts","            for (pos=0; pos < 256; pos++) {","                counts[pos] = 0;","            }","            if (sawEOF) {","                blockLength = 0;","                return;","            }","            for (pos=0; pos < MAX_BLOCK_SIZE; ) {","                var c = input.readByte();","                if (c===Stream.EOF) {","                    sawEOF = true;","                    break;","                }","                block[pos++] = c;","                counts[c]++;","                // bail if some count reaches maximum","                if (counts[c]===0xFFFF) {","                    break;","                }","            }","            blockLength = pos;","        };","","        while (true) {","            var i;","            readBlock();","            if (sawEOF && blockLength===0) {","                break;","            }","            // indicate that there's another block comin'","            encoder.encodeBit(true);","            // write all the statistics","            for (i=0; i<256; i++) {","                encoder.encodeShort(counts[i]);","            }","            // convert counts to cumulative counts","            counts[256] = blockLength;","            for (i=256; i; i--) {","                counts[i-1] = counts[i] - counts[i-1];","            }","            // encode the symbols using the probability table.","            for (i=0; i<blockLength; i++) {","                var ch = block[i];","                encoder.encodeFreq(counts[ch+1]-counts[ch], counts[ch],","                                   counts[256]);","            }","        }","        // write a stop bit","        encoder.encodeBit(false);","        // done!","        encoder.encodeFinish();","    }, true);","    Simple.decompressFile = Util.decompressFileHelper(Simple.MAGIC, function(input, output, size) {","        var decoder = new RangeCoder(input);","        decoder.decodeStart(true/*we already read the 'free' byte*/);","        while (decoder.decodeBit()) {","            var i, counts = [];","            // read all the statistics","            for (i=0; i<256; i++) {","                counts[i] = decoder.decodeShort();","            }","            // compute cumulative stats & total block size","            var blocksize = 0;","            for (i=0; i<256; i++) {","                var tmp = counts[i];","                counts[i] = blocksize;","                blocksize += tmp;","            }","            counts[256] = blocksize;","","            for (i=0; i<blocksize; i++) {","                var cf = decoder.decodeCulFreq(blocksize);","                // inefficient way to look up the symbol.","                var symbol;","                for (symbol=0; symbol<256; symbol++)","                    // careful, there are length-0 ranges","                    // (where counts[symbol]===counts[symbol+1])","                    if (counts[symbol]<=cf && cf < counts[symbol+1])","                        break;","                var ch = symbol;","                decoder.decodeUpdate(counts[symbol+1] - counts[symbol],","                                     counts[symbol], blocksize);","                output.writeByte(symbol);","            }","        }","        decoder.decodeFinish();","    });","    return Simple;","});",""],"l":{"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":0,"13":0,"16":0,"17":0,"18":0,"20":0,"21":0,"23":0,"24":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"43":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":0,"55":0,"56":0,"59":0,"60":0,"61":0,"64":0,"65":0,"66":0,"71":0,"73":0,"75":1,"76":0,"77":0,"78":0,"79":0,"81":0,"82":0,"85":0,"86":0,"87":0,"88":0,"89":0,"91":0,"93":0,"94":0,"96":0,"97":0,"100":0,"101":0,"102":0,"103":0,"105":0,"108":0,"110":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/DeflateDistanceModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/DeflateDistanceModel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":31},"end":{"line":13,"column":64}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":44},"end":{"line":29,"column":63}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":44},"end":{"line":44,"column":55}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":79}},"2":{"start":{"line":6,"column":36},"end":{"line":6,"column":77}},"3":{"start":{"line":7,"column":0},"end":{"line":55,"column":3}},"4":{"start":{"line":11,"column":4},"end":{"line":26,"column":6}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":14}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":36}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":45}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":76}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":32}},"10":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":32}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":71}},"13":{"start":{"line":29,"column":4},"end":{"line":43,"column":6}},"14":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":69}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":19}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":55}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":40}},"20":{"start":{"line":37,"column":8},"end":{"line":37,"column":65}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":58}},"23":{"start":{"line":41,"column":8},"end":{"line":41,"column":58}},"24":{"start":{"line":42,"column":8},"end":{"line":42,"column":52}},"25":{"start":{"line":44,"column":4},"end":{"line":53,"column":6}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":65}},"27":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":21}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":28}},"30":{"start":{"line":50,"column":8},"end":{"line":50,"column":43}},"31":{"start":{"line":51,"column":8},"end":{"line":51,"column":59}},"32":{"start":{"line":52,"column":8},"end":{"line":52,"column":54}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":32}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":0},"end":{"line":6,"column":0}},{"start":{"line":6,"column":0},"end":{"line":6,"column":0}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":27},"end":{"line":16,"column":39}},{"start":{"line":16,"column":43},"end":{"line":16,"column":44}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"4":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":59},"end":{"line":37,"column":60}},{"start":{"line":37,"column":63},"end":{"line":37,"column":64}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]}},"code":["/** Distance model used by gzip/deflate."," *  Encodes distances starting at 0 (for deflate compatibility, subtract"," *  one from distance to encode)."," *  Uses ~32-entry model to predict ln2(distance) (more-or-less) and then"," *  encodes a few more bits for the actual distance. */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./Util'],function(Util){","","    // lengthBitsModelFactory will be called with arguments 2, 4, 8, 16, etc","    // and must return an appropriate model or coder.","    var DeflateDistanceModel = function(size, extraStates,","                                        lgDistanceModelFactory,","                                        lengthBitsModelFactory) {","        var i;","        var bits = Util.fls(size-1);","        this.extraStates = +extraStates || 0;","        this.lgDistanceModel = lgDistanceModelFactory(2*bits + extraStates);","        // this.distanceModel[n] used for distances which are n-bits long,","        // but only n-2 bits are encoded: the top bit is known to be one,","        // and the next bit is encoded by the lgDistanceModel.","        this.distanceModel = [];","        for (i=3 ; i <= bits; i++) {","            var numBits = i - 2;","            this.distanceModel[i] = lengthBitsModelFactory(1<<numBits);","        }","    };","    /* you can give this model arguments between 0 and (size-1), or else","       a negative argument which is one of the 'extra states'. */","    DeflateDistanceModel.prototype.encode = function(distance) {","        if (distance < 4) { // small distance or an 'extra state'","            this.lgDistanceModel.encode(distance + this.extraStates);","            return;","        }","        var lgDistance = Util.fls(distance);","        console.assert(distance & (1<<(lgDistance-1))); // top bit is set","        console.assert(lgDistance >= 3);","        var nextBit = (distance & (1 << (lgDistance-2))) ? 1 : 0;","        var l = 4 + ((lgDistance-3)*2) + nextBit;","        this.lgDistanceModel.encode(l + this.extraStates);","        // now encode the rest of the bits.","        var rest = distance & ((1 << (lgDistance-2)) - 1);","        this.distanceModel[lgDistance].encode(rest);","    };","    DeflateDistanceModel.prototype.decode = function() {","        var l = this.lgDistanceModel.decode() - this.extraStates;","        if (l < 4) {","            return l; // this is a small distance or an 'extra state'","        }","        var nextBit = (l&1);","        var lgDistance = ((l-4) >>> 1) + 3;","        var rest = this.distanceModel[lgDistance].decode();","        return ((2+nextBit) << (lgDistance-2)) + rest;","    };","    return DeflateDistanceModel;","});",""],"l":{"6":1,"7":1,"11":1,"14":0,"15":0,"16":0,"17":0,"21":0,"22":0,"23":0,"24":0,"29":1,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":1,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/DummyRangeCoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-compressjs/node_modules/compressjs/lib/DummyRangeCoder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":33},"end":{"line":7,"column":58}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":33}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":30},"end":{"line":12,"column":42}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":31},"end":{"line":16,"column":43}}},"5":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":29},"end":{"line":20,"column":40}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":41}}},"7":{"name":"(anonymous_7)","line":28,"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":58}}},"8":{"name":"(anonymous_8)","line":31,"loc":{"start":{"line":31,"column":33},"end":{"line":31,"column":61}}},"9":{"name":"(anonymous_9)","line":43,"loc":{"start":{"line":43,"column":34},"end":{"line":43,"column":62}}},"10":{"name":"(anonymous_10)","line":46,"loc":{"start":{"line":46,"column":35},"end":{"line":46,"column":46}}},"11":{"name":"(anonymous_11)","line":49,"loc":{"start":{"line":49,"column":34},"end":{"line":49,"column":60}}},"12":{"name":"(anonymous_12)","line":52,"loc":{"start":{"line":52,"column":36},"end":{"line":52,"column":52}}},"13":{"name":"(anonymous_13)","line":63,"loc":{"start":{"line":63,"column":37},"end":{"line":63,"column":53}}},"14":{"name":"(anonymous_14)","line":66,"loc":{"start":{"line":66,"column":35},"end":{"line":66,"column":63}}},"15":{"name":"(anonymous_15)","line":77,"loc":{"start":{"line":77,"column":35},"end":{"line":77,"column":46}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":79}},"2":{"start":{"line":6,"column":36},"end":{"line":6,"column":77}},"3":{"start":{"line":7,"column":0},"end":{"line":81,"column":3}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":38}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":58}},"7":{"start":{"line":12,"column":4},"end":{"line":15,"column":6}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":49}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},"10":{"start":{"line":16,"column":4},"end":{"line":19,"column":6}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":48}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":40}},"13":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":38}},"15":{"start":{"line":23,"column":4},"end":{"line":27,"column":6}},"16":{"start":{"line":24,"column":8},"end":{"line":24,"column":40}},"17":{"start":{"line":25,"column":8},"end":{"line":25,"column":40}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":28}},"19":{"start":{"line":28,"column":4},"end":{"line":30,"column":6}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":33}},"21":{"start":{"line":31,"column":4},"end":{"line":42,"column":6}},"22":{"start":{"line":32,"column":8},"end":{"line":32,"column":33}},"23":{"start":{"line":33,"column":8},"end":{"line":33,"column":34}},"24":{"start":{"line":34,"column":8},"end":{"line":34,"column":41}},"25":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"26":{"start":{"line":36,"column":12},"end":{"line":37,"column":45}},"27":{"start":{"line":39,"column":8},"end":{"line":39,"column":52}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":52}},"29":{"start":{"line":41,"column":8},"end":{"line":41,"column":53}},"30":{"start":{"line":43,"column":4},"end":{"line":45,"column":6}},"31":{"start":{"line":44,"column":8},"end":{"line":44,"column":48}},"32":{"start":{"line":46,"column":4},"end":{"line":48,"column":6}},"33":{"start":{"line":47,"column":8},"end":{"line":47,"column":17}},"34":{"start":{"line":49,"column":4},"end":{"line":51,"column":6}},"35":{"start":{"line":50,"column":8},"end":{"line":50,"column":60}},"36":{"start":{"line":52,"column":4},"end":{"line":62,"column":6}},"37":{"start":{"line":53,"column":8},"end":{"line":53,"column":34}},"38":{"start":{"line":54,"column":8},"end":{"line":54,"column":57}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":57}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":57}},"41":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"42":{"start":{"line":58,"column":12},"end":{"line":59,"column":50}},"43":{"start":{"line":61,"column":8},"end":{"line":61,"column":43}},"44":{"start":{"line":63,"column":4},"end":{"line":65,"column":6}},"45":{"start":{"line":64,"column":8},"end":{"line":64,"column":44}},"46":{"start":{"line":66,"column":4},"end":{"line":76,"column":6}},"47":{"start":{"line":67,"column":8},"end":{"line":67,"column":33}},"48":{"start":{"line":68,"column":8},"end":{"line":68,"column":34}},"49":{"start":{"line":69,"column":8},"end":{"line":75,"column":9}},"50":{"start":{"line":72,"column":12},"end":{"line":74,"column":60}},"51":{"start":{"line":77,"column":4},"end":{"line":78,"column":6}},"52":{"start":{"line":80,"column":4},"end":{"line":80,"column":17}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":0},"end":{"line":6,"column":0}},{"start":{"line":6,"column":0},"end":{"line":6,"column":0}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":33},"end":{"line":50,"column":34}},{"start":{"line":50,"column":37},"end":{"line":50,"column":59}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"6":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":30}},{"start":{"line":70,"column":12},"end":{"line":70,"column":30}},{"start":{"line":71,"column":12},"end":{"line":71,"column":31}}]}},"code":["/* Dummy Range Coder, for debugging."," * This has the same interface as RangeCoder, but just dumps the frequency"," * parameters given to the file.  This helps debug problems with the model"," * driving the range coder."," */","if (typeof define !== 'function') { var define = require('amdefine')(module); }","define(['./RangeCoder','./Util'],function(RangeCoder,Util){","    var Dummy = function(stream) {","        RangeCoder.call(this, stream);","    };","    Dummy.prototype = Object.create(RangeCoder.prototype);","    Dummy.prototype._write8 = function(b) {","        Util.writeUnsignedNumber(this.stream, b);","        this.stream.writeByte(b);","    };","    Dummy.prototype._write16 = function(s) {","        this.stream.writeByte((s >>> 8) & 0xFF);","        this.stream.writeByte(s & 0xFF);","    };","    Dummy.prototype._read8 = function() {","        return this.stream.readByte();","    };","    Dummy.prototype._read16 = function() {","        var hi = this.stream.readByte();","        var lo = this.stream.readByte();","        return (hi<<8) | lo;","    };","    Dummy.prototype.encodeStart = function(c, initlength) {","        this.stream.writeByte(c);","    };","    Dummy.prototype.encodeFreq = function(sy_f, lt_f, tot_f) {","        console.assert(sy_f > 0);","        console.assert(tot_f > 0);","        console.assert(tot_f <= (1<<23));","        if ((sy_f + lt_f) > tot_f) {","            console.error('dummy coder: lt_f + sy_f > tot_f',","                          sy_f, lt_f, tot_f);","        }","        Util.writeUnsignedNumber(this.stream, sy_f);","        Util.writeUnsignedNumber(this.stream, lt_f);","        Util.writeUnsignedNumber(this.stream, tot_f);","    };","    Dummy.prototype.encodeShift = function(sy_f, lt_f, shift) {","        this.encodeFreq(sy_f, lt_f, 1 << shift);","    };","    Dummy.prototype.encodeFinish = function() {","        return 0;","    };","    Dummy.prototype.decodeStart = function(skipInitialRead) {","        return skipInitialRead ? 0 : this.stream.readByte();","    };","    Dummy.prototype.decodeCulFreq = function(tot_f) {","        console.assert(tot_f > 0);","        this.sy_f = Util.readUnsignedNumber(this.stream);","        this.lt_f = Util.readUnsignedNumber(this.stream);","        this.tot_f= Util.readUnsignedNumber(this.stream);","        if (tot_f !== this.tot_f) {","            console.error('decodeCul* wrong total: got', tot_f,","                          'expected', this.tot_f);","        }","        return (this.sy_f>>>1) + this.lt_f;","    };","    Dummy.prototype.decodeCulShift = function(shift) {","        return this.decodeCulFreq(1<<shift);","    };","    Dummy.prototype.decodeUpdate = function(sy_f, lt_f, tot_f) {","        console.assert(sy_f > 0);","        console.assert(tot_f > 0);","        if (sy_f !== this.sy_f ||","            lt_f !== this.lt_f ||","            tot_f!== this.tot_f) {","            console.error('decodeUpdate wrong parameters; got',","                          sy_f, lt_f, tot_f, 'expected',","                          this.sy_f, this.lt_f, this.tot_f);","        }","    };","    Dummy.prototype.decodeFinish = function() {","    };","","    return Dummy;","});",""],"l":{"6":1,"7":1,"8":1,"9":0,"11":1,"12":1,"13":0,"14":0,"16":1,"17":0,"18":0,"20":1,"21":0,"23":1,"24":0,"25":0,"26":0,"28":1,"29":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"39":0,"40":0,"41":0,"43":1,"44":0,"46":1,"47":0,"49":1,"50":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"63":1,"64":0,"66":1,"67":0,"68":0,"69":0,"72":0,"77":1,"80":1}}}